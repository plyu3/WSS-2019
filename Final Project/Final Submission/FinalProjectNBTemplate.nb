(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    406247,       7544]
NotebookOptionsPosition[    398749,       7426]
NotebookOutlinePosition[    399556,       7453]
CellTagsIndexPosition[    399513,       7450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Implement Petri Net", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.7716857442286043`*^9, 
  3.771685751038966*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["Pumeng Lyu", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.771685753634265*^9, 
  3.771685755958733*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["(Jofre Espigule-Pons)", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
   3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
   3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, 
   3.771685758408799*^9, {3.771686022793871*^9, 
   3.771686028933701*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell["\<\
In my project, I am going to write a package to visualize a mathematical \
modeling language for the description of distributed systems called Petri \
net. Petri net is a set of discrete event dynamic system. Let\
\[CloseCurlyQuote]s further explore the usefulness of Petri net and how I try \
to visualize and make analysis on it step by step.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686180552411*^9, 3.7716861997012653`*^9}, {3.7716862639051323`*^9, 
   3.771686300298769*^9}, {3.771686331806986*^9, 
   3.771686433120767*^9}},ExpressionUUID->"23daff6c-19fe-4986-bc44-\
208556a6dbb4"],

Cell[CellGroupData[{

Cell["What consists of a Petri net?", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 
   3.771686398964229*^9}},ExpressionUUID->"b49099be-a366-4fde-b014-\
2eb32872e588"],

Cell["\<\
A Petri net includes places, transitions and arcs. Arcs must go from a place \
to a transition or vice versa, which makes a Petri net a directed bipartite \
graph and the nodes represent transitions (events that may occur to cause \
change in states, marked by square) and places (conditions, marked by \
circles). These conditions make our first group of functions to check if the \
input structure is a Petri net, with the function named petriNetQ.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 
   3.771687519083227*^9},ExpressionUUID->"3f00114e-937f-4cf7-b7e3-\
d1762a4d61f2"],

Cell["\<\
petriNetQ function checks if the input is a valid PetriNet
Input: <|\"States\" -> list1, \"Transitions\" -> list2,  \"Arcs\" -> list3|>
Helper function: 
\tapplyBooleanToList[logic_, booleanList_]: it is a helper function to apply \
boo-lean operator on a list of conditions.
\tcheck[s_, t_, a_]: this helper function checks if the arcs go from a place \
to a transition or vice versa, and no nodes act as both \t\t\ttransitions and \
places. This is a key factor to \tdetermine the input is a Petri net or not. 
Output: True or False\
\>", "Text",
 CellChangeTimes->{{3.771687298414647*^9, 3.771687514277643*^9}, {
  3.7716900845306*^9, 
  3.771690094950184*^9}},ExpressionUUID->"a2c8877c-7b2d-4a27-a374-\
7e892c368403"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyBooleanToList", "[", 
   RowBox[{"logic_", ",", " ", "booleanList_"}], "]"}], ":=", " ", "\n", "\t", 
  RowBox[{"Fold", "[", 
   RowBox[{"logic", ",", " ", 
    RowBox[{"First", " ", "@", " ", "booleanList"}], ",", " ", 
    RowBox[{"Rest", " ", "@", " ", "booleanList"}]}], "]"}]}]], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"ec90ff51-b3b5-4165-b284-b452ee5df5f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"check", "[", 
   RowBox[{"s_", ",", " ", "t_", ",", " ", "a_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "allPossible", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"allPossible", " ", "=", " ", 
      RowBox[{"Split", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "s"}], "}"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#1", "]"}], "===", 
          RowBox[{"First", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", "\n", 
     "    ", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Intersection", "[", 
           RowBox[{"a", ",", "#"}], "]"}]}], " ", "&"}], "/@", " ", 
        "allPossible"}], "]"}], " ", ">", " ", "0"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->"In[2]:=",ExpressionUUID->"c7ca858a-37ca-4d7a-b736-30554d08b3d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetQ", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "->", " ", "s__"}], ",", 
     RowBox[{"\"\<Transitions\>\"", "->", " ", "t__"}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", "a__"}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "g", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", 
       RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"applyBooleanToList", "[", 
      RowBox[{"And", ",", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Intersection", "[", 
           RowBox[{"s", ",", "t"}], "]"}], " ", "==", " ", 
          RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t", 
         RowBox[{"BipartiteGraphQ", "[", "g", "]"}]}], "}"}]}], "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{3.771689049554954*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"1ebf8948-319e-41f8-984c-dfc824866d2e"],

Cell["\<\
Here is an example of petriNetQ. The input in this case satisfy the condition \
for making a petriNet.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 
   3.771688985991187*^9}},ExpressionUUID->"6a7824ea-cf22-4233-89c0-\
1dceb723e5c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "graph", "]"}], ";"}], "\n", 
 RowBox[{"graph", " ", "=", 
  RowBox[{"petriNetQ", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
        "h"}], "}"}]}], ",", 
     RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
       "}"}]}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", 
      RowBox[{"List", " ", "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"c", "\[Rule]", "t1"}], ",", 
         RowBox[{"t1", "\[Rule]", "d"}], ",", 
         RowBox[{"t1", "\[Rule]", "e"}], ",", 
         RowBox[{"t2", "\[Rule]", "a"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "c"}], ",", 
         RowBox[{"t2", "\[Rule]", "f"}], ",", 
         RowBox[{"d", "\[Rule]", "t3"}], ",", 
         RowBox[{"e", "\[Rule]", "t3"}], ",", 
         RowBox[{"t3", "\[Rule]", "g"}], ",", 
         RowBox[{"c", "\[Rule]", "t4"}], ",", 
         RowBox[{"f", "\[Rule]", "t4"}], ",", 
         RowBox[{"t4", "\[Rule]", "e"}], ",", 
         RowBox[{"t4", "\[Rule]", "h"}], ",", 
         RowBox[{"h", "\[Rule]", "t5"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"g", "\[Rule]", "t6"}]}], "}"}]}]}]}], "|>"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.771675908473971*^9, 3.7716759121049023`*^9}, {
   3.7716875735400248`*^9, 3.771687864687045*^9}, {3.7716879314655857`*^9, 
   3.7716879923091593`*^9}, {3.771688035093364*^9, 3.771688124072446*^9}, {
   3.771688356104116*^9, 3.77168835784394*^9}, {3.771688399413743*^9, 
   3.771688399632266*^9}, 3.771688447133608*^9, {3.771688494008086*^9, 
   3.7716887595514593`*^9}, 3.771688803053347*^9, {3.771688926947785*^9, 
   3.771688928700877*^9}, {3.771689118294434*^9, 3.771689165512939*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8e35565b-2592-45f5-8649-76b182eab020"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.771688704953764*^9, 3.771688760282246*^9, 3.771688803576728*^9, {
   3.7716890128319473`*^9, 3.7716890536374483`*^9}, 3.7716891719930983`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"37372e8a-e869-4fd5-9dc1-6f3b3c099bab"]
}, Open  ]],

Cell["\<\
But what is the Petri net looks like? Here we need a function to visualize \
Petri net with the help of Graph function. First we need to make a \
petriNetData function close to the OceanData function already in the wolfram \
language repository.
petriNet returns the graph visualization of the petri net in a graph form.
Input: <|\[CloseCurlyDoubleQuote]States\[CloseCurlyDoubleQuote] -> list1, \
\[OpenCurlyDoubleQuote]Transitions\[CloseCurlyDoubleQuote] -> list2,  \
\[OpenCurlyDoubleQuote]Arcs\[CloseCurlyDoubleQuote] -> list3|>
Output: A list includes graph, with its places, transitions and arcs, if the \
input is a valid Petri Net, or tagged Failed is the input is not a Petri Net.\
\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689346058982*^9}, {
   3.7716893842543783`*^9, 3.771689420221116*^9}, {3.771689467272953*^9, 
   3.77168949538177*^9}},ExpressionUUID->"996da0f6-1bcf-4737-9dff-\
2e2a937463c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetData", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "->", "s__"}], ",", 
     RowBox[{"\"\<Transitions\>\"", "->", "t__"}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", "a__"}]}], "|>"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"petriNetQ", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<States\>\"", "->", "s"}], ",", 
       RowBox[{"\"\<Transitions\>\"", "->", "t"}], ",", " ", 
       RowBox[{"\"\<Arcs\>\"", "->", " ", "a"}]}], "|>"}], "]"}], ",", " ", 
    "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", " ", 
        RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}], ",", " ", 
        RowBox[{"VertexShapeFunction", " ", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"s", "->", "\"\<Circle\>\""}], "]"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{"t", "->", " ", "\"\<Square\>\""}], "]"}]}], "]"}]}], ",",
         "\n", "\t", 
        RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", " ", 
        RowBox[{"VertexStyle", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"s", " ", "\[Rule]", " ", "LightBlue"}], "]"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{"t", " ", "->", " ", "LightGray"}], "]"}]}], "]"}]}], ",",
         " ", 
        RowBox[{"VertexSize", "->", "Large"}]}], "]"}], ",", " ", "\n", "\t", 
      "s", ",", "t", ",", 
      RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", ";", " ", 
     RowBox[{"Print", "[", "\"\<Fail!\>\"", "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.771674919822431*^9, 3.7716749201493187`*^9}, {
   3.771674968564487*^9, 3.771675037914268*^9}, {3.771675080110948*^9, 
   3.771675087263629*^9}, {3.771675384881175*^9, 3.771675388446395*^9}, 
   3.771688828499237*^9, {3.771688858520293*^9, 3.771688878071103*^9}, {
   3.771689451007882*^9, 3.7716894515062838`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"36ed3164-4511-4267-af9a-401e89d87dec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "graph", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "=", 
  RowBox[{"petriNetData", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
        "h"}], "}"}]}], ",", 
     RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
       "}"}]}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", 
      RowBox[{"List", " ", "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"c", "\[Rule]", "t1"}], ",", 
         RowBox[{"t1", "\[Rule]", "d"}], ",", 
         RowBox[{"t1", "\[Rule]", "e"}], ",", 
         RowBox[{"t2", "\[Rule]", "a"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "c"}], ",", 
         RowBox[{"t2", "\[Rule]", "f"}], ",", 
         RowBox[{"d", "\[Rule]", "t3"}], ",", 
         RowBox[{"e", "\[Rule]", "t3"}], ",", 
         RowBox[{"t3", "\[Rule]", "g"}], ",", 
         RowBox[{"c", "\[Rule]", "t4"}], ",", 
         RowBox[{"f", "\[Rule]", "t4"}], ",", 
         RowBox[{"t4", "\[Rule]", "e"}], ",", 
         RowBox[{"t4", "\[Rule]", "h"}], ",", 
         RowBox[{"h", "\[Rule]", "t5"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"g", "\[Rule]", "t6"}]}], "}"}]}]}]}], "|>"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.771689358347481*^9, 3.771689366669503*^9}, {
  3.77168945491753*^9, 3.771689455371284*^9}, {3.771689561760415*^9, 
  3.7716895715438433`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ae23dd54-456c-469c-8019-5896bad3c888"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f, $CellContext`g, $CellContext`h, \
$CellContext`t1, $CellContext`t2, $CellContext`t3, $CellContext`t4, \
$CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 9}, {2, 9}, {3, 9}, {
         9, 4}, {9, 5}, {10, 1}, {10, 2}, {10, 2}, {10, 2}, {10, 3}, {10, 
         6}, {4, 11}, {5, 11}, {11, 7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {
         8, 13}, {13, 7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {
        VertexLabels -> {"Name"}, 
         VertexShapeFunction -> {$CellContext`t6 -> "Square", $CellContext`t5 -> 
           "Square", $CellContext`t4 -> "Square", $CellContext`d -> 
           "Circle", $CellContext`g -> "Circle", $CellContext`h -> 
           "Circle", $CellContext`b -> "Circle", $CellContext`f -> 
           "Circle", $CellContext`e -> "Circle", $CellContext`t2 -> 
           "Square", $CellContext`c -> "Circle", $CellContext`t1 -> 
           "Square", $CellContext`t3 -> "Square", $CellContext`a -> "Circle"},
          VertexSize -> {Large}, 
         VertexStyle -> {$CellContext`h -> 
           RGBColor[0.87, 0.94, 1], $CellContext`g -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
           GrayLevel[0.85], $CellContext`t6 -> 
           GrayLevel[0.85], $CellContext`e -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
           GrayLevel[0.85], $CellContext`a -> 
           RGBColor[0.87, 0.94, 1], $CellContext`b -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t5 -> 
           GrayLevel[0.85], $CellContext`d -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
           GrayLevel[0.85], $CellContext`f -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t2 -> 
           GrayLevel[0.85], $CellContext`c -> RGBColor[0.87, 0.94, 1]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
           4.664440747183114}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
           4.335559252816889}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
           4.500000000000026}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
           4.499999999999981}, {1., 4.}}], 0.2], 
          ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
          ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
          ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
          ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
          ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
          ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
          ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
          ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
          ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
          ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
           5.335559252816896}, {1., 5.}}], 0.2], 
          ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
           5.664440747183141}, {1., 5.}}], 0.2], 
          ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
          ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
          ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
          ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
          ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
           1.3355592528169071`}, {2., 1.}}], 0.2], 
          ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
           1.6644407471831297`}, {2., 1.}}], 0.2]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
           InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
           InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
           InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
           InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
           InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
           InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
           InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
           InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{0.8235294, 3.8235294}, {1.1764706, 4.1764706}]}, 
           InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, 5.8235294}, {2.1764706, 6.1764706}]}, 
           InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, 1.8235294}, {2.1764706, 2.1764706}]}, 
           InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{2.8235294, 3.8235294}, {3.1764706, 4.1764706}]}, 
           InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{2.8235294, 1.8235294}, {3.1764706, 2.1764706}]}, 
           InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
           InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
     "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"a", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"b", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"b", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"c", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"t1", "\[DirectedEdge]", "d"}], ",", 
     RowBox[{"t1", "\[DirectedEdge]", "e"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "a"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "c"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "f"}], ",", 
     RowBox[{"d", "\[DirectedEdge]", "t3"}], ",", 
     RowBox[{"e", "\[DirectedEdge]", "t3"}], ",", 
     RowBox[{"t3", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"c", "\[DirectedEdge]", "t4"}], ",", 
     RowBox[{"f", "\[DirectedEdge]", "t4"}], ",", 
     RowBox[{"t4", "\[DirectedEdge]", "e"}], ",", 
     RowBox[{"t4", "\[DirectedEdge]", "h"}], ",", 
     RowBox[{"h", "\[DirectedEdge]", "t5"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"g", "\[DirectedEdge]", "t6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771689367305394*^9, 3.771689461076956*^9, 
  3.771689572257666*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"fefb02ed-546f-423a-9cf9-dddc1c55f831"]
}, Open  ]],

Cell["\<\
A Petri net includes places, transitions and arcs. Arcs must go from a place \
to a transition or vice versa, which makes a Petri net a directed bipartite \
graph and the nodes represent transitions (events that may occur to cause \
change in states, marked by square) and places (conditions, marked by \
circles). \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.7716905542748632`*^9, 
   3.7716905739428463`*^9}},ExpressionUUID->"375484a4-5a91-4c3b-9339-\
42372ea042c5"],

Cell["\<\
Also we need another thing in Petri net: tokens. The tokens describe the \
current state in each places, and the number of the tokens determine the \
firing option to the next state, as we will explain in detail later. Now we \
can add text-dot to show the tokens and visualize the Petri net as its \
initial state.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771690497144916*^9, 
   3.771690503762805*^9}},ExpressionUUID->"5d1f44d9-839a-4dca-9672-\
52d748569a1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"textDot", "[", 
   RowBox[{"vertex_", ",", " ", "n_", ",", " ", "coordinatesDict_"}], "]"}], ":=",
   " ", 
  RowBox[{"Text", "[", 
   RowBox[{
    RowBox[{"StringRepeat", "[", 
     RowBox[{"\"\<\[FilledSmallCircle]\>\"", ",", " ", "n"}], "]"}], ",", " ", 
    RowBox[{"coordinatesDict", "[", "vertex", "]"}]}], "]"}]}]], "Code",
 CellLabel->"In[17]:=",ExpressionUUID->"4ae68435-51f7-400b-8184-fd9e6c3a8459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildDotsList", "[", 
   RowBox[{
   "coordinateDict_", ",", " ", "vertexWeightDict_", ",", " ", "vertices_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"res", ",", 
          RowBox[{"textDot", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"vertexWeightDict", "[", "#", "]"}], ",", " ", 
            "coordinateDict"}], "]"}]}], "]"}], "&"}], ",", " ", "vertices"}],
       "]"}], ";", "\n", "\t", "res"}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[18]:=",ExpressionUUID->"ed033309-5d85-4813-9895-ba1760d8bfd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetInit", "[", 
   RowBox[{"pnet_", ",", "init_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g", ",", " ", "coordinatesDict", ",", " ", "vertexWeightDict", ",", " ",
       "graphData", ",", " ", "vertexWeight", ",", " ", "vertexWeightsDict", 
      ",", " ", "epilog"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"First", " ", "@", " ", "pnet"}], ",", " ", 
        RowBox[{"VertexWeight", " ", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"pnet", ",", "2"}], "]"}], " ", "->", " ", "init"}], 
            "]"}], ",", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"pnet", ",", "3"}], "]"}], " ", "->", " ", "0"}], 
            "]"}]}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"graphData", " ", "=", " ", 
      RowBox[{"ToExpression", " ", "@", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ToString", "[", 
           RowBox[{"FullForm", "[", "g", "]"}], "]"}], ")"}], ",", " ", 
         RowBox[{"\"\<Graph\>\"", " ", "->", " ", "\"\<List\>\""}]}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"vertexWeight", " ", "=", " ", 
      RowBox[{"Last", " ", "@", " ", 
       RowBox[{"(", 
        RowBox[{"Last", " ", "@", " ", 
         RowBox[{"graphData", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ";", "\n", "\t", 
     RowBox[{"coordinatesDict", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"graphData", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "->", " ", 
          "VertexCoordinates"}], " ", "/.", " ", 
         RowBox[{"AbsoluteOptions", "[", 
          RowBox[{"g", ",", " ", "VertexCoordinates"}], "]"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"vertexWeightsDict", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"graphData", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "->", " ", "vertexWeight"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"epilog", " ", "=", " ", 
      RowBox[{"buildDotsList", "[", 
       RowBox[{"coordinatesDict", ",", " ", "vertexWeightsDict", ",", " ", 
        RowBox[{"graphData", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Graph", "[", 
      RowBox[{"g", ",", " ", 
       RowBox[{"Epilog", " ", "->", " ", "epilog"}]}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->"In[19]:=",ExpressionUUID->"fcb59257-154a-4aa1-986b-be7dfef2c362"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"petriNetInit", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "0", ",", "0", ",", "5", ",", "3", ",", "0", ",", 
     "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771689585913856*^9, 3.771689624518352*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"48811983-6035-4691-a3f1-d9b6e8951153"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f, $CellContext`g, $CellContext`h, \
$CellContext`t1, $CellContext`t2, $CellContext`t3, $CellContext`t4, \
$CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 9}, {2, 9}, {3, 9}, {
       9, 4}, {9, 5}, {10, 1}, {10, 2}, {10, 2}, {10, 2}, {10, 3}, {10, 6}, {
       4, 11}, {5, 11}, {11, 7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 
       13}, {13, 7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
         Text["\[FilledSmallCircle]", {0., 5.}], 
         Text["\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
         Text["", {2., 5.}], 
         Text["", {1., 3.}], 
         Text[
         "\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
         Text[
         "\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 
          5.}], 
         Text["", {2., 1.}], 
         Text["\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
         Text["", {1., 4.}], 
         Text["", {2., 6.}], 
         Text["", {2., 2.}], 
         Text["", {3., 4.}], 
         Text["", {3., 2.}], 
         Text["", {2., 0.}]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {"Name"}, 
       VertexShapeFunction -> {$CellContext`t3 -> "Square", $CellContext`c -> 
         "Circle", $CellContext`b -> "Circle", $CellContext`t1 -> 
         "Square", $CellContext`h -> "Circle", $CellContext`t6 -> 
         "Square", $CellContext`t4 -> "Square", $CellContext`e -> 
         "Circle", $CellContext`d -> "Circle", $CellContext`t2 -> 
         "Square", $CellContext`g -> "Circle", $CellContext`t5 -> 
         "Square", $CellContext`a -> "Circle", $CellContext`f -> "Circle"}, 
       VertexSize -> {Large}, 
       VertexStyle -> {$CellContext`t6 -> GrayLevel[0.85], $CellContext`h -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
         GrayLevel[0.85], $CellContext`t5 -> GrayLevel[0.85], $CellContext`f -> 
         RGBColor[0.87, 0.94, 1], $CellContext`b -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
         GrayLevel[0.85], $CellContext`a -> 
         RGBColor[0.87, 0.94, 1], $CellContext`e -> 
         RGBColor[0.87, 0.94, 1], $CellContext`d -> 
         RGBColor[0.87, 0.94, 1], $CellContext`c -> 
         RGBColor[0.87, 0.94, 1], $CellContext`g -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
         GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
       VertexWeight -> {1, 2, 0, 0, 5, 3, 0, 2, 0, 0, 0, 0, 0, 0}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
         4.664440747183114}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
         4.335559252816889}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
         4.500000000000026}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
         4.499999999999981}, {1., 4.}}], 0.2], 
        ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
        ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
        ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
        ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
        ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
        ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
        ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
        ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
        ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
        ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
         5.335559252816896}, {1., 5.}}], 0.2], 
        ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
         5.664440747183141}, {1., 5.}}], 0.2], 
        ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
        ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
        ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
        ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
         1.3355592528169071`}, {2., 1.}}], 0.2], 
        ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
         1.6644407471831297`}, {2., 1.}}], 0.2]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
         InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
         InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
         InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
         InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
         InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
         InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
         InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
         InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{0.8235294, 3.8235294}, {1.1764706, 4.1764706}]}, 
         InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, 5.8235294}, {2.1764706, 6.1764706}]}, 
         InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, 1.8235294}, {2.1764706, 2.1764706}]}, 
         InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{2.8235294, 3.8235294}, {3.1764706, 4.1764706}]}, 
         InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{2.8235294, 1.8235294}, {3.1764706, 2.1764706}]}, 
         InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
         InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 
     5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1., 3.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
      TraditionalForm], {3., 5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 1.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 
     3.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1., 4.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 6.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 2.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3., 4.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3., 2.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 0.}]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.771689626033936*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"24c5fdda-c98d-473b-92da-bcf33931d38f"]
}, Open  ]],

Cell["\<\
Now we can clearly see what a Petri net is. These blue circles: a, b, c, d, \
e, f, g, some with dots(tokens) are places; these gray squares: t1, t2, t3, \
t4, t5, t6 are transitions; and the edges connected between places and \
transitions are arcs. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 
   3.77168985424896*^9},ExpressionUUID->"3159de7b-45ed-4cd2-89ea-\
2d7484bd465d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Codes for Petri net visualization", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.7716870365262814`*^9, 3.771687056829726*^9}, 
   3.771687088404793*^9},ExpressionUUID->"40eb5353-3697-4650-9c97-\
38c6a9712c4c"],

Cell["\<\
The next step is to make our Petri net \[OpenCurlyDoubleQuote]running\
\[CloseCurlyDoubleQuote]. To do this we need the rules for \
\[OpenCurlyDoubleQuote]firing\[CloseCurlyDoubleQuote]. Firing means the \
tokens from source places with a transition move to source states based on \
the number of edges between nodes. For example, as the Petri net showed \
above, place a now has 1 token, and the number of edges between a and t1 is \
2, which means place a needs to consume 2 tokens to set up transition t1. The \
system will randomly select one transition that meets the requirement to \
fire. For example, if the condition to start transition t1, as t1 has 1 edge \
to d, and one edge to g, so it will pass 1 token to place d and 1 token to \
place g. Now we write codes to achieve these firing rules.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 
   3.771690651020948*^9}},ExpressionUUID->"f47315fb-6e5d-47af-988f-\
c42b042ce630"],

Cell["\<\
petriNetRun[petriNet, initial-tokens, steps]
input: A petriNet and number of tokens in each places, and the steps that the \
user wants to run.
output: dynamic visualization of how tokens move from state to state in the \
first n steps.\
\>", "Text",
 CellChangeTimes->{{3.7716900690173683`*^9, 
  3.7716900711435966`*^9}},ExpressionUUID->"42027586-2542-4d1f-8a19-\
76e0f0e2d4a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkFiring", "[", 
   RowBox[{"pnet_", ",", " ", "transition_", ",", " ", "current_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "tokenList", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokenList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"#", " ", "\[DirectedEdge]", " ", "transition"}]}], 
          "]"}]}], " ", "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", " ", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"AllTrue", "[", 
      RowBox[{
       RowBox[{"current", " ", "-", " ", "tokenList"}], ",", " ", 
       "NonNegative"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[21]:=",ExpressionUUID->"40e2830c-f2be-4ab2-8600-ac8700c26637"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeFiring", "[", 
   RowBox[{"pnet_", ",", " ", "transition_", ",", " ", "current_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tokenDeleteList", ",", "tokenAddList"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokenDeleteList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"#", "\[DirectedEdge]", "transition"}]}], "]"}]}], " ", 
        "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"tokenAddList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"transition", "\[DirectedEdge]", "#"}]}], "]"}]}], " ", 
        "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{
     "current", " ", "-", " ", "tokenDeleteList", " ", "+", " ", 
      "tokenAddList"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[22]:=",ExpressionUUID->"3b72b55a-752d-496c-9680-388ba7cb2045"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"updateFiring", "[", "pnet_", "]"}], "[", "current_", "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "index", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"index", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"checkFiring", "[", 
             RowBox[{"pnet", ",", " ", "#", ",", " ", "current"}], "]"}], " ",
             "&"}], "/@", " ", 
           RowBox[{"pnet", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", "True"}], "]"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "index", "]"}], ",", " ", "\n", "\t", 
       RowBox[{"makeFiring", "[", 
        RowBox[{"pnet", ",", " ", 
         RowBox[{"pnet", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "index"}], "]"}], "]"}], ",", " ", "current"}], 
        "]"}], ",", " ", "\n", "\t", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Dead!\>\"", "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[23]:=",ExpressionUUID->"7094da66-edb8-44b2-bbad-9dcd56752430"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "petriNetRun", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"petriNetRun", "[", 
   RowBox[{"pnet_", ",", " ", "init_", ",", " ", "step_Integer"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"current", " ", "=", " ", "init"}], ",", " ", "g", ",", " ", 
      "index"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"current", " ", "=", " ", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{"updateFiring", "[", "pnet", "]"}], ",", " ", "current", ",", 
        " ", 
        RowBox[{"step", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"index", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"checkFiring", "[", 
             RowBox[{"pnet", ",", " ", "#", ",", " ", "current"}], "]"}], " ",
             "&"}], "/@", " ", 
           RowBox[{"pnet", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", "True"}], "]"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "index", "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{"makeFiring", "[", 
        RowBox[{"pnet", ",", " ", 
         RowBox[{"pnet", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "index"}], "]"}], "]"}], ",", " ", "current"}], 
        "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Dead!\>\"", "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"petriNetInit", "[", 
       RowBox[{"pnet", ",", " ", "current"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", " ", 
       RowBox[{"{", 
        RowBox[{"pnet", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "index"}], "]"}], "]"}], "}"}]}], "]"}]}]}], "\n",
    "]"}]}]}], "Code",
 CellLabel->"In[24]:=",ExpressionUUID->"a0ae6461-c5d0-48d7-8852-24e932df858f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"petriNetRun", "[", 
      RowBox[{"graph", ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "0", ",", "0", ",", "5", ",", "3", ",", "0", ",", 
         "2"}], "}"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77169067175078*^9, 3.771690785017421*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"4f9f4b83-2fca-4e66-b49b-4ab6b6f3025c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i12$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i12$$ = 1}, 
     "\"max\"" :> {$CellContext`i12$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i12$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i12$6358$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i12$$], {1, 10, 1},
                  AnimationRate->2,
                  AnimationRunTime->1696.2350764274597`,
                  AnimationRunning->True,
                  AnimationTimeIndex->1.7826690673828125`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t5}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 2, 0, 0, 5, 3, 0, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t6}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 2, 0, 0, 5, 3, 3, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 5, 0, 0, 6, 3, 0, 3, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 4->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 5, 1, 0, 5, 4, 2, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 5->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t6}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 5, 1, 0, 5, 4, 5, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 6->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 8, 1, 0, 6, 4, 2, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 7->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t5}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 6, 0, 0, 6, 4, 0, 3, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 8->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 8, 1, 0, 6, 4, 8, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 9->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 5.}], 
                    Text["\[FilledSmallCircle]\[FilledSmallCircle]", {1., 
                    3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t3}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 10, 2, 2, 7, 7, 2, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 10->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {4, 11, 2, 0, 6, 5, 7, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i12$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i12$$, \
$CellContext`i12$6358$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 10, 1}, 10, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{309., {243.884033203125, 249.615966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7716906723209667`*^9, 3.771690718043619*^9}, {
  3.771690775647368*^9, 3.7716907861370993`*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"2972fb07-ed16-4820-b4ae-9c7dc0f8fa54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["User interface and animation", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.7716870365262814`*^9, 3.771687056829726*^9}, {3.771687088404793*^9, 
   3.771687108958023*^9}},ExpressionUUID->"6546414a-3e9f-420a-b124-\
7c862b2daa92"],

Cell["\<\
A Petri net requires places, transitions, arcs, tokens and firing rules. It \
requires a lot of input for the users, which is not convenient. To make user \
input data for a Petri net easier, we are going to create a user interface \
and the program will translate the input from users to be a PetriNetData \
structure. Here is the code to start the user interface and helper functions \
to translate the input to be a Petri net data.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 
   3.771691251616454*^9}},ExpressionUUID->"98a3d490-da6c-437f-994c-\
37456e70b5de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "makeMultipleEdges", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeMultipleEdges", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<from\>\"", "->", "in_"}], ",", 
     RowBox[{"\"\<to\>\"", "->", "out_"}], ",", 
     RowBox[{"\"\<numbers\>\"", "->", "num_"}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", "num"}], ",", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"l", ",", 
         RowBox[{"{", 
          RowBox[{"in", ",", "out"}], "}"}]}], "]"}]}], "]"}], ";", " ", "\n",
      "\t", "l"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->"In[44]:=",ExpressionUUID->"f01c6582-3435-4013-b30c-b8a5f0c87059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "inputTranslator", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputTranslator", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Places\>\"", " ", "->", " ", "placeList_"}], ",", " ", 
     RowBox[{"\"\<Transitions\>\"", " ", "->", " ", "transitionList_"}], ",", 
     " ", 
     RowBox[{"\"\<Arcs\>\"", " ", "->", " ", "arcList_"}], ",", " ", "\n", 
     RowBox[{"\"\<Initial States\>\"", "->", " ", 
      RowBox[{"<|", 
       RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init_"}], "|>"}]}], ",", " ", 
     RowBox[{"\"\<Steps\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
       "\"\<Input the steps you want to animate\>\"", "->", " ", "steps_"}], 
       "|>"}]}]}], "|>"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "initialState", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"initialState", " ", "=", " ", 
      RowBox[{"ToExpression", " ", "/@", " ", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"init", ",", "\"\<,\>\""}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<States\>\"", "->", " ", 
          RowBox[{"First", " ", "/@", " ", 
           RowBox[{"Values", " ", "/@", " ", "placeList"}]}]}], ",", " ", 
         "\n", "\t", 
         RowBox[{"\"\<Transitions\>\"", "->", " ", 
          RowBox[{"First", "/@", " ", 
           RowBox[{"Values", " ", "/@", " ", "transitionList"}]}]}], ",", 
         "\n", "\t", 
         RowBox[{"\"\<Arcs\>\"", "->", 
          RowBox[{"Join", " ", "@@", " ", 
           RowBox[{"makeMultipleEdges", " ", "/@", " ", "arcList"}]}]}]}], 
        "|>"}], ",", " ", "initialState", ",", " ", "steps"}], "}"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->"In[46]:=",ExpressionUUID->"54fbc894-7033-4a57-a320-8755b56f3fb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "makePetriNetFromInput", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makePetriNetFromInput", "[", "input_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inputPnetData", ",", " ", "initState", ",", " ", "steps", ",", " ", 
      "pnet"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"inputPnetData", ",", " ", "initState", ",", " ", "steps"}], 
       "}"}], " ", "=", " ", 
      RowBox[{"inputTranslator", "[", "input", "]"}]}], ";", "\n", "\t", 
     RowBox[{"pnet", " ", "=", " ", 
      RowBox[{"petriNet", "[", "inputPnetData", "]"}]}], ";", "\n", "\t", 
     RowBox[{"ListAnimate", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"petriNetRun", "[", 
          RowBox[{"pnet", ",", "initState", ",", " ", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "steps"}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"AnimationRate", "->", "1.5"}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[48]:=",ExpressionUUID->"68769efd-464f-4d7f-afed-0305e3d44130"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriNetGeneral", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriNetGeneral", "[", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Places\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", "\n", "\t", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{"\"\<Circles\>\"", "->", " ", "\"\<String\>\""}], "|>"}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"\"\<Transitions\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{"\"\<Squares\>\"", "->", " ", "\"\<String\>\""}], "|>"}], 
          "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Arcs\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<from\>\"", "->", " ", "\"\<String\>\""}], ",", 
            RowBox[{"\"\<to\>\"", "->", " ", "\"\<String\>\""}], ",", 
            RowBox[{"\"\<numbers\>\"", "->", " ", 
             RowBox[{"\"\<Integer\>\"", "->", "1"}]}]}], "|>"}], "]"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Initial States\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "\"\<String\>\""}], "}"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Steps\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Input the steps you want to animate\>\"", "->", " ", 
           RowBox[{"\"\<Integer\>\"", "->", "5"}]}], "}"}], "]"}]}]}], "|>"}],
      ",", " ", "makePetriNetFromInput"}], "]"}], "[", "]"}]}]}], "Code",
 CellChangeTimes->{3.771675406334553*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"10e36ae1-b155-4f2b-ae6b-2f130d8935e7"],

Cell["\<\
So when we start the function PetriNetGeneral[], the program will pop out a \
menu to ask users to input places, transitions, arcs, initial state and steps \
they want to animate. Below is an example of the user\[CloseCurlyQuote]s \
interface and the animation after we click \[OpenCurlyDoubleQuote]submit\
\[CloseCurlyDoubleQuote] button.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 
   3.7716916207835608`*^9}},ExpressionUUID->"1b316858-98de-4dbf-99b5-\
953cfb80717f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/luzhiryou/Documents/GitHub/WSS-2019/Final Project\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<GenInterface.jpg\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.771691705807214*^9, 3.7716917524253902`*^9}, {
  3.771691864013026*^9, 3.771691938672223*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"2ecce3f0-d148-458d-94c9-83316be56d46"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmUFOW5//HcLDe5udlubk5ucpObm+Wem9wlNwoao8YkqDFRY05ijCau
7DuyySIooiCggLgQxV0ENwQUUBZFCPtMd8/0zDAocRiYFYYZlgFm6xmZ+j//
fs6856Wqp6fp7pr1+znHPtXVVdXV40vVr9636n2/03/0tYM//rGPfWz8Z+Tl
2n6T+owb1+/OP3xJ3vzx9vHDhtw+aOCVt98xaMigcT/p/wmZ+QV5GS///f9p
BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhYc3Ozviqd+dFHH7kW
O336tM5vamqSCfvVfGo2pTPNp2bCbFmWdy2sW/BOfBRl3sqmzCr2T9BlGhsb
zW8xG7f3zbUbumOuX23WjbmiPdP8lcyE9+9gVnf9Uu++nY5yAAAAuqY4IU1D
jqYdV47yZkJh0qMsZodDk9Y09cXcB/sb7QkXV451pV87qjlnpll7fiQSMftp
VnR9tSsNejOtvSe6QfsvaVKr63eJhoYG58xcKtNma97/HQAAAF2CKyja06bq
zzkzd7mWtOs57cUcTyWeCVEmuanWEp3sgF2Van+7N3bW19fbe2VnSzvC2RWS
ZgHXWq7oaIKxd3nzV9It6xbs/TdrmYju3Y6EUnt/qLQEAABdmklQzpnJzY5J
jpWL7CRpR0rdTsw2dNd2li5d+r3vfW/JkiWOp+7RFR29SdU0XrsqUe3pw4cP
S2BzVW+6dt4VEe3sZzJhzBZt79bsCK3TFRUVN91004ABA/r167dy5UpXS7dO
mCZ+s65+r/cPCAAA0Pm5UpbGns9//vOf/OQnP/axj33uc5+78MILN2zY4IpA
jpWgZKK+vl7i044dO+zNag1ezFwq5s6dK9ufOXOmvi0tLf34xz9+zjnn6Nvf
//73X/3qV2PeEmlmSm4cNGiQfKmrGf2ll176l3/5l7/7u7/71Kc+deONN0rC
dKzs6qo1NTtmoqM31OkPMV9q/xZX1aKdPOUXSbD81a9+9YlPfGLq1KmOlWP1
K3Jzc3fu3Ll9+3ZtGZctV1VVydtt27YVFBS4/z8BAAB0BeZ+SFNj+aUvfUky
3vPPPy+J6J/+6Z8kXh45csQsYD+zo6Fr//79khKXLFnibTs21ZjeR1QqKirM
nKKiIo2ymzZtkuWvvfbar3/96/qpZjl7I7r9AwcOyPKyk+ZXyOubb74pkfK7
3/3uY489NmXKlP/93/89duyY62c6sdrW9dXkRvONdku36++mgVCZxVxRc9++
fbKT06ZNc1XwymLyF/5Y1IcffqgLv/rqq7LzMmfgwIGJ/a8DAADojMwdj5Kg
JFj++te/1vkzZsyQtCN5T6b37t17xRVX/OM//uM3v/nNefPmafS65JJLvvOd
73z84x//6le/+sMf/vAHP/jB9u3bnWju+v73v7969eqHH35YZn7605+W4CTz
/+d//ue///u/JfLJxNKlSzWwlZSUSKD61Kc+pd/7+9///stf/rITjXOSWi+/
/PIvfOEL3/72t++77z5d/uKLL5a3kkVlT2TjssEtW7bI/N69e3/mM5+RrZkf
pcvLzowZM+Yb3/jGF7/4xeuuu66qqkp3/j//8z//8pe/3HjjjbLzffr0ycvL
0xs75ZdeeeWV8kvlp82aNUsXPnHihOz28uXLH3roIflpsrfLli2T+RJxR40a
JZuSjd96662BQMBpqRTVyH333Xd7nz0/77zzZs6cafK2RtP6+vrrr7++X79+
7fL/HAAAIM28j8NIitOAJ3Hotttuk2iUm5t77Nixr3/96xLA7rzzzt/85jda
RSnLSKb63e9+J28l/o0dO3bEiBEffPCBbFNimCTS//qv/5KkJ1vr27evxDbZ
4IQJE0aOHKmrPProo7oDpaWl8vZPf/qTrCLf9cc//vFrX/ua7FJ1dbV+6cSJ
E3/7299KfH3ppZdk+fHjx1999dWyigRd+cbbb7/9/fffl+U/+9nPXnrppd4W
6ptvvlkWvummm2QP5dfJuk40bX7iE5+Q+RdeeOG1114rG5dXWfjkyZP/EjVp
0iRZUpZ54YUXZPmamhpZWH6RhOSrrrpK/jKyqzJf/g6yh7IPQ4cO/dznPieh
12mp4SwoKJDNalO4666AH/3oRw8++KB5a1b5wx/+MGDAAP/+dwMAAPjH1f2j
E73HUmLVdddd961vfeuTn/yk5C6ZKSFQMtL8+fOLi4uLioq++MUvSjjUVTZu
3CiJ68UXX3SsmCrxTGZKUFy/fr3d3Kx1d4FAQLa2YMECnVNWViYLP/DAA//3
f/936623SsLUpvCnn35a5stiJSUl8r2SCSV36S2RGzZskI8WL15smqErKipk
zvXXXy/TkydP/oeoRYsWHT16VL6rT58+ZVF//vOfJStKqpTvleUvu+wybdQ+
99xz//mf/1m2LKvovsk3SuKVX6pfeurUKW28lq92Wup4ta8h2cLBgwfXrl37
s5/9TBaQb9E/wr59++QPKFHcdUunE625lT+mPUfJ/hMsAQBAF2Xai83jNpLf
vvzlL1988cVXXXXVzJkzJZjJR3fccYfGKq3lk+h10UUXaSKS6CgBUqv1zIMw
1dXVMvOGG25wrOBknrLJzMyUjTz22GM6v7CwUDY7a9asJUuWfOYzn/ntb3/7
la98RYLf2LFj5Yu0lVy//ac//anTkmblI/1SUxkoc77//e/L9iX7yQ7LDshX
bNmyRe9dtEkOlJ2R79IgKtMSpCUESkydOHGiLiNb0xV79eolyxw7dkzm3Hzz
zY51i6m8VlZWyl7JYt/4xjf+9V//VSbMc0x6j+V9991n/trmXk3JsTNmzNBp
++8jofq2225L+/9lAAAAv8UcL+bzn//81VdfrRHRPMusz3E/+OCDRUVFBw4c
KCkpOXTokH60efNmSVyzZ8+2x9mpqamRmYMGDXI9eK7fmJWVJVt76KGH9CPZ
lAawhoaGb37zm5/+9Kf1Hkv5Opk/Z86c/fv3y/eWl5eb+yffe+89reR0rOeJ
zj//fJlZXFysDwdJLJSvkLW0ZlJ2W7ZTHKVxWtvHdR8k0clbmZCvkz2XLRe1
OH78uGy8trZWFhg8eLDrQZ7f//73X/rSl7Zv3y5f+uSTT8oyepepLKZfPW7c
OOfMp8slvp5zzjnyJ3WsR6J0s5Jv+/fvn+7/zwAAAO3EPA2tbbtf/OIXr7rq
Ksfq4Ufs27fvs5/97L/9279JdsrIyJgwYUJhYaE+oC0RTpLYD3/4w5VRsqTT
ckeixDBXF+X6FZmZmZ/4xCcWLlyoH8mmPvnJT2rvQ5Lo9FEgWb6goOAzn/nM
v//7v8uX7tix484779y7d68TDWPypbLKD37wg+XLl69evVqfrV6xYoWsKzOf
eOKJqVOnSrB85JFHZP5FF10k03fddZds5Kmnnnr++ed1Z2ThP/7xj05LjaXs
ktmZ73znO88884x+6fvvvy8LaFO4SX0mLffp0+fv//7vZR8WL178rW99S7ap
TxJp3JXtfPvb3162bNkrr7xi/uCy7o9+9KP777/f/r+gCfOGG24gWAIAgK4o
ZhfiX/jCF6688krTG7npM3zdunXf+973tG36u9/97l//+lez+vTp03W+ZDMJ
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
v7i4WBZ+7rnnZGYoFJIE+84770hmk72SDR44cKC1XihtkgZly3/5y1/+9re/
6RzZ56effrq6ujozM1NSq0xIOpUv0k9Xrlwpn8rEzp07ZQckUt57770SHWUn
Z8+ePWrUqJKSEknIspj8WFk3KytLMqrMkbAqM2X35M/Y2mPvAAAAPYQELclg
dlO4RKZXX33VibbzVlZWSiST5Dlx4kTJeIsWLZL506dPnzBhgi4vEVE+kgmJ
XuPHj5fMJh9po7asOHnyZJnYvXu3hEZzj6WsLoFTJiRGSlx8//33GxoaTp48
Kd+ycOHCqqoqmfnKK6/It0vGk5lvvPGGrCi5VHZAtiMJ9ujRo/F/lCxfUFAg
W5OsK99SUVEhv1G27ESrSWUj8rv2799vgqV83fPPPy8xW/YkGAwuXrx49OjR
MseJBuaNGzfqPQD33XffQw89tG7dulWrVo0cOfLDDz9csWKFLClvDx8+7Hge
RKIpHAAA9BCaebKzsyWwbdmyRRORBEvNdbrAggULJGd+8MEHEvxkMa1InDJl
iqRHXV2i4z333KO1iPX19du3bx82bNi4cePk02nTpknslLS2d+9eiXCSvpxo
9JLAKVlUFpCoKRvXTKu78frrrxcVFckWXnvtNZm5b98+CYQSLHWHq6urJfLJ
py+99FKc32U/cbN161aJkbKi/Kjy8nKZU1NTI+lXfo4kYZnQhVeuXCmZWabl
t2g954svvqjBUubIRpxozJ4xY4YEy23btu3YsUN+qWzWid4mKuuOGDHC3Plp
7rpMpMtNAACA7kGST1ZWlqQ+TXeSiA4dOiRxS3KdBjPJURLJgsHgE0880a9f
P81a06dP16pIcccdd0hQbGxslDz25ptv5ufnT4yS1WW+JEwn+jyObEQS2q5d
uyRnyoRWcpaWlkpKlC1I5pSwKsFyz549MlO+SBKm7NuBAwdkpnyqFac7ovr2
7fvyyy/H+VGhUEiSXlVVlWRIScijR4+WmTNnzpQ4KtE3MzNTtnnkyBH5VH54
OByW6TvvvFN+mqRNCbqSD0+dOjVnzpxnnnlGVpw9e/bmzZs1IsoWZDfk58iv
k/10ovW9srD8KEna8uu0YtM7AiYAAEC3JwEpNzdX8pXWWAoJlvJ2xYoVmo7k
0/Hjx996661z5869/fbbn3zySVnl3nvv1bQmQXTq1KnTpk2TwCbBbPDgwbLu
qFGjtm/frotpi7nEzgULFkicGzJkyP79+829l060RnHMmDHykSTMdevWOdGb
PGV6+fLlspZkPAmZklclxc2YMUOfKpIQKFEwTqdDx48fnz9/vmxEErIk2337
9knekx8i+yP5VnZYtnPixAnZvgRF2SX5XQsXLpSfJutKIpVP5SdLnly8eLH8
ilmzZu3cuVO/rra29pFHHpFVhg8fLslTfvWjjz4qv1f+GpKWtW8lZQ9OBAAA
0BOYRtvWcposoDdA2u3Lprdwe8mmqKqqKjO2uGtgGtmIth27yHZMUDQ9YbrG
SdTXmpoa2Yj2/9PmT5Nljh075hrHR7Yg+yDRUcKn2StXpaLkQ7vjd3PbpPle
iZeylhPtg13fyjbNyEGuPjmJlwAAoCcwoau5ZURsE6h0jr51rIjlWtGxhmJ0
rCjl6tHRNY6PK3p5Rx43c+wnX1zjlccJbN5hu000lbUkN/bt21devd2ku/bB
3tWYvcR717V/IPdYAgCAHsg1WqKyo509Ao6d7rxPPbveuoYCNwu4qhxjjocY
cyRHXbHNR61dO2mv0tDQsGbNGq1sdPULpD/TNT6j+Znxd9L1ewEAANA9JJFF
gaS57iRps5sp16hPyV2P2Fc3XNEAAOATc1p3VScCvjqrimtT+Z8KvbHZaaUh
AAAApJF9nqXGEj6JmQ/jlDdzY4lrzPqz5bofw/FUnAIAgNTJ6bXNR2yANLIr
yRMZzdPbdJ76DmheNQ/cAQCANNJTvOv5HSDtJNHZnWXZ0zHZvSJoDtRuEJL4
3vhfBAAAUpeRkREOhwOBQDAqK8pMAOmVnZ0tr1rkmj3N0zHpqFJ79uzRYinr
6kbOSigUysnJkdIur4WFhQ6dpgIA4AM5z9p3V5qnJNJfVwVEOdGKytzcXMfT
j2tM+/fvlyhYX1+vb5Mun6b5u6CgoKSkxOGuDwAA0i0UCjln9sTucMKF/4LB
oE40x+3/Rz7Ny8urq6tzrDrGFMunxNrs7GyaxQEASDsNlkA7S7zgZWVlpfdK
R7aW9m0CAACHYIkOQrAEAKD7IViiQxAsAQDofgiW6BAESwAAuh+CJToEwRIA
gO6HYIkOQbAEAKD7IViiQxAsAQDofgiW6BAESwAAuh/tp1qHJlmyZMnQoUNr
a2tlzmOPPTZx4kQ6kYZPUgyWOkfKZ3PL0PbmI1NozUwdkdxel2AJAIAf5Pxu
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
PRzhtFySdPBuobsjWKKTS7CISnrUJU1VZ/OZ40lpVQ81mUgvgiU6rczMzI7e
BfREBEt0cokUUW0l18tzVyda8moel3A9UQukjmCJTkvLhl5lm86BOY/DbwRL
dHKJN4VnZGTYb+3HyenDDT4hWKLT0nssXZ0JcKcl/EawRCeXeBE1NxS5HvNx
nYspxkgjgiU6rWAwaKaltBw8ePDkyZMduD/oIQiW6OQSrLGUq3IpouZiXPug
1idnnZYbLO2RIoG0IFii08rOzrbbaC666KK1a9d24P6ghyBYopNLvIiaHrE0
Xn700UcVFRX79u1zaAqHbwiW6LQCgYBO6DX1ZZdd9uabb3Ieh98Ilujkzqq7
ITN95MiRoUOH/uQnP7nwwguvu+66vXv3agUmZRjpRbBEp6VN4ea416dPn1Wr
VulHer+QXnHr5TYdpyNdEj8oaRG1Bw13rBElnJbeAqkRQnolGCy1K3WnpUxu
2LBh0KBBx48fP3bs2IABA6ZPn+7/nqInSjFY2qN+ew+eelDVT1v7CoIlWqMl
0xShSy+99J577rnpppvkcnvYsGEHDhzQxbjcRnoleFCSgmd3Evjyyy8PHDhQ
x4944okn7rzzTr2lzaGpEemW+HkzNze3rq7OObPLSjk1v/rqq5dffrnTcnnO
URRplHqNpav3fnOFLky1UpzaJIIlWuN6eOeSSy655pprtm7d+v77719//fVy
xe1YVzSmWzYgRYkflLSrVS2BNTU1cqZ+/PHH5ZLn/PPPD4fD5En4JMEiGolE
srOzzVv7MufBBx+U6yCfdg89XCrB0tUPjD1hkqQ577eWLQmWaI2rbFxxxRWr
Vq3SWqCNGzeed9551dXVdms4kBZndY+leQJCjn7btm278MILb7311unTp5uD
YczWHCAVZ3vt45zZblhYWHjuuefKUZQRzeCHVIJlzLXstktzOI1TbgmWaI2r
ZP785z9fs2aNTufl5fXu3Xv//v3OmWM+AqlLfLw8M5y9mXPNNdecf/75ZWVl
TqwR9IC0SKSI6ilYj6KmekccPXr06quvnjp1qhOrf0sgdSk2hdtX5TIdiUSO
HDlSVVUlr5WVlTpxttsElDaFNzY26qHvkksuWb16tRM9PK5bt65Xr14NDQ32
TRdAWpzVDWzmzh+xcuVKOWX/7ne/e+CBB+zrHcon0ivxImr61lAnTpy4+eab
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
zdX8ZDuIeIsbExWr0zFNI2xtbQ0Gg6bDk20f4iFDEZaCHgIXyzOvL7lPkxAV
nRVuMx5dTbtZH5iQBHBfKPl8Pn1uTiE3F1hjw4d4jnsT1StiKcsId+7cOXXq
1DFjxmzcuFECB5wERMhgGbqw7FdJus8AhSWJhbl0v22Wrt6/nr4g4jkuCyXY
pN/vt220pzeFNEdp0kqJt7ivN2Ummi45d+/e/dprr/34xz9OT08XsxxwLDEh
g2WIwjL+jVK0xp9yTmFJYmGuwPbII4+8+eabyqq4we9//3uUkPoqS0XiIe67
wsWpriyzxNcVK1bccsstEyZMmD59OlfoJcnDjYmKmNSTc82hRBMnTty0aVOP
RTKzSYYpQxxjqc/FRBOY10NhSWJh7qy3bt26K6+8UprYkJSXXXZZY2OjGZkl
JPGKQbmDzJ7u+fPno74uKSl54oknbr75ZpszkxCvGNTkHXMBTDlBWZqenm4G
clkD4iGeCEubnrQtK6QD3aRJiMZcMaC1tfWKK67YunUrDOnZZ5+9//77Jdwc
4nuasklSDfeFkqz6IpWy7GsPysrKlixZ8qMf/ai5uZn1NUkGLk0UxqlHqkuI
FJgoSzdu3Mhl3EiSGPoYSxu2jcgHnHRGYUliofeMEN04Z86cGTNm4OSaa67Z
tm2bLTLLRuIV7gsl3fYRX/qaNWt+/etf33zzzdOnTx87dmxVVRU3uCfJIDGn
uq6FUYSuW7eO08pIkvBQWCKRQCDQ0NBQW1tbX19fV1dXU1ODNrsezZ5AmmQ4
o21DjGf//v2XXnrp1q1br7rqqs7OTrM8dLNQMCEuce8OMp3qRUVFEJOyR+2B
AwdwXlZWpq+y+iYe4rIrXHss9UwH+RRhqRwLZBHiCZ4IS22x27dvnzx58qRJ
k+6880584nzKlCnxK30KSxILc3SQsgzst7/97U9/+tM5c+bocDa6iee4F5Z+
v18Xbvn5+RdffDEkZWtr6/z58y+55BIIS9lfLJmZJcORQS03ZFbBtbW1NTU1
l19++ZIlS+rr67l0G0kGQxxjaavQOzs7KyoqYLfl5eXV1dVVVVX4VHFbQxSW
JBbaNvTotfXr148bN87chNS2DBEhQ2dQO+/oMhAn9913H+zz0ksvfeGFF37w
gx+gAJSiLxAIJCuvZFjifuGCwsJCORdDHT9+/JgxY9DqmTBhwg9/+ENc1Quu
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
CLIKVxETUspUUJCRCHz99dfl0dCZiIlHQzTec889UGWZmZmVlZXQYPfff//M
mTMzMjKgyrZu3QoJeueddz7++ONvv/02tNmxY8fmz58/ZcqU5557rqSkBElB
+i5atOjuu++ePXv2119/7fQWakwlKYSj2JZXck5gR2amTp26a9cu/ETIsDLc
kriE/CD/+A3vvfdefDW15bp16+bNm4ffzYM/GCGEEELImQqUD3TdK6+8AsUF
IXfXXXfhK8QeFBSkHSJAHCLk4MGDfr8f2g8RoAw/+eQTKEDp7MaNiD937lyc
z7AQJ+fvfve7VatWKaP7GCJ2+vTpt99++6uvvrpv3z5libc1a9ZMs/jggw8Q
CNmGOO+///6LL76ImPv378dzIRch2/7yl79A3HZ0dEDUQfoiPqQsLiGdxYsX
I2NICi+Cz/ivDPmH2/GC77zzjtmXjc+1a9dCFiIDjz76KLRrc3MzVG5jY6Mo
TPwICBStCOF95MgR/RtC686ZM0cuIUulpaX6cXLvtm3b/vCHPyhjvAHXjSeE
EEJIigGxB30IpYfz9PR0nEsnLwQVzquqqj799FMIS4goCCHovdtuuw1yS1md
3QiXUZQtLS3QVHv37oX2gwI8evQoboRWXLFihTIcgFBxhw4deuqpp2655RaI
xueee06Sgj589tlnda86ToqLizdt2oT0RSW+99570I1NTU1IYfv27dCE69ev
h3bFVYRXV1cvXLgQj4Moxeuo/sY3apBt5BDp19bWQl76fD7tsYQ4vOOOO5As
MimPg3iGgMQnruLRmzdvxs8imVy0aNFXX30lazHhqnkJPyZkpMx8l4fiZOfO
nfPmzeN0eEIIIYSkMBA50IoQhDjfuHEjBBX0FYTZunXrcF5WVrZhwwbILQQi
wpIlS6DK6urqIKggzHCjjKLMzMyEOJw0adLdd98NOZqfnw9hiaurV682nyV9
zYifl5cHlYVk8ZSurq577713wYIFEgE3Pvnkk3j0Aw88IE5FhEPQIlkZ27l0
6VI8CJoTcW699VaEH7WYPn068oa7cnJy4rzvZ5999vjjj+O5eFk8dNWqVVrm
HThwYMaMGfja0NAAmYpPGWmpx1tCJ0PiyvnixYszMjJ0sh9//PHbb78tv+db
b70ll8xZPFu3boV4NrvaTeVJCCGEEJICQDVBp7322mvQPOvXr4fYg0hTVg84
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
OjrwVT7feOONO++8E6rsySefzMzMRMgXX3zxwAMP3H///e+++y60KEL+YvHy
yy/j9qeffhoSEWKgrq7u1VdfnT59OiTH119/Hee5EA933HGHKDctKkzPp6ku
RJloX5xWKZBMyJKOI0nh0QcOHMB5bW3tXXfdBf1pGy+q+nbgOruk5UGPPfbY
oUOHJATJaunl9EyaGVB9+4JtmlZOnN48Z8aU4ZmUX8P0+Olo2l+q+na460c/
8cQT33zzjZn4448/jt+nX12qf2TtnDQj2PSh7RVs3lHb72O7MT09ffny5c7X
j3U7IYQQQs4K2tvboRghDv/0pz/t379fWRpgzZo1CIE+fO+99xAIbQmd+fzz
z0NVQg2uX78eEgJiEoEPP/wwwnEyZ84cZSlSaLmPP/4YqX3yySdx/E6QDRCu
UIaNjY1IasWKFXjc/PnzS0pKcBWidNGiRfiKONCuiIPAF198cd++fTiprKyc
NWtWQ0PDI488ggjQTp999pmyBOGbb745derUhx56CBlABGTmnXfekZSPHTum
LLU5b968adOmzZ07t6KiQjKDfEItv/DCC7gXqeEpeDpeCukjHfwgu3fvhs7E
VaSGyEj5qaeeWrJkyb333otfYO/evUiksLAQ8fG7IcMtLS3yS0Jmi2sOvP32
21999RUeihdBUngFSD6khixB7Il6/PLLLz/66CP9E+ERmzdvxnlubi5+JZGR
f/7zn/Py8rZu3QrZf88997z11lttbW2497XXXlu9ejV09YwZM7Zs2YKYr7zy
yqRJkx599FGcSJp4L/xieJeFCxciez6fD1cRB4ngpVRUAaJ98f777z/44INI
SkZE4E/wzDPPIG/33Xcffjq0R5TVuEAKcoJH46eDLe3YsQN/BfzCSBOqHuoU
b42nIKsIx++8a9cuvD5i4ueqr69Hk+S5555DrvA3kuYJe8AJIYSQsxdIRwib
22+/HZU7VGIgEEDlDjEGISER/vjHP0KhQZih3occevbZZxEIZYU4InUQAnEC
ZfLSSy8hEciwAbvCEUGEJaQFZMaqVatqamqguFauXAmN9MUXXyDxAwcOQM9A
xixbtgy3QJxAX+EEOcEtONm5cyf0CeLoYZbNzc2QNIgGaYdwyGCoXCg3iEYR
bMj22rVrER/CCapPaxg8EToNCu3o0aO4sbW1Fenk5OTgBFoXT0FmkDi0E4RT
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
hbrQq3A/9dRTkAr4Wl1dbQ6Hw0lNTY25QWEszIW+zdtlsOXLL78MTaKfKAoQ
WsjsvBYlKd3oZiIIwbvYdvDRIBqSNZde1Eqmvr5eP0tZrj9xhyprorR4OMPR
FTKRiMTXD8IvJp3F5ppCeBCEk3Tih6NrIkk/tQaRZV16W6D+1Cv/9BgbAyF7
5lW9zJH5a+AT0ZB5iSOfeLpIRHmuZMa2ZxA+TXms82ZOy9KBZre1eVWnKX5j
ZZiEmJOOKXPS3SytTwghhJAzHOc2jvrEuXWLaL+5c+c+/PDDqu/CkkrZ94WJ
g77RXBxSQrZs2fLCCy+E+25DowWVOWtYy05TcOr8mFpL6zqbetFToW1rXer9
vs23k6eIsISMNPWw85dEygUFBQsWLNArBTmlo7ldjjIEs23rcDP//YaYr2lb
mTPW38Jcm935tzZfx/bXMR9qk5TOh5q/s/nLyNOdGzYpbulICCGEnM30RLf/
cwoGrXNsi5Pj88svv5Q5vzYN4H7bFNPrqKLyUu49evQoJJnZJap9fcpQmLak
zMz36zdTDo3Uryo2bzH36dbKEypRVuk0X9/c41I/KCcnZ9u2bdo/qSObv5Ip
q0zlZv6MNj+tTkR/NSM79aGJKdtMQWtmw/S4OtN0/n37lbiq719N39uvZ9WW
svMXIIQQQsjZgrNz03bJlGGmkrHdaFNH8f1OTkVnC7f5x0yx4VSVpjc11uN0
nm2j+EwlGWfn6369i/0OCLRtFy706wHuV6SZ99oeZybV7zvafg0zk7Yfx3wp
Ex1H74hk/q1tCTp9tnH8mc4Mm8JeZ8+905sQQgghxKRfQUKI55htH846J4QQ
QlIJ09XZrz+NEA9x4+8lhBBCyNkO9SQ5BZgjFvqdT0QIIYSQsxrbIEz2S5Lk
YWu89Du6lRBCCCFnKTk5OUVFRfn5+Xl5eT6fLzs7Oysry+/35xKSBGBg+Myz
0EZIjyUhhBCSGkBSyv6AyrGoESFJIhgMirDktj6EEEJIKgFhqc+pJ0my0esa
5ebm6kCOviCEEEJSg+zsbOWQlKzoSfKQQZUwPNvK9oQQQgg52zGHuqm+ktK2
BPcpzhhJbUyPJSGEEEJSA5/Pp6ITwwVzYxfuFk2SBIUlIYQQknqIx7LfDVB0
oJyYO00TMkQoLAkhhJDUw+wK19LRdF3qEMWtUoh3UFgSQgghqYcWlrLwS0ND
Q21tbX19fU1NTUtLi57DywnjxFsoLAkhhJDUIycnRzsqISOnTZt26aWX/uhH
Pxo7duy1116ro3GHFOItFJaEEEJI6pGXl6fnfYdCof/6r/969913W1tbT5w4
0dLSoixPph57yYk8xCsoLAkhhJDUA8JSXJHy+ctf/nLz5s2q73BKvT0KhSXx
CgpLQgghJPWQBdL1EkOXX375fffdN2PGjD/+8Y+1tbUSyE5w4jkUloQQQkjq
UVBQoB2SOHn44YffeOON5cuX//d///cNN9zQ2tqqY1JeEg+hsCSEEEJSj6ys
LGX0ceuFhgoLC8eNG+fz+bq6uhCixSchnkBhSQghhKQeBQUFciJ6UivMtrY2
CMvt27crDq0kSYDCkhBCCEk9UL/rNSoXL1780ksvHT9+HKrymWeemThxYmNj
o+IwS5IEKCwJIYSQ1ENmhQeDQZwfPHjwd7/73dixY8ePH//zn/989+7dtq0e
6bokXkFhSQghhKQeOTk5cqJ9kvX19ZWVlToE2tLsIifEEygsCSGEkNRDC0vV
39qVOkR256G8JF5BYUkIIYSkHrKOpTJEI4dTklMAWjR67C4bLIQQQkhqkJub
q+eD670dT3emSMoi1hUKhbSrnPZGCCGEpAzZ2dnm3BzU+JwDTpINbEzvJaoX
JSCEEELI2Y6sYykzdE53XsiwQCwtPz9ff6W2JIQQQlID2xhL6RNnRU+SDQyP
qw0QQgghKUZBQYE549u2tyMh3qK7v8VjKYGnz/wJIYQQ4iVZWVmFhYU5OTmZ
mZm5ubl5eXmo8RGYR0gSEBvz+/0wOe0Y5zAMQgghJDUIG1N1ONqNnAJkidRw
dOiForAkhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgiJRdg6IvT0nocHihw/jldZCvf77ZRkgBBC
CCHklBAOnzWaxplVCTmpyyJn0JM9YahK1a1CPaqruyfYhSshkZnhUERwnozc
3+G8GrmlRzlx3BWWmLFSDkc+QtHjZNYl+age7k0EJz3dSicYvdYdOmv+XoQQ
QghJYWzC7CySlDZ69WQ43GPRR9yFe05qs5B1KBXsCUcjIHYwnvaTNGwexRjC
sq+glf/Kox2RTkaIKyytZ1mJdOM4qS2hSEOqu7vn5I2EEEIIIWcMYYvTnQvP
0IJNCGk9GIros6DIt4hIs45wj03mmYR6I0UOLeRsjkyJ1mkdIXVSOpq60bxX
H6E+MtPxDlFhGVLIa09XRF4i16FwqDfDuD3Q1Z06fzZCCCGEnP2YkvLskpcR
/6RFKBTCuQTG6scWpdcZcWx2q84uFehQgTbVfkK1ByJHh3V0Rk8C0UOH60u2
CAG5vU11BSJHR6A3wXbj9jiHTsF2S6Az+rXt5NNbWyOBJzoiV/EK7W2qt3+c
EEIIIeR0ojUkVJnuTT6tORoS4ajXNWS5+Kygk93K4ngMymBLiLT6ZlVVryqq
VXmVKitX5dZRET3Ky04eZWV9vkYOK3KZHGWq1DrKSvreVd7nKLfSrLAOW+Kl
xlFm3VheGTnKjqsy6ySSpcrIUVqhSitVcaU6VhnJdl2taqlVHU0q1HW6f3tC
CCGEkAjd3d3Nzc01NTWVlZXl5eWVZw8VFRXV1dVNTU2dnZ36dURYhmXYpNX3
LcISqrID2jOiKltVXU35zCeWX/hv6y76f1b/04Xp3/+X9IsuwrH++/q4EEdG
9Nh44ckjI3IpEifjwos2Ro4LN33vwk0XfleOjZHDuuvC3gibvhc5cIIE0y/q
PdZHk43c+z174pH8fP9fMy7E8S841n//X9ZehBCc/+vnF/7fG//h+5987/9a
+6//9v7//rejM+9XNaURnUwIIYQQcloR/2RbWxvkmeg0CMuqqqqKswTJ7fHj
xyGM5Y0gki2npUzVOakqQ9a4yoi7srtNtdQemfnQln+48MC3/vHgt//+wAV/
feCCbx244AIcBy+44ND5J4+DF5w8JOTIeZHj0PnfOnj+t6LRzsNxxHFEr37r
yHnfOnbuBUcjd0Uesf+vIgcSRDpHz+sNx9cDf3Ve7xHJSSR93Hj03MiBmAet
7B391t98M+q8sgv+/uDICw7+1d/lXPBXu//hb9seul+1tpxWOyKEEEIIiQAl
VldXV1JSApEGhXa6fZCDo8qitLS0trZWRLIMs+wjLK2+fZmw043/dZ1QtRXL
/vUiSMqGtNE1aWkNI0Y0pqXpo8k6WqInCKlPS6sbEfk0ro5ssg7zxkjMEZFP
3NtqHS2RwEi01sgRuRGJ1I6MpNYYfUpLNByBddYlOer7pqNz0jRihDy9ecS5
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
A4OgD0o=
    "], {{0, 782}, {883, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVWAdUFEuXrp7IDMOQc84555xzzjkMOeeMSkaSEgSUJIIKggomgoiICCJB
BBUwABJEogoqKJJ2eL59/+6e/c+eved09df31Nyprq+q7/2K0zPMyhcGAIgi
ITZWhDjNyEhCgjUF8cE2NCrAL9TH2zA02sfPJ1LBEyI6ZeiJDaCXIYSHB8OI
vUJCoyOt9LU4HBydONAfAA4wABpiBzaCV1S4poWFCfi3tjMJjgOCV6LHsf59
v//VKL19orwAgCyI2Nc7yiuEiDuIWMorPDKaiDeImDsuOpyIj0cJaCKJAyRi
nmPs9wcrHGPPP9jkrz42VtpE7AEACY5AiPQDAHs8Lo5YLz9iHGw+ACiqUO+A
UAAoLhGxmpc/wRsAujliH5GQkDAipscRsYDnf4nj999iev4Tk0Dw+wf/eZe/
DKeurs5hoq1DvKn/P6fk/7aQ4Jj//J/jmccl+mubEe90xIuFg8U9IC0ScAAT
oA10OFhdv/lzWj4FINonPvr4B9ph4QmRAX7+0RyaRLZ8OAxDvcREOKQkJGUB
OOb+T9jvVn9Fhuhe/MvnswKACpEDzNi/fIHnAGjqJ85X7r98fM4AMIoAcPul
V0xk7B8f4rhBAiwgJ64qRsAGuIEAEAVSQA4oAw2gC4yAObABjsANeAF/EAIi
QRw4AVJBFsgDhaAUVIAacBlcAzfBHdAOusBj8BQMgzEwAd6DObAE1sEm2AF7
EAShITKIGmKE2CFeSBiSghQgNUgXMoGsIEfIA/KDQqEY6ASUDuVBxVAFVAs1
Qreh+9BjaBAah95C89Aq9A36DYPDcDAaGCuMDyYOU4BpwoxhNjBXmB8sApYI
y4CdhV2A1cFuwNpgj2HDsAnYHGwdtg0HcFI4HZwTLgpXgGvDzeFOcF94JPwU
PBdeBq+DN8M74QPwV/A5+AZ8F4FCUCM4EKIIZYQBwhbhhYhAnELkIyoQ1xBt
iD7EK8Q8YhNxiCRDsiCFkUpIQ6QD0g8Zh8xCliHrka3IfuQEcgm5g0Kh6FD8
KHmUAcoRFYhKQuWjqlEtqB7UOGoRtY1GoxnRwmhVtDmagI5GZ6HL0TfQj9Av
0UvoXySkJOwkUiR6JE4koSRpJGUkTSTdJC9Jlkn2MBQYXowSxhzjjUnAFGCu
YDoxLzBLmD0sJZYfq4q1wQZiU7EXsM3Yfuw09jspKSkXqSKpJWkAaQrpBdJb
pM9I50l3cVQ4IZw2zgUXgzuLa8D14N7ivpORkfGRaZA5kUWTnSVrJHtCNkv2
C0+NF8Mb4r3xyfhKfBv+Jf4LOYacl1yT3I08kbyM/C75C/INCgwFH4U2BYHi
FEUlxX2KKYptSmpKSUpzyhDKfMomykHKFSo0FR+VLpU3VQbVZaonVIvUcGpu
am1qL+p06ivU/dRLNCgafhpDmkCaPJqbNKM0m7RUtDK0drTxtJW0D2nn6OB0
fHSGdMF0BXR36CbpftOz0mvS+9Dn0DfTv6T/ycDMoMHgw5DL0MIwwfCbkYNR
lzGIsYixnXGGCcEkxGTJFMd0kamfaYOZhlmZ2Ys5l/kO8zsWGIsQixVLEstl
lhGWbVY2Vn3WcNZy1iesG2x0bBpsgWwlbN1sq+zU7GrsAewl7I/Y1zhoOTQ5
gjkucPRxbHKycBpwxnDWco5y7nHxc9lypXG1cM1wY7kVuH25S7h7uTd52HlM
eU7wXOd5x4vhVeD15z3PO8D7k4+fz57vNF873wo/A78hfyL/df5pATIBdYEI
gTqB14IoQQXBIMFqwTEhmJCskL9QpdALYZiwnHCAcLXwuAhSRFEkVKROZEoU
J6opGit6XXRejE7MRCxNrF3siziPuJN4kfiA+KGErESwxBWJ95JUkkaSaZKd
kt+khKS8pCqlXkuTSetJJ0t3SG/JCMv4yFyUeSNLLWsqe1q2V/ZATl4uUq5Z
blWeR95Dvkp+SoFGwUIhX+GZIlJRSzFZsUtxV0lOKVrpjtJXZVHlIOUm5RUV
fhUflSsqi6pcqgTVWtU5NQ41D7VLanPqnOoE9Tr1BQ1uDW+Neo1lTUHNQM0b
ml+0JLQitVq1fmoraZ/U7tGB6+jr5OqM6lLp2upW6M7qcen56V3X29SX1U/S
7zFAGhgbFBlMGbIaehk2Gm4ayRudNOozxhlbG1cYL5gImUSadJrCTI1Mz5lO
m/GahZq1mwNzQ/Nz5jMW/BYRFg8sUZYWlpWWn6wkrU5YDVhTW7tbN1nv2GjZ
FNi8txWwjbHttSO3c7FrtPtpr2NfbD/nIO5w0mHYkckxwLHDCe1k51TvtO2s
61zqvOQi65LlMunK7xrvOujG5Bbs9tCd3J3gftcD6WHv0eSxTzAn1BG2PQ09
qzw3vbS9znute2t4l3iv+qj6FPss+6r6Fvuu+Kn6nfNb9Vf3L/PfCNAOqAjY
CjQIrAn8GWQe1BB0FGwf3BJCEuIRcj+UKjQotC+MLSw+bDxcODwrfC5CKaI0
YjPSOLI+CopyjeqIpiEm2ZEYgZjMmPlYtdjK2F9xdnF34ynjQ+NHEoQSchKW
E/USryYhkrySek9wnkg9MX9S82TtKeiU56neZO7kjOSlFP2Ua6nY1KDU52kS
acVpP9Lt0zszWDNSMhYz9TOvZ+GzIrOmTiufrslGZAdkj+ZI55TnHOZ65w7l
SeSV5e3ne+UPnZE8c+HM0Vnfs6MFcgUXC1GFoYWTRepF14opixOLF8+Znmsr
4SjJLflR6l46WCZTVnMeez7m/NwFkwsd5TzlheX7Ff4VE5ValS1VLFU5VT+r
vatfXtS42FzDWpNX8/tSwKU3tfq1bXV8dWWXUZdjL3+6Yndl4KrC1cZ6pvq8
+oOG0Ia5a1bX+hrlGxubWJoKrsOux1xfveFyY+ymzs2OZtHm2ha6lrxb4FbM
rbXbHrcn7xjf6b2rcLf5Hu+9qlbq1tw2qC2hbbPdv32uw7Fj/L7R/d5O5c7W
B2IPGro4uyof0j4s6MZ2Z3QfPUp8tN0T3rPx2O/xYq977/snDk9e91n2jfYb
9z97qvf0yYDmwKNnqs+6BpUG7w8pDLUPyw23jciOtD6Xfd46Kjfa9kL+RceY
4ljnuMp490v1l49f6bx6+trw9fCE2cT4pO3kmymXqbk33m9W3ga/3XoX+27v
fco0cjp3hmKmbJZltu6D4IeWObm5h/M68yML1gvvF70W1z9GfdxfyvhE9qls
mX25cUVqpWtVb3VszXltaT18fW8j6zPl56ovAl/ufdX4OrLpsLm0Fbl19C3/
O+P3hh8yP3q3LbZnd0J29n7m/mL8dW1XYXfgt/3v5b24ffT+hQPBg85D48Pp
o5Cjo3BCJOGvUgBOvGC+vgB8awCAzBEA6jFi/YT/U5v9bXBi8XFcy9pBujBN
uAKCAYlFkaAlSBwx6dhHOBQZAd9OgaUMphqikaWtogcMQYyjzHIshazr7Boc
BZzj3FgeRV5HviD+EAEXQS0hVqEt4aci5aJBYqriZOIfJFokU6QspTmlP8vc
l82Us5RnkV9SaFaMV9JUxiq/UqlS9VYTUfum3q5xQlNLC6f1Qbtbp0m3Wq9I
/5QBwVDdiMFoy3jEpNm02qzWvMti0QppzWjDZEthB7fbt99zBE4YZ7wLmSvC
ddttwX3Mo4dw17Peq9w71yfB18/Pxl8rQCZQKIgzmDGEPBQe+iNsIXws4kHk
laiz0ckxWbGt8YgEn8SeE+Ak3ymlZMMU59SYtLPppRlJmTKZi1kFpy2yeXNI
c0EeLJ/yjMBZtQKzQvsip2Kncw4ldqU2ZZbnzS4Yl+tXaFWqVSlWS18UrRG6
JFFrXJd+ee6qYf2NhvVGyibe65I3lG/qNJu22N9yv+1/J/xu3L1TrWltme3Z
HXn3CzpLH1R11T+8193/aKpn7vFkb8sT3z6Gvmf9ZU/jBnyfuQ7aD1kOG4/o
PzcYtXkRMXZp/O0r0tfiE9qThlO6bxTe8r7Dv9t9vzL9Zubx7OUP6XN+87YL
ZoumH82XzD8ZLSuu0K/MreauyazNrV/bSPxs8IXkS+NX/a+Lm5e34r+5fTf/
YboduNP76/Tv9gOdo6O/+ZeEI+CriDnkImqTBI6Rw/qTVuHm8ELkcRRPqRip
E2he00nRpzHMMMkyZ7GMsTGxO3AUcXZxTXNv8+zwrvE9578sECmoJkQi9Fq4
RiRQVFb0UOyp+FkJe0l2yWWpZulYGVVZSLZfLlfeXIFaYVKxXMlZmVV5mrgK
XNQY1abUz2s4a/Jp7mlNaN/Wydf10VPRp9T/ZNBlWGoUa+xj4mnqbxZmHmLh
aWlupWwtZMNsi7eD2e3YLztMOj5xanaudMl1TXQLcHfw0CGIezJ4QV5r3hM+
fb6tfvX+ZQEZgWFBjsEaIfyhZMSVMB8+G/EjijPaPaY89nHcm/jFhI3E3ROk
J9lOCSRzpKBSPqS2phWkR2a4ZdpmOZwOyE7Pqc69mdea33bm3tnbBTcLG4uu
Fl86V1lSWlpQlnM+7UJCeViFX2VAVUr1oxrBS9fq+C8XX3l1dbcBf42pkbtJ
iLgO5G+qNeu0mN5yvB18J+vu5XvdreNts+0rHd874Q/ou4QfKndrPJLv4XwM
e7zQO/Ckta+hv/Jp4UDms8TByKHo4ZyRrlG6FyfHZl4yvVJ/bTPhO5kydfXN
i7c/3lNNi86YzIZ/OD/3YP7lwuziwsf1T0gi+6mr4+uUGxKfZb/wfSX/+mvz
09bUt6Hv93/Ubifv2P3k/7nzq2s38bfyHm5f52D1b/7FoHVYNdwNIYhEI7dQ
q+g1kgXMFikWx0umiXciT6W4QTlOdUTDS6tLF0ifyVDDeI+pn/kZy1PWB2y1
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
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 883, "PixelYDimension" -> 782]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{550.88359375, Automatic},
  ImageSizeRaw->{883, 782},
  PlotRange->{{0, 883}, {0, 782}}]], "Output",
 CellChangeTimes->{
  3.771691890937189*^9, {3.771691928138406*^9, 3.7716919396343403`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"75fa57bb-0bf5-4318-9be2-e3715efaeb3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetGeneral", "[", "]"}]], "Input",
 CellChangeTimes->{{3.771691264480145*^9, 3.771691268713192*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"29371861-dcf1-4425-81a7-7652da1e46d7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i14$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i14$$ = 1}, 
     "\"max\"" :> {$CellContext`i14$$ = 5}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i14$$], 1, ""}, 1, 5, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i14$125622$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i14$$], {1, 5, 1},
                  AnimationRate->1.5,
                  AnimationRunTime->173.34063482284546`,
                  AnimationRunning->False,
                  AnimationTimeIndex->1.2486677169801226`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]", {1.654972841632204, 
                    0.6101274277711493}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {
                    0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 1, 2, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     1.2168782299610637`}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.654972841632204, 0.6101274277711493}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 4->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {
                    1.654972841632204, 0.6101274277711493}], 
                    Text["", {0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 5, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.003417442455269204, 
                    0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 5->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i14$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i14$$, \
$CellContext`i14$125622$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 5, 1}, 5, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{393., {172.384033203125, 178.115966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771691498339802*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"2bf74c02-a3cc-4365-9e86-02fc39dbc7ee"]
}, Open  ]],

Cell["\<\
A more user-friendly might come as future work, but this version will \
definitely save out time to input data to make and visualize a Petri net.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 3.7716916207835608`*^9}, {3.771691961129424*^9, 
   3.771692009087027*^9}},ExpressionUUID->"a703ba13-887d-429a-927a-\
173dbd20a3a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application of Petri net in chemistry", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.771686688875327*^9, 
   3.7716867014179163`*^9}},ExpressionUUID->"75fa4bfb-9b34-487b-b050-\
b1aee34505e5"],

Cell["\<\
Some papers indicate that Petri nets were first invented in 1939 by Carl Adam \
Petri for the purpose of describing chemical reactions. To help those \
interested in chemical reactions, we write another function to visualize the \
chemical reactions using Petri net.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686705410413*^9, 3.771686774583675*^9}, {
   3.7716920611678123`*^9, 3.7716920719435062`*^9}, {3.771692295392655*^9, 
   3.771692331889851*^9}},ExpressionUUID->"db5f61a4-b6c4-4855-9a4d-\
4bfca574e3da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "reduceParentheses", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"reduceParentheses", "[", "st_String", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPart", "[", 
         RowBox[{"st", ",", "1"}], "]"}], " ", "===", "\"\<(\>\""}], ",", " ", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"st", ",", "1"}], "]"}]}], ",", " ", 
       RowBox[{"s", " ", "=", " ", "st"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPart", "[", 
         RowBox[{"s", ",", 
          RowBox[{"-", "1"}]}], "]"}], " ", "===", "\"\<)\>\""}], ",", " ", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"s", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", "s"}], "]"}], ";", "\n", 
     "\t", "s"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->"In[66]:=",ExpressionUUID->"4766af39-e26e-4696-8649-cd3372e43ee7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getChemicals", "[", "st_String", "]"}], ":=", " ", 
  RowBox[{"First", " ", "@", " ", 
   RowBox[{"StringCases", "[", 
    RowBox[{"st", ",", " ", 
     RowBox[{
      RowBox[{"\"\<[\>\"", " ", "~~", 
       RowBox[{"Shortest", "[", "c__", "]"}], "~~", "\"\<]\>\""}], "->", 
      "c"}]}], "]"}]}]}]], "Code",
 CellLabel->"In[68]:=",ExpressionUUID->"7100e181-ce6f-4604-b725-2a4095357ad5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getStoichiometry", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getStoichiometry", "[", "st_String", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"st", ",", "\"\<^\>\""}], "]"}], ",", 
    RowBox[{"ToExpression", "@", 
     RowBox[{"First", "@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"st", ",", " ", 
        RowBox[{
         RowBox[{"\"\<^\>\"", " ", "~~", "number__"}], " ", "->", 
         "number"}]}], "]"}]}]}], ",", "1"}], "]"}]}]}], "Code",
 CellLabel->"In[69]:=",ExpressionUUID->"7cc2b2be-af35-47d4-b9e2-cef379a3b4e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "inputTranslatorHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputTranslatorHelper", "[", "list_List", "]"}], ":=", " ", 
  RowBox[{"List", " ", "@@@", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"getChemicals", "/@", "list"}], "->", " ", 
     RowBox[{"getStoichiometry", "/@", "list"}]}], "]"}]}]}]}], "Code",
 CellLabel->"In[71]:=",ExpressionUUID->"e3a317be-8b13-4536-bd09-14dfdbbea7f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "waChemicalReaction", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"waChemicalReaction", "[", "chemicalReaction_String", "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "string"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"WolframAlpha", "[", 
       RowBox[{"chemicalReaction", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<ReactionKineticsConstant:ChemicalReactionData\>\"", ",", 
            "1"}], "}"}], ",", "\"\<ComputableData\>\""}], "}"}]}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s", " ", "===", " ", 
        RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Missing, try a different notation.\>\"", "]"}], 
        ";", " ", 
        RowBox[{"Abort", "[", "]"}]}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"StringLength", "[", "\"\<K_c  =  \>\"", "]"}]}], "]"}]}], 
        ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"s", ",", " ", "\"\</\>\""}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"reduceParentheses", "/@", " ", "s"}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"s", ",", "\"\< \>\""}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"string", " ", "=", " ", 
         RowBox[{"getChemicals", "/@", 
          RowBox[{"Flatten", " ", "@", " ", "s"}]}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"inputTranslatorHelper", " ", "/@", " ", "s"}]}], ";", "\n", 
        "\t", 
        RowBox[{"{", 
         RowBox[{"s", ",", " ", "string"}], "}"}]}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[73]:=",ExpressionUUID->"bb076a98-2802-4aa8-a156-c11359351aef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getPlaces", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getPlaces", "[", "Chem_List", "]"}], ":=", " ", 
  RowBox[{"Association", " ", "/@", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"\"\<Circles\>\"", " ", "->", " ", "Chem"}], "]"}]}]}]}], "Code",
 CellLabel->"In[75]:=",ExpressionUUID->"12cb881d-2d37-4ed8-8268-cb3baf825524"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getTransitions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getTransitions", "[", 
   RowBox[{"{", 
    RowBox[{"leftChem_List", ",", "rightChem_List"}], "}"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", 
   RowBox[{"<|", 
    RowBox[{"\"\<Squares\>\"", "->", "\"\<T1\>\""}], "|>"}], "}"}]}]}], "Code",\

 CellLabel->"In[77]:=",ExpressionUUID->"05565033-d64c-4d1c-b3f2-4e02ff2c560f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getArcs", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getArcs", "[", 
   RowBox[{"{", 
    RowBox[{"leftChems_List", ",", " ", "rightChem_List"}], "}"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", " ", "right"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"left", " ", "=", " ", 
      RowBox[{"Join", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<from\>\"", "->", " ", "\"\<T1\>\""}], ",", 
             RowBox[{"\"\<to\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<numbers\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "}"}], "&"}], ",", 
         " ", "leftChems"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"right", " ", "=", " ", 
      RowBox[{"Join", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<from\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<to\>\"", "->", " ", "\"\<T1\>\""}], ",", 
             RowBox[{"\"\<numbers\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "}"}], "&"}], ",", 
         " ", "rightChem"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"Join", " ", "@@", " ", 
      RowBox[{"{", 
       RowBox[{"left", ",", " ", "right"}], "}"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[79]:=",ExpressionUUID->"5874dcdd-3b71-4e69-af45-9b47d4c316c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildPetriNet", "[", 
   RowBox[{
   "reactions_", ",", " ", "chemicals_", ",", " ", "init_", ",", " ", 
    "steps_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"places", ",", " ", "trans", ",", " ", "arcs"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"places", " ", "=", " ", 
      RowBox[{"getPlaces", "[", "chemicals", "]"}]}], ";", "\n", "\t", 
     RowBox[{"trans", " ", "=", " ", 
      RowBox[{"getTransitions", "[", "reactions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"arcs", " ", "=", " ", 
      RowBox[{"getArcs", "[", "reactions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Places\>\"", "->", " ", "places"}], ",", " ", 
       RowBox[{"\"\<Transitions\>\"", "->", "trans"}], ",", " ", 
       RowBox[{"\"\<Arcs\>\"", "->", "arcs"}], ",", " ", 
       RowBox[{"\"\<Initial States\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init"}], "|>"}]}], ",", 
       RowBox[{"\"\<Steps\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
         "\"\<Input the steps you want to animate\>\"", "->", "steps"}], 
         "|>"}]}]}], "|>"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[81]:=",ExpressionUUID->"e66ab582-81dc-431d-9ecc-ba05abcbf1bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TranslateFromChemToGeneral", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Reactions\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"<|", 
        RowBox[{"\"\<Input the reactions\>\"", "->", "st_"}], "|>"}], "}"}]}],
      ",", "\n", "\t", 
     RowBox[{"\"\<Initial States\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init_"}], "|>"}]}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<Steps\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
       "\"\<Input the steps you want to animate\>\"", "->", "steps_"}], 
       "|>"}]}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "reactants", ",", " ", "chemicals", ",", "input", ",", " ", 
      "inputPnetData", ",", " ", "pnet"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"reactants", ",", " ", "chemicals"}], "}"}], " ", "=", " ", 
      RowBox[{"waChemicalReaction", "[", "st", "]"}]}], ";", "\n", "\t", 
     RowBox[{"input", " ", "=", " ", 
      RowBox[{"buildPetriNet", "[", 
       RowBox[{
       "reactants", ",", " ", "chemicals", ",", " ", "init", ",", " ", 
        "steps"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"makePetriNetFromInput", "[", "input", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->"In[82]:=",ExpressionUUID->"f3aab129-0579-476f-baaa-ecc28462c086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriNetChemistry", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriNetChemistry", "[", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Reactions\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{
           "\"\<Input the reactions\>\"", "->", " ", "\"\<String\>\""}], 
           "|>"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Initial States\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "\"\<String\>\""}], "}"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Steps\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Input the steps you want to animate\>\"", "->", " ", 
           RowBox[{"\"\<Integer\>\"", "->", "5"}]}], "}"}], "]"}]}]}], "|>"}],
      ",", "TranslateFromChemToGeneral"}], "]"}], "[", "]"}]}]}], "Code",
 CellLabel->"In[83]:=",ExpressionUUID->"e6e6ee49-501b-4fc5-842b-e72091247f20"],

Cell["\<\
Below is an example of visualizing a chemical reaction with input and output. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 3.7716916207835608`*^9}, {3.771691961129424*^9, 
   3.771692009087027*^9}, {3.771692403940859*^9, 3.771692432181847*^9}, {
   3.771692663538357*^9, 
   3.771692665716091*^9}},ExpressionUUID->"119293fa-c0bd-42a0-83e5-\
9e0335957ed3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/luzhiryou/Documents/GitHub/WSS-2019/Final Project\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<ChemInterface.jpg\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.771692626775058*^9, 3.771692630166587*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"37c0e1ee-0362-4af7-a501-dddadba982ba"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4FUearz+7O/fO3NndCbuzO3v3Pnfvzv53dzbMeJyNccbZHiec7bHJ
OWMwyeRowCbYGGObnJFABJNNzhkEiByFiAKhHM+p/3v6k8pF95EQQkIa+N7n
PE2d6upKOny//qqrqn9dt1XNhn/+gx/84IMfc6hZp8NjbdvW6fTqz/nyessP
mjRq2aD+sy3bNWjUoG21un8RSfZnP/jBG6SPhI2iKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKMqNIlzZFVAURVGUiiN8hdKFvE9hfG4ozDEUNoXH
yLfCYyhUmCw3N5djQUGBG1mYQ7hUEhr2CKaXPK+ala8+hc3wvtpsJSAZupH2
VJlxK5+fn19CSl8N3cpfKzYre7nbCdLMkiujKIqiGJ8CenbUBgsc+YvEFET0
0Rpba2OtHXZ1x5RCFFwBcq8t8JB4AleViby8PI7Z2dmSgwRcOZCvVjh8NS+z
CAYvLI3uSJU4RtXEUiLXcvSJoERKh0StoaIoimIp8D5XeoIRPMGwngWffJOf
Y8L5oYKIdXW1Q8y+tec+HSyOoD6K2PkiS+OpBc+6AurqKZlbdbDyUWaZsA0v
ZZNdr9YU4xVeFSnFVXlffUyp/wSKoii3OFYBiwgFn/+FQ/loX+HHRLeuNkbs
sKs7JYAeuUOUQm5uLpGhIkrOwXpDbtFR6+ZmJSmJjzp+Wxp8pVhhveolHK9z
iNKtbU5OTtTBZ5U/RVGUqxJ4DojMhYoeCIaKhAxZzDMFueIDuq6fa2kxxRhk
45j6Esr1DXvaSNd9M1cO9F2lIR6uErnPKG2erpt5/Q8BrZxdVfFd3+06KyBt
9D3WlFM+eVUdVBRFKR2h7x29cH7E7wsmMN+7G77ZJiaa8JVsgcVWc4yJifmn
f/qnqVOnuqdcp7LkfEow+xKflpaWmppq4xs0aDBq1Cg3hzIohVxy4sSJO+64
49133zWlEGufi3r983Bc788VRLeGiqIoSrEUzn6x8pdnRzsjHpMxP/v53/zg
B3/+Z3/+wx/9+Cf3Vau+aNEiE5igIl/FN8Hzqlev3tq1a0u2wFZACfTu3fsv
/uIvOIoZR1Z++MMf3n333eJkvf3223//939fbPW9NBRaq1atDRs2mCuVZc2a
Nf/93//9Axrw539+7733JiQkkJKy3njjDd+Dy7Jx4MCBP/uzP7v99ttLkw+V
qVOnjvSV6+2WgR07dtDD69evT09Pl8Zevnx55cqVFHHw4EFJI6WUuQhFUZRb
htAVPqA351Omg/7lz/7mt7ff9c24iR26dPvl3/3qr/7qr86ePWsvC05cOXr0
KIozduxYc7VVDO7ZM2fO2K8oILJCJsuWLePryy+/XIICSlZHjhxB48aMGWMc
bT106NCPfvSjv/mbv/n444+HDBnyb//2b5s3byaelKhqydUrDdL2ixcvivRf
VW6oBo3KzMy8nkKNV+3f//730kU0XCInT57MVyK5/VDvT1EUpTTkezKXXxAO
2dn0BUWzJcORUz/56S+eeu4FmS3To2dvbOyKFSuwsfv373/sscd+/vOf/9//
+3/79+/vXRl64IEH/uVf/gVTTORvfvOb//zP/1y9ejWnUlNTf/vb38bFxX3y
ySf/9V//9T/+x/+IiYkhk9tuuw0f7T/+4z84in7hGaGw5ICn9swzzxDzwgsv
/OpXvxKPBgfnqaee+su//Mtf//rXffr0kciHH36Yr1zyv//3//7d7373r//6
r+vWrSMftIDaLl++vKhhhesjiHzllVf++Mc//vVf//Xzzz+/adMmSZCRkdG8
eXMyQTRfffXV8+fPE/nmm2++//775ImjN2jQoL/927/FVyW+Xbt21BlVpV1v
vfWW5CD16dat2z333PM//+f/vOuuuz777DPiV61ahWb98pe/pJJ0C+0lgejU
zJkzqfO5c+eozy9+8Qu0nr567733HnnkEfuktVWrVtWqVXN1jdwGDBjgrkaU
wGuvvUarbTKVQkVRlBLINibLmNwiKczNK3pKxddQ5PPXP/35M88+L/qIqceG
79q1Ky0t7R//8R8RC4TgxRdfJHL8+PEY/7Zt2/IVJ+vxxx9v1qxZy5Yt9+3b
h4uUnZ1NGgQRXUN03nnnnZ07d5JhmzZtMO81a9bkkqFDh0rRx48fJ/G7777L
MT4+Hqv+d3/3d8RfunTpH/7hH9CRDz/8EAnj7MSJEymUUl566aUf/vCHqEaL
Fi3IMyEhgfTI6//7f//PTha1T8q4kMT33Xff66+/Thixk9V5KB3VQ4lat279
k5/8hDxJTDIU84knniAlOvvv//7vP/vZz0g/YcIEak7RP/7xjx999FHUSvL/
8ssvyYQ6jxo1iqw4RfyePXtIidKRSQsP+k1q9fXXX0vPoH1UQB4pcjNA5IIF
CwhnZWX9r//1v5Bm47iZqoCKoijXz2Vj0nB/PB3McVfBFwkHDtGv/v6Xr9Z8
+Tf/3z//2Q9+UL3a/Sgadh4TjU+UlJR06tSpn/70py+//LJcsnTpUhFE4yw3
wK8hErdo4cKFwbUAGzdu5OyIESPEhzp58iQigl+Jna9Vq9Ybb7whPiCFIkYI
JSWiklQMtZUcFi1aRA6TJk0yRRNjpObolyRwF4yTskaNGqJ6d999N26d8eRV
4hMTE6kAXhiinJmZee+99+L9oeBUnvy7du2KA5ucnGyfsuHt4vlaJcLJJZ/6
9eujer6i69atS/25eTDOQzoRO3xMKmCFjOKoPCpvvOFNil6/fr07yqoKqCiK
cv20HzCqbd/PO/T/PDVsMsMRTzAvv3B9RGRyYyj/5z/765/95Y8fe6j6s088
OrBf7/S0y9hV/CyEQB5FoVYcq1evLhkuXryYr7hI7hR9zD6R8vTNBLaR2bRp
E3IzbNgw+Xr06FHy7NevH5n86Ec/QuZQQOJxzaREEv/Aw0rP8uXL+Tpu3Di3
afhr+IBuWRImJaoqM1KoEl+NN03F5mzzP3PmTLVq1ZDRnJwcvs6aNUue5Z07
d07y5GYABcT3tA4m4oVviAtJMiowevRo28w6deoQySUkto8Ov/nmGyJjYmJs
tSWrbt260XZuMGj+f/zHf/j+aqqAiqIo18+h5IIT6ebYxZxMbyw0M6/weaDs
gcbnFz//6R+eebJwiUReNidM0aQO3DTUCo/pyJEjdnoMYoSCYJ9N0co17HxW
VpZ4RnY7NXexAwqI5KGAxrP/6A6J+/bty1X/5//8H0794z/+I+mHDBlCPDkf
OnSIQk+cOHH69GnJQfRr8ODBxlmc/s477/zwhz/E65Q0OFnGG1SkejLYSJ64
rnhYnJWh14ceeogAOR87doxjbm4uTiLiTgLOzpkzB10mcOHCBbtaHwW8//77
zZW74nAhvtt//ud/knjbtm2yoKNJkyY//vGP9+/fbzuflPiA1Gf+/Pnmyt11
aBpy36NHD6r3+eef+7Z5UQVUFEW5fhp/2LNhu+4NW3dKzTM53n4wnoKECvJz
ZfXfX/3VXz337NORwdGiFYKIFMKHD/jrX/8aA7569eoOHTpYw37q1ClM929/
+9vY2Ni5c+fu27fPeCvy0ILGjRtLGp8IooCcxc7L0zSkB1Ho1asXpwYNGoQC
/vKXvySckJBAZf75n/957NixSF6XLl2QQus2Ii6/+c1vpk+fjk6hyORz8OBB
sv3pT39KVmROJgMHDiQxGb755ptSAQLiAxJ++OGHUUzasn79+hEjRkycOJF4
1O3OO+/kLI2aN29ez549SW/lnvh/+qd/4kJTtD0ajmrNmjVRtM2bN7/11ltc
tXTpUjlLHbiWSGJwV6UT8AFpLI6z/YvYVRKkpD54gtwSuFvfGFVARVGU8iAz
HHn8l5kXFrPryVyh9xfZssx4M2H+8FLhPJmiLdMwrfhWiJGMFv7bv/0brp/d
xQXfUIYrMeBfffWV8Var8bVhw4bhoi1ZwkUby3DVhg0bSD98+HCpEgpIYrwt
ufAXv/iFzIQx3hArioNkoGL/8A//8N1339mG4C79hQdnrdO0ZMkSZFEqgyuH
JspzQDse+8Ybb3BWKoPf98wzz6A4JEBqO3XqRCQ+4IMPPig+IJqOZ0r68+fP
W+n5l3/5F/EBBdT5v/7rv2QclZsEBFEe+XHEMSQlfcKpn/zkJ9wqmKLngNTT
3Stb0iPEMlHH9pUtRRVQURTl+hFds0shvBXxHAvE45MFEXneEQ9R1kS4u5rg
DblDgnZbmJycHIQsNTXVfZVPCYvQg/tzhgObeVp7TqG4Rb5I422SefjwYbvg
zl570cMtKOxsYuMOMCL6XH7y5Emfz+W2wsqNzcpVKEmJz0smssGp+zzUeMOb
1F9OuZfbgmxZw4YNQ0nFhbSJ5ZQqoKIoyvUTeCuEf2fs8JUfpdwJvsJp/vz5
v/3tb3E2n3322eBLnYhBAX/1q1/ddddd3GZIDEL5u9/97qc//SmOtt2kVPeE
URRFUaos7pubrGu5aNGiBg0aDB061G6d6rtqypQpn3zyyeeff56SkmI8pUtI
SBg5cuSQIUPkkaJqn6IoivKnQnAo1TdAagIjw76hWnH93Et0FFRRFEWpsvje
KCFr+X1pfLpmHGmzT1fdfbZlPYjKn6IoivIngftmQ/H+3PcAmiJxdF+x5Oqg
BIKvrFIURVGUKovrvlmNE3yTTm0aN4FP6Xxr5xVFURSlihPUsuCbp4pbUeJq
qLvcUnVQURRF+RPCne4S9AcFu5zQfW6o8z8VRVFuAO7CcOMYarsi/nq8D9f4
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
A7oiWOYd5kuP/s4V5ZbC3l37bs4tvjtkRbkefL+9q8pZOJoeXU+hLr4bvxJS
KopyU2JXE2zfvn3Xrl2bN28msMVj69atvsA2RbkO+GnxW7K/MQI7d+6UVZkl
/0Tt7VliYmI51uf8+fP2XV0VPdNGUZQqC//3MU3u2jpd+KaUO77XKEsMalhc
evcHScrjx48fOXLE7p1beorzDRMSEhDB4kY/FEW5dZCXyVpuyi1QfFbOfSdg
GbKSgLXk5VHBQtyVAqW8IXEXs5TZnfGV5e7MYK7cIUEq5tuOoGSK6yLfDy9q
lSSA11a+IiV5BstSFOVWwzVE1rLZ2++baTPM4NOoMmTim0YbzPY6Ce7MU0I9
bQI3TZm9eLsINGp9zJXLSH1vSTbOjGLfwofiUAVUFKXS8Rkiaw1uJu1zpcTd
e61s+bhust0Frlywvphb4ZJndFgNklqVYajQluiKjts/PuHzbcEnJfp+La4+
Fld/VUBFUSod1xD5ntfcfO9EcM319fiA1y+mJXOtPt31P729quNm56UEdc0d
NfX9WrKzs4srURVQUZRKx2eI7Nv95OtNYxzKZQjUNf4VMXHI52P6HK6o6X0z
/6+zPm5W7g5mFhuTk5Pj+6m4SBNKvndSBVQUpdLxGaLTp09nZWWJ7SrbkFoV
JHzlHiDXv9OINftXFalrxcrrNdXQ3eG8DPXxPdz0vS7EnrVVcptvqx2scziw
9YqLKqCiKJWOa4gwBY888sicOXNMtGdef7p88cUX8trioBN3TVh7znHz5s3v
vffe+fPny7GeSUlJVDUzM7N27drfffedfWdiCZdYT41kq1atmjdvXplL9zn+
ZMu90O7du+2Lj60s2hkve/futcsKhIyMjPj4eFOKwWFVQEVRKh2fIapRo8bs
2bONc3t/EzwH/Oabb/r16ycNQWJGjRpVtnzcCSrY+SZNmpw5c6Yc64nwxcbG
Inxt27ZdsmSJuZqO+KScyjz22GPHjx+/njpIifTVmjVr7rnnnocffrh69eqb
Nm1yH3pSYnJy8iuvvEJxd95556BBg8QHHDFixL333vvoo49yHzV16lRTokOq
CqgoSqXjM0TYrgULFgSfBvpm5gdlMTh1332oZIoZ34s6XdBOsHTz9OXv7jBp
AnN4isuZZN26dfv444+D+QczcY1w1Myj7u7lK9etXslLsJctW/b0009bn86n
fb7K+Opsz/bs2bNLly5uob6lfG6tSsica5944onPP/+crwMHDvzDH/7gtoIE
AwYMePPNN3EPt2/fjghyP3DhwoXXXntt586deXl5X331FeIY7H+XkhXQrVtp
FNDdRzRqG32Uu6oqivKniM8QPfTQQ5jQd999l5v5pk2bnjx5UizJhg0batas
iTvQsGHDo0ePhr2NNerVqzd37lziMd3jx483ntnBkcESvvrqq/gIjRs3JvLU
qVMffPDB/fffjyEV14bL33vvPfydZs2aPfDAA6gSPoVcvmLFirfeeouCyPzE
iRO+FWcS+Prrr7G07htzrCRR+vz587kW5+Wjjz5KS0tDSkaOHNm3b18SYLcp
DuNM9RD6PXv2tGjRIi4u7tlnn/30009JsGrVqjfeeAPf5/3337fbdtWtW5c0
jRo1olZU9fLly0Tu3r2bepK/8TRi2LBhsogAIaOLiKSGVCMmJuaFF1545pln
aCxeFeEXX3xx+vTpxrklkAC9/dlnn0mJderUoSY0BzUhksu5M2nXrp0MutJw
qvftt982aNBAmnnp0iW5bUCP7rvvvpSUFOPImb3rcO9khg8fbpNJJGXZytB2
OiE1NZWvSBsaR3tdDaUrZKyAGGo7ZMgQ4zwVpZ533313ySpTjgrouy3xvfYr
KqqAiqKYgCF6/PHHX3rppeXLl6MOr7/+OjacyAMHDtxxxx2zZs1C+1q3bl2r
Vi2sx8aNG1FJwuSAfGB4RQ4wlTt27Fi6dCk28JtvvsnMzCSfTp06JSYmTps2
DbtKAHP9hMe8efMoC1WSh4+HDh3C2CI3+/fvRzQRYnPlhAqxcngfCIqts+su
PfjggzQBEaQCqMbMmTOJ7NOnT6tWrSR/lJcw8oRqbNq06Xe/+x2St3LlynPn
ztFk6jxq1KgjR47gJ2LkuQHgKhSzRo0aKA7qxh2C6Ne6devoE4wtpdMn3bt3
lwpMnDhRPCbuGegfOhA16dixIzcA9AOR/fr1o72yTMBqOqpKB3JW/EpqLvqC
/NFL3BXQq6gelZf01AftW7hwIb1HPWmvKTL+ZE5VJVlUIy86RWWoXocOHXbt
2mUC/i85PPnkk9KxHOnSxYsXmyK9Tk9Pp7b0oaTv0aPHhx9+aIdPUVJ+EmRO
l5b+h1cc1zQKWsIYhQ9VQEVRTLSZMKiSWBKsK3qEce7fvz+qgZahccgElh/5
4MLbb78dS47p4xQpSW+KjE/z5s2x2JzC1GCiT58+TcqsrKznnntObDsFoXRS
KJ5g165dsZxIVcuWLTGwZIKBRY8oyFoqIvFKqM/bb7+N0FCoOCnuoB96IaoH
uEg9e/Yk0Lt3b0TKeG5OkyZNZBSU9Ij4XXfdFR8fL7NeKf2Pf/yjXEuezz//
vAwDoqqSJ5G0S8SO5nOtCFmbNm2IlHrOmDEDL48w8iq9J4lpy759+8jh7Nmz
9Bu6Y30uasKpatWq4SxL6eis9BIyN27cOCmaS8gEEefro48+yj2DXIvz2Llz
Z1Okd3QODqm0SMYz6UOqkZGRwZ/v4sWLUmcSI+JUG6nCmUXyZLNo6cbJkyfj
JtuuQA3llkOKQNqoyeHDh8Xb4v6HOhhnKQ33RXisvgHbEn54JXCto6DSpVed
xqwKqCiKifYcUBwK2L59Oy7bsWPHkBLsJH4HvgAJsIdJSUnr169HAnJycmQ0
EgOOiySOAF4SLg+mnlMxMTFc+9RTT9XwwLbLeCkBrK5YIQw4TiKBxo0bUyIq
htslEyqQTlO0SwluHa4HthdlQYVJibb69nvhQnEnAVXFNzHe4Ccm2kozgmg8
Q413Rj4y5ZIcGjZsiGKKalAiot+tWzcCtHru3LmSZ5cuXciTBFxLTZBgIlFt
8pS2T5o06ZlnniGAvFJDdIfwiRMn6CtcS+OpMOHVq1dLhnbUEVlE+kXQ6YEF
CxagVrR31apVkoZ6UiK3GZSOMtobFVQMV84+pKMPZchXzlLzez3In3JpLz3v
Pk7lT4lo/v73v6fCEkkmXPX000/LV1FAd2YOGkpusrU1dcOrpU/sGhO6nfTI
rinxYVw5KmDY2bnUDgiUPIlIFVBRFBMwRNa5AMwgNhzHARv77rvv+p4lbdiw
AYsqFh6wsd999x0BXANs7KxZsyTxmjVrsLp4N+4GYgQoSGSFeHQHETGevrzx
xhsmMF1Eik5JSSHzo0ePvvLKKyNGjEBWZJTS3emabO2KgI8++ghPhACKgJtp
PIOMQKBWkiEiLk+7JD2mG6235b7++uuDBg1CsFBVkRsK4tqOHTu66kk8AoSP
Kd2C9ySjoOIDkoAMaT6SceDAAZwmiqZQusXdSFP8O5F747l+3B6Q4IEHHpg2
bZrx5I+Gk+GOHTuMd6MiQ50USrU/+OAD21f8pezzRM7yBzp+/HhiYiJH6TFK
kR7jK97ikx6jRo2iH+zgIaVQHzqc5pOeP/TevXtdZ5xbGlx4GVB97733bIlD
hgyhuw4ePGhHUEv5wyuO0iggvYqTe9aD2wYqfNVVKqqAiqKYwCgoCsL9fHJy
8qFDhxAjeXy2du1abOC4ceMwiZzCthO5ZcsWPBSRALHVMokUe1inTh2s0IUL
FzBH+DUoAi4YBhx7uHjxYitVs2fPFtVA+MQHFMdqzJgxmZmZ586dk7q5M16k
klSMa91nPTZMNURYienRo0f79u0J46Tg+kkCWkcNsZkoO3b+tttuE5GiJpSO
K4QLjNmfMmUKNdmzZ4/xno2KoAPyJ3LjCtzYsWPx2nDxqLAIivEeFJKDDC0i
QCRGvo2nSsSjgLY5HFEfepibCkkgCmi8R2wvvPACbjgWvkWLFki/pJcqSRih
F1dXWk1NRJuM8xzQbgeX70ER3BJQpdq1ay9cuJDeCE6Lfe6557gB4FSfPn1e
fPFFIhFBvHURl08//bRmzZr0Ib8NmoPkGe+pJWFKp8L8uUteKlKOCohDzU+u
rge/tHr16nHUuaCKolwVnwJiP3FncFIwZe6KbxThwQcfJB7V69+/Pykx15hQ
+1CpevXqy5YtW7FihVyLS4iLRABDhOV87bXXJPKtt95CGYmsUaMGiimZ48Ug
VaKkMTEx1apVIyXpBwwYYCdMuiZ64MCB6Iu5cm2FnMI5wqSLC9mtWze8MwI4
bm3bthUlpdrkj9wMHToU601zaII1hpMmTbr//vs5iwbZ0VScGjsKKnkiIhs3
bpSZMMab7Epf0RtPP/30yJEj5Tkgeko+Ii4kkFFQcSTpIhkFdcW9Vq1a4knJ
X0EekmZlZfHnIGcuxye1GmoHq6WZMgjJ13379tFvIj12akrweRy1wi8mseuV
26N0KW4pDecPgdru37+fUzNnzsST5a6AMNpXv359eoDuGj16NDHcMt3lQQVI
Rse6DnXJP7wSKI0Cch9Ck7llwgfk1ispKankSThGFVBRFA+fAhrPAKZ7+PwI
rDEOoDyrKmXmdjATa4z/KGsTSkhvd2PDlFFcmRp09crQBAxmCZMlKF0eDtqr
rtpkak7r3HV/V92dTLrCzh6ZN28e7p6VLTcH6Trf/jy+FYtyMzB8+HB3RPQ6
oQhugdzm49Tbs/Z3EnXp5VWpiLmgpUcVUFEUE+39gCaweto6CKV8D4K93M1H
xt9sgqiLsm1iK0DlgtsuOZa825vrV5bSTpLM1vmq2ufbN0C6hSrhKePAunUQ
vzjq0vtgDZGnJ5988sCBA6WpcGkQVXV7wCd2wVOlRxVQUZRKp7j3A7pfg7ai
9OYuasqgVxXVqJYXbual3+TNJ9Olb3JpmhC6cqduEcH4+PgBAwaYwFvai8vc
9SI5Ll68eMKECeXYgXb4VP5ervz5/oJlKFQVUFGUSieogK7Fi2rlQtf4boWQ
8+aCEkYUbQJ3fV954c7xKE7WLeJ2ubp5VWfQp+CldwN9KaOu6XZHYn3VcLWy
IvrN9wNwBwSK+52UElVARVEqneBzQB/FRZZgQFyL7UsffHplAptbllBumQmO
u5bvhdY/KqUCukLsG6SVlfKmFGLqWwRXtudxJeMb9476lxKutVxVQEVRKp1r
UsBreu5zVZW020ja41W9s7JRNmm4pvTXVISd/eIWJDNz3E4L+lbB/MNXvrav
ghxA35+yuJHta8pcFVBRlEonqiGKOvXC1axS4hsb9J0KjrJar6ds/lpxBB20
kj27qCN7JVfpmsyp78WywXzcHgg5e6L6vMVg6eFSz1YqDa6X6t6fuBpdtiFQ
owqoKEoVoJSG6JoIGuqrWpsbYI5cu136q4oTnRJKKY0o+OZYmoDcmBKf6F2r
QJcXUZ30kp394lAFVBSl0iluJoxxJuRbW+E+BgrOkyzZQ/RN7YiavwkoiFuW
T4xkRUPUKvlesVec9rnXBp/H+bL1ZVLygK0bH1XIgn5u0DEs7v7B/Wo3ezFX
KpFb26hd5G4l50YGy/J1S3lJbckK6PaPvKaqfCV+y5Yt5Z6noih/cgSfA0Y1
vLKVli9lMGwcO2xtrOwbY4oRMhvwLVGPOuPUN5PTXbfuq4lPWIMP3ayQucvP
fSLuG410B/1sTaJuzmYcobTViLoI0Xe5+1DPzcdWPihDUhN3UqirbjbgFhS8
N4iqfb5w+Y5Ol6CA9peQ57F3796ybY8QLga6Ys+ePfbGoITpPYqi3Nz4DJE1
Pq6HFZyx7/OezJXOiCn+WZu1tJLemuLiJv9bxXH10adTrj2POjYYHFSM6iu5
LqTvaZpPvGwroupUUOJt0b5WG+c+wVbVp7nBNgZbEfzqe0Ln5lPCuK7rfoqw
VpwuXHUU1HbaUY+SNzGISnEKeOjQoaSkJN+PUxVQUW5BXEPkW4jtc9lC3ivL
TWDw0DjWIzExMT093QQ8F9crca29NUo+t8W91jjzJIOT8+0lp0+fti+qCAq3
T7UlT3cTM1+J5kqdspeHrpzGaQK3B+HAPipSeavgbq/afDh77tw5eUuF9E/w
QaFxpN92V4qHzcfKRNSedHvAvaMoQQtESV3ntLwoQQF9o9kcT5w4sXPnzq3l
BLn59q/T4VBFuTUpzhBFXQgmBIfXrA158skn586d6/O5fCpp8/dZnqFDh3bp
0sVeEtXBcUv0pZFX5tmdRX2K49PEYGXMlXrq6r6b0h2blVcdmYBkuEVEHYx1
j7YVjz32mLwPIhxt4xrfn8Pm2b17d3ntRXAnN1deo7ba9bXdsC0xqAs3ZhTU
BO6gyqvQYBFR7zQURblFiLormk/vXHMk5tS+T8c3KPfggw/Ke2+L0y+fcZYY
KW7s2LEff/yxGPBRo0Z9/vnnocCcHJ8r54YfeeQR+8JBW66rR9akB0dQo84P
MdEMvo1xfShphdshvub7hoiDuRlPweXFTMH6uF0XvnKmUI8ePVq3bu2+3iLY
cDdGjvbJrO/GILgbmy3X3q6Ul16UrIC+v3u5lBi1iGBYUZRbh+IMUejK9emu
ifBZcjFQYrpr1KghjoyJpiNRb+yjGlucQVFDN33UZ2Gm6DbeKqAJ6LjN1gQm
T9qjHT90HTS5RE7ZQq2baQK3B1H3ZgmacVcx7Sl8wNmzZ7spo24P7vu79OrV
S14ubM+6+wwEjbytm0+UfX69ifYHKseVhqZEBfTVIao3ej24T2+Dz4gVRbl1
8BkiUZNatWphjevUqVOtWrVu3bqdPHmyefPmSEyfPn3S0tKMZ0NGjBjx1FNP
Pfroo506dbpw4YLx7JWVoaSkpGbNmt19990vvPDC6NGjzZVyQ/4IZcOGDatX
r07+ly5dIvKLL74gfwIDBgwgW7J64403FixYsHv37kaNGsXGxj733HNDhw6l
6FWrVr377rtk/vbbb2/fvl2yRUHI6p133qHODRo0kNfHh733s6MRFPTiiy8u
XryYSDKsX7/+nDlzXnrppWeeeWbSpEnSdtr7msfrr79ODsaTOVxRmkllUGSR
JPFPqSpyzyW2AxMTE9u0aYMX/Ic//GHRokW2P41j0rlWXvJurrS62GGaPGzY
MCr2wAMPdO/enT6hi+rVq2fd0uHDhw8cOFD6lg6hRW+++aa8xZizCQkJ9Gdc
XBy1pZeM995Y+ueee+6hr2wlz58/T3quJdmrr75KY48cOUIz7V+TZoqDT1VH
jhzZs2dPOrZ27dq22uUlRlcdBfXdepWvm+ZOplIHUFFuWYKGSIQMu7d06dLp
06cjNHyNiYnh63333bdixQoMJrYR+79y5cq9e/diZuvWrWsfZsnr1Hv37v3W
W29hXTdv3mzf5WqKzP7DDz/85JNPokHffffdQw89JG+DRVPEnTlw4ABGu0WL
Flu2bEEINm3adPvtt2PtEb4zZ87s37+famCfDx06hFYSRuOMNwqK9Cxfvpwq
uRLGhZ07dz5x4gRKhziijGvXrkUXSEDdkBUaKK/2i4+PR09pprynngp/9tln
5Im4oCYvv/zy+PHjicTtuvfee4cMGbJt2zYUsEmTJsa7JUCMOnToQP4TJkyg
ViLBrqPHtfQJ/RNc+hfyXnqLeqLRNIE+IRlKd//9969fv17SI0/yoBPZev/9
99FxTqHg0mnywmJEjdadPXuWPuTrl19+efjw4UGDBtleoivokOPHj5M/Cdas
WZOVlYWg00zJkPsEuWPhz3HHHXfQTLQPBeR+xpSrG1gRWzEoiqJcE8H1gFjj
xx9/fObMmRLz9NNPy7vLAUvYt29f4412jh07VhKjOEgGMsFXTPfChQuJxHI+
//zziJebs73ZxpjLiB80bdq0a9eu5soBPWQFuy1hbPtdd921a9cu+UoyNNcq
C34c1RMfEIdR4hERzHtqaurGjRsREVxUNA41xItEbRFWOWu8l88ir6iG7QSK
ppkiWE888QT9kJ2dje70798fz4sE9ABpZBgTHaHJRNJS9Cs5OTnbAx2ZMWOG
+9AwPT2dEqk5+ogvSX1sn1iBo26cIoY+wQ0kktsANIsAUkX+qBWyS+W5tZAl
G9JpFEQv8VewHjHxqKQd4pNe4ivyx92LvV1ZsmQJAf7c/DkyMjKo1eDBg+Xm
gXsY+XNQCt4oou/+Ka8fVUBFUSqdoCHCTmLVUROxdRhSXAmJ/+CDD3r06JGZ
mfn73/8emyzL4nJzc3EW8OYIiy0lgDlFKXA9XnjhBTwL34gT+YtjyLXdunXD
dRKjLdMaSYzWcLlkLj4gZaEOnEIdevbsKbkRySWdOnXCyLuPIHFb8PKQiblz
56IXnHrqqadQEGw+fhz1of7kLOpDJUUIyA0/kbrhvhGmCbRLxmNxWmkarq7x
JBhhkoJwS0lDxWjObbfdRv6URXo83IkTJ9rncXi7lIKOk5iKUSXRTQvFcZX4
wtQK+WvXrh0Xrlu37oEHHkA66Y22bdtyFs2tXr267U96r02bNgQQcbRelqKQ
AxpNJlZeSSNKio7jhyYmJtIzdMjp06cvX75MragPXYTi01J6mAspUbSVq5Yt
W0bli1uxUl4/PEVRlBtMVEPkzsx/55138BpkNggKiF3FEmI88XEkwfHjxzGh
Bw4cIIwhlQvFcmKQceXwTexKPeNZe2QFUZCvYu25tk+fPq1bt5bIxo0b9+vX
T/IX78badtLXq1fP2uE33nhj2LBhxhtZlQFYEJ8FX2z16tXiMbmt27x5Mxna
bUZoi/itCJ8MP0o8jhvqI+rvgui0atXKeL4VYoo6UxkECI2gK+y1EpB6cs9A
HQ4fPvzqq69+8cUXR48eJaVvDgZ9ItNoCX/00Uf0icTjSlMlJJVbDr6SCSXi
d9vekNsGeglZt5M88eDwZG0F8AHxygnjHePUv/LKK/Xr10e+pQ408+uvv3Yf
vfE3QgElZ+MJfbVq1W7YTBhFUZQbg88QWZNoheDtt9+2KoBZltE5vDAsM5Y8
JSUFO/nyyy+LP4gTERsbSwJcLRwxYubNm4fcyFQZ67lg7e2IZdeuXdu3b09K
3BMZdkObiMRVQfWQEvwg/CYCYoHlKR4uDDH4WfhWMvSHAnbs2PH8+fP4NVh4
skJc8M4w+HhACQkJiDiWnMiNGzeKPorBJ4yPQ+Z//OMfa9WqRQ7nzp2TCqMj
zz333MqVKzmL6MijNKSZzOVaTlEBGeSkIBT80KFDJEZopKW+2ZjotUi/bxUG
p2RkWGIQWfpEZiWNGzeOXuWsXZZOlfAHaeauXbueeeYZ0Sk8ZfpZ3GSuQvpR
ZDqfgiZPnkwbZZiarqBRvq1piEFh6Vji9+3bh4doih7L2lFlbnLKd/cwVUBF
USod1xBZg4zJlSmdGD1ciVGjRsk0SBQQ44wNTEtLwx/EGcG0vvnmm8eOHRNz
TYLq1auTGI/j/vvvx6XCLONf+Baa4WPahfNi7Y2nLE2bNpVk2HOcDmw4+chj
O7Htchbhw3HDJteoUUME13iqinmnSpRInc+cOWM8c41yvfbaayQmQwIXL15E
MW+77TbJEEQBEce7PFA0cqBE4z0lpG5E8pX8SWO854D2AZkMD9qCUF5KITHy
nZyc7G79LeHBgweTiZU/d1nE448/bkdxO3fu/OGHH0o8FSbPXr16mSL1mT9/
Ph1Li5566qkWLVrQ52QovWR9QFJOmTKFthAp05MkNyL5u9B8qi2TTonkr8nN
Aym5tSBnZJ3ENFMGe8kccaRPjM6EURTl5iKogHaiuG9VnXGmykgYZw1PxL0W
UEO7p+iJEydk9YRvNZxdh2UCs+vt9EiMeVJSkrsmzk1J5hRtz9oARePE2Xys
w2L3HDNXLtBzPRox73bTbAs1QU9D0d555M7qlMttQSFn+zIreb7OtHvRuJ3v
W5tGMxE75NX355Ced2tldyt1j9TcLnXkWjQ6Li6OStK3ixcvRgd3794tZ/lL
nT171ly5Jaz7FynfRXmqgIqiVDpR94Rxw+FoG1y7G4y4Q3luSp/GhZ3tQH25
WRsbdYSt5I1B3BcD+Xb797UoWNuo24cGL3T3aXGXw/s2XnMbUtwmZjYHV19c
LXa7AiXC+WrQoEHdunWj7kLg5h/sQDdGqpqRkYErZ8e3cZ/xB7lhcGvry8F3
I1FeQ6BGFVBRlCqAGqKqg6s1aNyBAweefvrpZs2aJScnl+HNCFEZM2bMQw89
VKNGjccee+z1119HYStoz7Groj88RVEqHTVEVY2gf+fKn89VLEPmuJNnzpxJ
SUkJlnUj0R+eoiiVjhqiqoN9PGrXKpqK2cC5hPHtG4b+8BRFqXTUEFU1XJkL
7qd9nTm7c5CEytoUWn94iqJUOmqIqg7uZJuoEzsF3+yUay2ihIm4NxL94SmK
UumoIapSuEsITTQH7Xo8QXfyqh0CLd+dXkqP/vAURal01BBVKdz1fa5LWF7r
EarOK4H0h6coSqWjhqjqYBceBtf3BQNl9t18S/v1OaCiKLcsUd8NYYqZguhz
HFxvJbjwPJiPolhUARVFqXSC7wc0jn/hmzLh7vFlApu9mIBDYVNW1sMmpcqi
CqgoSqUT9R3xxtvec+TIkRkZGXXr1p03b57vrJW8oMbJqRUrVth9nstrPxPl
ZkIVUFGUSsc1RPJ+B+PJXKNGjaZPn46utW7dWl4ga4rZcjMocIjg2bNnH330
UWTUjaywRih/eqgCKopS6QRHQVG9pUuXPvXUU+6bC6zM2cVoomgyecPu9uy+
R6B37949evQgE9U+JYgqoKIolU7UN+S2atVq+PDhxhO4evXqLVu2zHjKOHTo
0KeffvqRRx7p3LnzhQsXROzeeeedhQsX1q1b96GHHurVq1dycrIkjo+Pv/fe
e+27cXVKjOKiCqgoSqUTfD9gSkpK9erVN2zYYDyP7+GHH543bx6BUaNG1ahR
Y+XKlXv27HnzzTcbNWokTiIJcBgXLFiwZMmSBx98UF6tazy3kXzmz59fGc1S
qjqqgIqiVDpBQ7R///4777wzKSlJvsr73CUwfvx4UUn8uzvuuOPQoUMSHxcX
Jy4estitWze7IKJWrVq4jabyFp0pVRZVQEVRKp3gc8A1a9bce++98qJzYh59
9FEUMC0tDVlcv369POzLycm5++67Fy9eTJpHHnnE+n3IX7t27ew2Jk2bNu3b
t6/KnxJEFVBRlEonaIjEvztz5ox8ffzxx+fNm5eXl4cUTps2zXjOHd7fXXfd
lZCQYLxR0Dlz5kjiLl26tG/f3hQ5fe++++6wYcPklOqg4qIKqChKpeMaInkf
QXp6+n333bd27VpT9BxQnuX16NHjxRdf3L9/f2ZmZpMmTWrWrJmdnY0aIpEo
oEwWJY0ooPGE8oknnpg1a5ZqnxJEFVBRlEon6mqI9957b9SoUTLRBYGbPXs2
AZSxdevWt99++9133/3WW28dPXrUeDL32GOP2SXzXbt2/eCDD2StxOHDh0kp
c0F1IqjiQxVQUZRKJ7gaArVauHDhU0895Usp81vQweTkZOvW2TXy4gO6+6qN
GDGibdu2RtfCK9FQBVQUpdIJGiJZ5P7aa6+JZyd7XFvJsy+ws2H71jlTtDca
ZzMzMx9++OF9+/YV95475RZHFVBRlEonuB7QeEKGeA0cONA4r2Qt4RV1wddA
LFmyZNKkSTr4qRSHKqCiKJWOzxD5nDWridbRs/uhuaoXfO8qAfEHfeqpKIIq
oKIolYUdnNy+fbsboygVh3vXtGXLlsqujqIoty7i7m3bts3oczqlgnFnQ7k/
PEVRlBuM3bOF48aNG406gMoNR31ARVEqEdHBrVu36qM6pUIJ/rRyc3P1OaCi
KJWCnd5pPAXctm3bpk2btipKxcAPDI9v8+bNHPlKYNeuXVtVARVFqSR8axzU
AVQqDt+WCAUFBbpJgqIolYW7c4uNVKOkVDTuhCu96VIUpbJwX9quE0GViibo
BlZWTRRFURSlKuMbpjh+/PiOHTvK67nkiRMn7OC/3eFBURRFUaoIdoj+mIe7
/ex1cuTIkcTERFf4VAcVRVGUqoC7yR7hXbt2ZWZmliGfcDFkZ2fv3bvXOG82
cR8KKIqiKEolYueLIkw7duwwV76C5Pqx6/FV+BRFUZSqhp0ts23btvLVKXKT
rZB8keVYhKIoiqKUAat9uIH5+fniA5YvsiG8uJnuS0wURVEUpXJxp6aUefeY
4p4DkrO7L7dqn6IoilKlsNsWBUcsrx9RVbsmQieCKoqiKFUN5KmUzwFFxXJz
c0uTbbk/W1QURVGU8qU0Cuhz4vjqbvcXFVVARVEUpYpTeh/QXMs+t6qAiqIo
ShWn9AooCwatP6gKqCiKovxJUxoFdJfPG0/7rjqzRRVQURRFqeKU3gckzfTp
03fv3l2aiZ2qgIqiKEoVp5QzYeTYpUuXJUuWSGTJL2BSBVQURVGqOKVRwNzc
3EuXLl24cKFjx45xcXEXL148f/58ydmqAiqKoihVnNIo4Lp162rXrt2wYcP6
RRAuOVtVQEVRFKWKUxoFzMjIOH369KlTpzp06BAbG5vkUXK2qoCKoihKFeea
ZsJ06dJl0aJFphTTQVUBFUVRlCpOKRVQ1sJPmTJFXvpwVVQBFUVRlCpOaRRQ
3vAukz9L+c53VUBFURSlinNNu6KV/n1/qoCKoihKFaf06wFdSl4MaFQBFUVR
lCpPGRRQ9wVVFEVR/tSRp3s7duy4qk9X3OUWXzx5uoOl+oZcRVEUpYrgapb4
a+XosqF3mzdvlrB9oZK6hIqiKEpVwHX6tmzZUu75b9q0SQJXnTWqKIqiKDcM
u7RBXL/4+PisrKxyzD8nJ4c8yzayqiiKoigVh/uyPzhy5MixY8cQrHCZCAU4
fPjw6dOnJXOrg+oJKoqiKJWOFSN57TucOHFi69at28qJU6dO2ZztCvpKaami
KIqi+MjJyfGpUtkcQBebVXC5hCqgoiiKUhWwapWbm2sqRp7ch4A+fVQURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVGUsiFvyZSjfYGm
fXWmvEYz+N5q9yhn3UhB4n0v5fSVnp+f7ztrc7OJJcamLPC4niZXCjRHmqAv
5lYURal0MMWiMnl5ecaxzFZ6iHc1yyoU+GTIZ9WtWhHwyaWbgwnIqFuQPQZV
NVjiDca2nQb6JFvaYvvW7WF7Vt/NrSiKUhUQa+z6YoKVmOApC0LgM/slFBR0
3CTGqqEbY4rxNN1jJRKUMJ9SB1P67iUqvQmKoii3MtYIBwXI9VPsYKY18u6A
pJsmOG4ZHBq1zqPNJCjBUXPzUYlulB0xdptvW+F2pjRKjtb/VQdQURSlKuD6
XILP1QoXIWftwyzjGHZr211ps4OcrhrafHJzc22JRNrEweFQKxnuwGnlOlA+
CYv6cDPoOPtcWjsuqiiKolQ67rOqnJwcn2Hft2/f+PHj09PTjaNZHNPS0qZO
nRofH29TuhdevHhx7Nixmzdvds9a2U1OTs7OznavEmV0x0UF+1USlDAwe2Mo
bspQMKU7vcdW270BUBRFUSoFO7aJcW7WrNmwYcOCtt14phuZq1+//tatWzHm
R48eHTNmTEZGBqcOHjxYp06d0aNHi2smRt5OrTl//nzt2rW51lw5GEg+LVq0
aNiwYb169Sg0JSWFyMWLFy9YsMDncrr12bNnz8SJE7OyskwVGAU1jkPn0+ug
GroK6PrIiqIoSmXhPtqrVavWqFGj3Kdy7ogoonb69Gnjme5FixahXHhwkvjc
uXOiSm56yeHUqVOknDlzpjuxE+ls0KBBq1at5syZgzg2bdr0xIkTnO3bt2+/
fv1ssqDGLVmyhNxQ1RvUO8WzcePGrl27duvWbdu2bRJjB2a3bNnS3YOAewkJ
EhISxo0bhyutjwIVRVEqHatZ6BqqNHz4cL6uXr36o48+Wrp06YcfftixY0es
vY3E+1u1alWbNm3q1q3LKVy/s2fPdunSRXy3nTt39u7dG18SIZNx0cTERBy9
GTNm2FmjQCaNGjUaMWKE8cQuNzeXsyNHjiRlkyZNyG3Tpk1cSIL27du3a9cO
oSQZ9WndujWV7NSp0zfffEOdjxw50qdPn+bNm1MoeZIblfnyyy+JIZMVK1aY
K0dNwzTUFHlefCmIHAvyTV5+iJqFTLggTDK6Io/4cEEoEmdC4VA+HwkTyzE3
J6thg3pbt2xauWJZm9Yt83KzC8+aUHZWRuNGDTZtXL9+3ZpmTRvn5+XYU3xi
Y6b36N61T++eNiv93NyfsA2HTeHH++3ZbzZOUZQbjJU/QCkQl88++4yYuLg4
xKh+/fqff/45DlqLFi2I/Pbbb4k8dOjQjh07cH/wxb766iuE78yZM1wYExND
mk8++aRXr17oXSsPdAd/jZRy1rp1+IDkyVVDhgzZu3ev8fzK2NhY8kfvUNV9
+/Yhu23bth07dmz//v1JefDgQcpFglFetBI1TE1NJRMkkjQocufOnSmOU2jr
rFmzyBndvHKGTz4CFzYRLcOfRfjWr9v8YbtOzZu1Hj9+It+pWSQByhfKj50R
07plq5bNW3To0J4KJCefpysuXrxgIr5wDsrbq1cPT1tDyPHJk8e9giJlHTy4
v0ePHtKpXbt2OXz4sISlUI7cSPTp08vrDdHikB5v3mM0BQwXKmDh8XtCRlGU
G4s7wwTJQ0Ew13PnzkVodu/ezdmvv/4aYULI5s2bh5Zh0lGxMWPGoEqXL19G
dHC7iJ82bZrMb8zJyUG/8CW5Cr/s9OnTBFBA3+PFAwcOdO/evU6dOpwdMGCA
TLBB0fDmbN0yMzOTkpIQWfKfPn06FZs4cSIVu3jxIrnhilJhdBkJRnPJh8DQ
oUOpGOppZ/U4M0gjPlconBtx6MLmxLHjH7Rpd2DP/gvnkjt37LR27VrSUHmO
x44da9Sg4amTiQcPH6rXoH7yxZRTp5O6duvBERGl9gsXLfnqm689xQx9PmLk
0mXfiWHD3i35bulXX48mnvDnX4xYtXotts81fitXrendt4/PBdDPTfkppPB7
yPs45wpTiETmex8VQUW5cdhlBWgEkoH3hOvE19mzZ6MjR48eReBmzpyJAKFE
RKI4RJJgwoQJiNe5c+cInzx5ElWSJ33r1q1r1qwZyVq3bk2C+Pj4xMREzqJf
7tYoMvJJYPPmzbiTlDVlyhS+chUOl9SHzLt160Ym+JIkwDEkfty4cVQSBSQ8
depU4klADDWkFMrCRf3ggw8Ic3QnoJpCh/f7scfF87/9oFXLRd/Onxc3u2/v
PlMnT5FkeId79uyhUOqQnpHVoGHjs+cuFBSZrqzsXI5Tp834+psxEjPyy6/m
zP02Fx/SE8dp02NGjxkXCheemj1nniSTHDiuW7+xe49eYU8uK91E66dCP0X/
zex3vyfoaF+eKqCi3GDcxYA4XI0bNx42bJjxFBCX6siRI4TRJsLIHI4hiiM+
IEqE6OD9IZFIFZJHsoyMDMSob9++KSkpK1euRJt27NiBD0ikeHDu9A98QI7E
nDp1isu/+OILEpCyVy8ZIQzjRcrgJxUjwahRo4yngHYmzOLFiwnjmV66dIlS
kpOT7UoKhLh58+YdO3a029QULVT0LAzSE8r/dt6c9u1ar1u7euMGDmsO7Nvv
XRsxS8hZu/Ydunbt3rljlwnjJkbSe08M83MLOIbyw8uWLh888JOIuQqbj/sP
XP7dCmvTFny78LNhn+flRNxM0ixZtFQkV3Lgs3L5qv59B0g+lW+j9VOhnyj4
HhTmX/lRBVSUG40shcA7Q3G++uorAosWLapVq9bRo0cRjri4OFyqM2fOoIBE
yqTNWbNmIYt4ggkJCagPShQbG4sCNm3atHv37ps2berUqRPh7du3o4bo16BB
g2SzFHkUuHz5ci4fPHjwggULBgwYwOWUQnyXLl0QwTVr1uBycrZJkybr16+X
GTJff/01CfA0qeT48eNx05BOJPvDDz9csWLF2rVrEUQq9umnn5Jm79697du3
l8eXV8y69Ga/yLPBfQl76tR9b9fOrfl5WWdPn+FUVmbe/G8XZ2Tmnko606Jl
a46pqeliytJT0+bPW5CVkSmqd+pkUotmzRP27Dt9KqlJo6ZcnpOVu2jBwpSL
l88knSbmyKHDSYmnG9ZvcP7shfzcvIXzF6WmXObCgrz8tavX9e7Zywqifm7m
jyk6OsGwXwTdj6IoNw53cxXCiAsKYopmwiQmJooCEn/8+HG8LZkJQwK8sLZt
26JcKJ2sd5gxY4bxHEZUCckbOnRo7dq1d+3aRbZ4hcSI0yekpaUhtS1btnz/
/feRPHEAiUfv5MlgTEzMvn37SMCFSCQO3dixY6lMamoqYdJ89NFH5IzU8pXq
yfQYfMAxY8ZQARIQj5K6M12NmKVw4fAj0YuWzG/YqG7rNs1btWqFb3v40PEG
9Zvs238wJze/XqPG9Rs3at6yRcfOHVauXnX4aOSB4P6D+7gwP5SHSxc7K6Zh
40ZNmjWOmzO7IJx/IvFkg0b1V6xaSXjW7Li69es0btpk9tw40h87cbRRk8bL
VnyXdOY0aerWr1evQd36DRus37jOM5MhPd6kx6L/ZUWfAudYnGAqinLDCO78
aU9Z1fCNXrrbZaODdkcXyQ3S09PdSCE5OdkOSNo9P8kBRfMtPMzJyTl79qwp
ejR5+fJlm7MNXLp0yS4/lK9on60YV1Gc3X3liv3TwoUK6D2V40ReXkF2Smpy
4e132GRkRLL9bvmyT4Z8mpp++XJa6vzFi5o2b5YXDqVnZtjhzPxQpGvSMmhq
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
Ab4hp/LCoXDhlZF/UUkJi95FFrZ7Z224oGgVvYRD5vvNX/R4Cx75ueSZMJ/8
iBSG0oyZuTuve8zBSRvPH8sx2aZQ9yI+oCqgoigVDDKXZcyRdDNl0zkUcE58
KoJYkJ+bL89qvNUQYogiouYZp/z8XHmck5ebbb5XyZAbJk2oIK/okU/IWyHx
fbICOaWfW+8TCueETG44Ms4eGV9AAafvyOgdd3jSxrMoYJYnkd4vRhVQUZQK
BxsTmQuabWZsSe4VmzArPivNi8mWT9i7ac8vvHvPxXgVeANZYZMXKjRWfHLy
I185RhKHCk/ZNHKJBPJC33/Vz635kZsrhJBbolRj4uLz+sQdnIwC5poMb4y0
wIQKnwOqAiqKUpFga5C5k1lm8vpzvWIPx+03SQXmsjHJ3ifFGAQxs0gNs70w
n9SCyDEtVPjV95H49PD3R5tSvurnVv5kO5/zIfNtguk5Y/+0DadPeD6gKqCi
KDcOz2U7k2WmrEnqO/Po1F1mwe78BTvT5+3OjduVPWdX9qK92fO2Xli6M2Xx
9ouLtiUv2H550c60hTvSOc7flrpwR+qC7Wk2zFHOSthLnPHt1kvEzN+WQtiN
IY0eb7XjtzsuLtp1eeH2y8vjsxdvSV28KzRjh+kde3D6+tOnsgtHQSMPoHUm
jKIoFU1kcBN7Yy6km6XxqX1nJHSbtn/QzIMfxyZglLrPPNpt1jGO+Ia9YyKf
XrGEj/acebRn7DE96vFaj91nHus+62S3mSd6xx7vF3P84+mH+0w73D02sW/c
sSX7MhMzIsPvBWHviSHHkIqgoigViShgODL180S6Wbg3d+rmtOnrzk9dc3by
+pTxG9PHbMrgQ4DPhA0Z473P2I161GNZjmM2ZX21KfubjdnjN2RN3ZA1Y33m
9PVpU7bkxG5PP5ZRNARakFc4e8pbhaooilKBhMJhb05CpjGncs3xDHM63VzK
MmfTzZkMcyoz8iHAR2L4JOlRj2U9JmZFPmczI8MOyanmfJpJ4muOKXo1SL63
VCJyb1bgaaCiKErFIavzwt5av3RvckJ+uGhRVth4i7a+X8wVDhvnpH70c20f
byJokdh537n7yvF+e6Yg1xRkFa4U9BajFhQ+E1QURakovHfahkLh3JCJrHl3
rFNBZHfQQpMUWcmOMuYXrpPXj37K8sn/XgFDVhdzRQG/XygfKtqISBVQUZQb
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
ZeKm1eK/fqs6lHUoK7tiTm4Y6ub1VWVnHssM1GX4ji67TER6Kh/+1e8u+2T5
pz/1bm7miZzMZl+oOZR9eO6cdxbNf21J/t4lBQfmLCjLW/j6skX7P7WsfE5e
hT+nIjDneO6lb8+dt7Wo6Hdf+oJobozecOOehYuOZ2Y3wYR0yy5Ic6ahba6S
fPvez4MC9ihrdzyupkNYt52wRsNOWIUsfwzDMAbTHwlTXV29cuXKZ555Rg/y
jCgLrrKy8rHHHluzZs3VV18N2xDJKP1dd90FCfvRj3508803P/DAAzU1NWQM
7t69e/369VddddXatWvfeOMNiB1K2LhxIyRv9erV27dvp2Jvuumm87UBrWbf
Xihbd41Z5g8NjBweFM0tOxfn14RCeladGl6CIIdZ9lp2lqc5I/P4F/+dOHVQ
/O6J3xXl75q3uDw3v86fU5WVK+79hXj44ZP+rIZQjvjOt8WuHdVzcw4tXS7a
+8SxGlFaIqpOiN2vNH718hPZ85N//VWx93Vxz3pRfVRUVoh1/2/kllvF0RJR
fURseqI0r6A8c7746c/Fk08d+PJfi7IDoqNVlB8RO3cNf/bftwUyu+yRonpZ
GFv+ZMclKnxgLilgjBQwrsXOUsAEr4fGMAwzJdMfCfPee+9df/315eXlFKPt
vrKysnvvvXfv3r3vvPMOLMRnn32WxnZCLqFiW7Zs2blz53XXXffiiy+ikPff
fx9K99BDD+3fv3/z5s1vvvkmLMRbb711w4YNpaWlv/nNb6699lpcAiVTP2Dq
cFB93SkUUGLYgJPuU48FHRLh8LaCwtpgSPkSISL+QStIG5AWXTntcje7fOUL
F4rdxaK1Qux/7eR1N+0p+Ivq4NwjOfPEW++L4l3lgbzK7EvEz+4VdXXHFuSV
Fi4SHVER7RX33SvuuE3UnRTlR98q+KT43zeIxjpRczy+4Ufi7TdEe5tobhLP
PCFe3SZqG9/98td3LigQv/6NePW1rZ9dEd30iIi0iqf+Vdy0qmvhkg6X57TP
GlczbPf9RSdG78hANqDeynBiz8Gz7vnLMAzDSKbfD7hjx45rrrnm5MmTeg47
SQ8NCoWJB4n8iYKcmdAyyB/NboBt+OCDDyIe1iIMPRoGg1zd3d1vvfUWij1y
5Agia2trYTCS8xMKuG3btiktPkeFUxTQ3I3Wueu6XBWtNVJcKBWw31JA36AM
Hu1mlONhPP52V0ZVMLvsk58QTz4gGipEQ4t4/3Ds7/7+9YX5ouSg2LH7RN7i
Q5nzxjY9JVraSublVXziMpTc/KtfvZi/cHv+wvqNG0Sko/Lr/zByzUrR0rTt
2//tucuWdK1aKdrb31x726+XFZ76p38SDeHq76/evHSpeO45sXvPU8s/vhWR
Lc3d11y3b/7i1sBcaeh55KT7fnv8Z7+1ktuEI3SfpYB07wlj/U9aH9uwiHmH
XIZhGINpKmBnZ+e+fftgvh04cIAGc9bX13d1dUF66urq7rvvPgjWT3/607Vr
165Zs4ZsQGgZ7L5oNAoRfOCBB2DlQQqhjzAYqYSImiVRXFwMC/GWW26Bgblq
1SqU8/zzz0Nw8RWnptS7P1UBw5YC2t1q9ugXj9Ut2C8nvCOEmrzBE8HsktxL
9hYuT95+p6ioEuVHfv1v/404ckC88eqhvOwjOXOGH3hSNPWUXlJwrGiZaAm3
bvzZvrm5pfPnVf/Laihg4z//88j114nm+h1X/O2bixZ1X/F3oqG17Job9ly6
sPHznxf1TXXr1v32ssXi978Se17/9dJlr/7jN0Rtlbj2xsPB3FZvqMcNIXb1
ZLi6vLRim2dATgz0d7kDCN0uf9TlcyhgkhWQYRhmekzfCwoDDQq4adMmckJC
E2n+++OPPw6zrqKiAqr33HPP3XbbbWTfQde2b99OTkvkuueee5DrF7/4xR13
3KFLwMFrr7121VVXQVgjysNJU+apHxA2oDY2I7b/M9UvOn0FlCgF3FZQWBcI
2d1qyvSzV8ZW1pZnxBXscGXU584XX7/i/exLXrt0yVPLLhPPPC1qa1/4j18R
R0tF+b7tl2bvWHzp0LNbRLjvwPzCY4XLRbi16ef37l6UD4EbeuAR0RI5cPmX
Et9bKRrr3vybvymZkxf/+jdEXbj821eXZOW1/+VnRGNj+e2rn/n4IvHsL8Wu
nZsv+9hb/+XvRd3JsRuv2zdvXq032OOVEyg6XK4uj5wXTwrYq2bHqwW9fak2
oOHzZAVkGIY5F9NUQHJswjq78sorf/vb35aVlb399tvQss2bNz/66KNQvcrK
ShiJ3/ve9+68806SJBzDiMMBDDrYgDD9cPz666/DuEMJJ0+efFUBYb311lvX
rVtXUlJSU1MD1aMhozfccAP0lCYbRoxFRKfRDziVAuqesJFJCkhbHUVt+dM9
bv0ud1tonrhjrThZKYqLT65b17DpUbmV/HsHni1a3vvLx0VXa/d9P+l5cpMY
HBJtXWUL848vWSraI5DI2vX3dP7054gUb71TvPSy+DXXiVN1JV/7TwfnzBv8
ytdEffjE1deXz1sU+fRfiYaG6rvveqroEvHcv4o39jxb9LFdX/yqaKgXO58L
r/xO45LlXd6sHjmd0Ns31XxA6haU/YDRHj0O9qwKaD8chmEYhpi+AlKyl156
CdbZtddee80119x3333QrNLSUtiAEKxVq1Y9+OCDZAMi5c0337xlyxZa5gUK
uHHjRpoc8fTTT69cuRIlwKJ84YUXkGD//v233347LEEUsmbNmqqqKmSHYsKK
pMVkzKW2U5muAhqropEC6ikG3fZ+Q1oBB12+lkDWu/kLxYP3ihPl4lSNaGwS
b7/TevnfvjVvUfl//oZ4901ReUScPC5e2yOqa4/l5lbNz4P8ydGeja2irkW8
8/7+//C1vXMvEf/r/4ijFRWfXXE8Mzv+pS+LisrIt/5HVVZua+ESUXEifP3V
u4sWiUfuF8Xbd16Sv/3SJeI3z4raw6K6THzrv0MBT7t8p40Oyj57KZhhu1vw
HAooWAEZhmHOznmtiqbXQIPFR7P8aI2XxsbG48eP03R4vQI2mW90VsuonjZI
6SPKF0pLZMN4gp5G1NxDmmqBq9AkQdMGjKQsmp2qgNatTVcBrSEl9g62UmJO
u9zdXm9j0F+V5S8PZTQWFdQtW3oib15zZl5zRnZ1IFCVm9lSuBjCB2vueCi3
3evr8Lkrs0Il2VnVBYWnipYem5t3IhCMZITa/YE6f+YpfyAS8DV4XSez5U7x
rV53NBg4Fco+Ecisy8hoDGY0ZmbLHeozciuDubVFBW0fW9ogx8BI+RvxyB0M
OzyeLo81BqbP3mm3n8aCGgooWAEZhmGmx3mtjK1Xw6ZPvbqLhnbr04t/6mnv
jkLMvZb0ujG6v0+vm226QPW40+n0A1q3Ni0F9NgT4T1qRz/aBxAq4yavo1yZ
02Otb9YpF0BzS7ekz0srVw/K3Y58A/LTQ2baSIZfbmnklgtf97s9g/aaZnJ1
ULXbERl0/W5Z5rDbOyD3jPCrXZZ83XIfimDUFej0ZrS7vb0+P+211KOuDvnr
cvu61Ma7vdb8fV/f2RTQXgmOFZBhGMaB3iAeB+a+ftORwo8CplZSjH1H51LA
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
wzAMwzAMwzDMhcH/B7aj7lk=
    "], {{0, 371}, {598, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVWAdUFEuXrp7IDMOQc84555xzzjkMOeeMSkaSEgSUJIIKggomgoiICCJB
BBUwABJEogoqKJJ2eL59/+6e/c+eved09df31Nyprq+q7/2K0zPMyhcGAIgi
ITZWhDjNyEhCgjUF8cE2NCrAL9TH2zA02sfPJ1LBEyI6ZeiJDaCXIYSHB8OI
vUJCoyOt9LU4HBydONAfAA4wABpiBzaCV1S4poWFCfi3tjMJjgOCV6LHsf59
v//VKL19orwAgCyI2Nc7yiuEiDuIWMorPDKaiDeImDsuOpyIj0cJaCKJAyRi
nmPs9wcrHGPPP9jkrz42VtpE7AEACY5AiPQDAHs8Lo5YLz9iHGw+ACiqUO+A
UAAoLhGxmpc/wRsAujliH5GQkDAipscRsYDnf4nj999iev4Tk0Dw+wf/eZe/
DKeurs5hoq1DvKn/P6fk/7aQ4Jj//J/jmccl+mubEe90xIuFg8U9IC0ScAAT
oA10OFhdv/lzWj4FINonPvr4B9ph4QmRAX7+0RyaRLZ8OAxDvcREOKQkJGUB
OOb+T9jvVn9Fhuhe/MvnswKACpEDzNi/fIHnAGjqJ85X7r98fM4AMIoAcPul
V0xk7B8f4rhBAiwgJ64qRsAGuIEAEAVSQA4oAw2gC4yAObABjsANeAF/EAIi
QRw4AVJBFsgDhaAUVIAacBlcAzfBHdAOusBj8BQMgzEwAd6DObAE1sEm2AF7
EAShITKIGmKE2CFeSBiSghQgNUgXMoGsIEfIA/KDQqEY6ASUDuVBxVAFVAs1
Qreh+9BjaBAah95C89Aq9A36DYPDcDAaGCuMDyYOU4BpwoxhNjBXmB8sApYI
y4CdhV2A1cFuwNpgj2HDsAnYHGwdtg0HcFI4HZwTLgpXgGvDzeFOcF94JPwU
PBdeBq+DN8M74QPwV/A5+AZ8F4FCUCM4EKIIZYQBwhbhhYhAnELkIyoQ1xBt
iD7EK8Q8YhNxiCRDsiCFkUpIQ6QD0g8Zh8xCliHrka3IfuQEcgm5g0Kh6FD8
KHmUAcoRFYhKQuWjqlEtqB7UOGoRtY1GoxnRwmhVtDmagI5GZ6HL0TfQj9Av
0UvoXySkJOwkUiR6JE4koSRpJGUkTSTdJC9Jlkn2MBQYXowSxhzjjUnAFGCu
YDoxLzBLmD0sJZYfq4q1wQZiU7EXsM3Yfuw09jspKSkXqSKpJWkAaQrpBdJb
pM9I50l3cVQ4IZw2zgUXgzuLa8D14N7ivpORkfGRaZA5kUWTnSVrJHtCNkv2
C0+NF8Mb4r3xyfhKfBv+Jf4LOYacl1yT3I08kbyM/C75C/INCgwFH4U2BYHi
FEUlxX2KKYptSmpKSUpzyhDKfMomykHKFSo0FR+VLpU3VQbVZaonVIvUcGpu
am1qL+p06ivU/dRLNCgafhpDmkCaPJqbNKM0m7RUtDK0drTxtJW0D2nn6OB0
fHSGdMF0BXR36CbpftOz0mvS+9Dn0DfTv6T/ycDMoMHgw5DL0MIwwfCbkYNR
lzGIsYixnXGGCcEkxGTJFMd0kamfaYOZhlmZ2Ys5l/kO8zsWGIsQixVLEstl
lhGWbVY2Vn3WcNZy1iesG2x0bBpsgWwlbN1sq+zU7GrsAewl7I/Y1zhoOTQ5
gjkucPRxbHKycBpwxnDWco5y7nHxc9lypXG1cM1wY7kVuH25S7h7uTd52HlM
eU7wXOd5x4vhVeD15z3PO8D7k4+fz57vNF873wo/A78hfyL/df5pATIBdYEI
gTqB14IoQQXBIMFqwTEhmJCskL9QpdALYZiwnHCAcLXwuAhSRFEkVKROZEoU
J6opGit6XXRejE7MRCxNrF3siziPuJN4kfiA+KGErESwxBWJ95JUkkaSaZKd
kt+khKS8pCqlXkuTSetJJ0t3SG/JCMv4yFyUeSNLLWsqe1q2V/ZATl4uUq5Z
blWeR95Dvkp+SoFGwUIhX+GZIlJRSzFZsUtxV0lOKVrpjtJXZVHlIOUm5RUV
fhUflSsqi6pcqgTVWtU5NQ41D7VLanPqnOoE9Tr1BQ1uDW+Neo1lTUHNQM0b
ml+0JLQitVq1fmoraZ/U7tGB6+jr5OqM6lLp2upW6M7qcen56V3X29SX1U/S
7zFAGhgbFBlMGbIaehk2Gm4ayRudNOozxhlbG1cYL5gImUSadJrCTI1Mz5lO
m/GahZq1mwNzQ/Nz5jMW/BYRFg8sUZYWlpWWn6wkrU5YDVhTW7tbN1nv2GjZ
FNi8txWwjbHttSO3c7FrtPtpr2NfbD/nIO5w0mHYkckxwLHDCe1k51TvtO2s
61zqvOQi65LlMunK7xrvOujG5Bbs9tCd3J3gftcD6WHv0eSxTzAn1BG2PQ09
qzw3vbS9znute2t4l3iv+qj6FPss+6r6Fvuu+Kn6nfNb9Vf3L/PfCNAOqAjY
CjQIrAn8GWQe1BB0FGwf3BJCEuIRcj+UKjQotC+MLSw+bDxcODwrfC5CKaI0
YjPSOLI+CopyjeqIpiEm2ZEYgZjMmPlYtdjK2F9xdnF34ynjQ+NHEoQSchKW
E/USryYhkrySek9wnkg9MX9S82TtKeiU56neZO7kjOSlFP2Ua6nY1KDU52kS
acVpP9Lt0zszWDNSMhYz9TOvZ+GzIrOmTiufrslGZAdkj+ZI55TnHOZ65w7l
SeSV5e3ne+UPnZE8c+HM0Vnfs6MFcgUXC1GFoYWTRepF14opixOLF8+Znmsr
4SjJLflR6l46WCZTVnMeez7m/NwFkwsd5TzlheX7Ff4VE5ValS1VLFU5VT+r
vatfXtS42FzDWpNX8/tSwKU3tfq1bXV8dWWXUZdjL3+6Yndl4KrC1cZ6pvq8
+oOG0Ia5a1bX+hrlGxubWJoKrsOux1xfveFyY+ymzs2OZtHm2ha6lrxb4FbM
rbXbHrcn7xjf6b2rcLf5Hu+9qlbq1tw2qC2hbbPdv32uw7Fj/L7R/d5O5c7W
B2IPGro4uyof0j4s6MZ2Z3QfPUp8tN0T3rPx2O/xYq977/snDk9e91n2jfYb
9z97qvf0yYDmwKNnqs+6BpUG7w8pDLUPyw23jciOtD6Xfd46Kjfa9kL+RceY
4ljnuMp490v1l49f6bx6+trw9fCE2cT4pO3kmymXqbk33m9W3ga/3XoX+27v
fco0cjp3hmKmbJZltu6D4IeWObm5h/M68yML1gvvF70W1z9GfdxfyvhE9qls
mX25cUVqpWtVb3VszXltaT18fW8j6zPl56ovAl/ufdX4OrLpsLm0Fbl19C3/
O+P3hh8yP3q3LbZnd0J29n7m/mL8dW1XYXfgt/3v5b24ffT+hQPBg85D48Pp
o5Cjo3BCJOGvUgBOvGC+vgB8awCAzBEA6jFi/YT/U5v9bXBi8XFcy9pBujBN
uAKCAYlFkaAlSBwx6dhHOBQZAd9OgaUMphqikaWtogcMQYyjzHIshazr7Boc
BZzj3FgeRV5HviD+EAEXQS0hVqEt4aci5aJBYqriZOIfJFokU6QspTmlP8vc
l82Us5RnkV9SaFaMV9JUxiq/UqlS9VYTUfum3q5xQlNLC6f1Qbtbp0m3Wq9I
/5QBwVDdiMFoy3jEpNm02qzWvMti0QppzWjDZEthB7fbt99zBE4YZ7wLmSvC
ddttwX3Mo4dw17Peq9w71yfB18/Pxl8rQCZQKIgzmDGEPBQe+iNsIXws4kHk
laiz0ckxWbGt8YgEn8SeE+Ak3ymlZMMU59SYtLPppRlJmTKZi1kFpy2yeXNI
c0EeLJ/yjMBZtQKzQvsip2Kncw4ldqU2ZZbnzS4Yl+tXaFWqVSlWS18UrRG6
JFFrXJd+ee6qYf2NhvVGyibe65I3lG/qNJu22N9yv+1/J/xu3L1TrWltme3Z
HXn3CzpLH1R11T+8193/aKpn7vFkb8sT3z6Gvmf9ZU/jBnyfuQ7aD1kOG4/o
PzcYtXkRMXZp/O0r0tfiE9qThlO6bxTe8r7Dv9t9vzL9Zubx7OUP6XN+87YL
ZoumH82XzD8ZLSuu0K/MreauyazNrV/bSPxs8IXkS+NX/a+Lm5e34r+5fTf/
YboduNP76/Tv9gOdo6O/+ZeEI+CriDnkImqTBI6Rw/qTVuHm8ELkcRRPqRip
E2he00nRpzHMMMkyZ7GMsTGxO3AUcXZxTXNv8+zwrvE9578sECmoJkQi9Fq4
RiRQVFb0UOyp+FkJe0l2yWWpZulYGVVZSLZfLlfeXIFaYVKxXMlZmVV5mrgK
XNQY1abUz2s4a/Jp7mlNaN/Wydf10VPRp9T/ZNBlWGoUa+xj4mnqbxZmHmLh
aWlupWwtZMNsi7eD2e3YLztMOj5xanaudMl1TXQLcHfw0CGIezJ4QV5r3hM+
fb6tfvX+ZQEZgWFBjsEaIfyhZMSVMB8+G/EjijPaPaY89nHcm/jFhI3E3ROk
J9lOCSRzpKBSPqS2phWkR2a4ZdpmOZwOyE7Pqc69mdea33bm3tnbBTcLG4uu
Fl86V1lSWlpQlnM+7UJCeViFX2VAVUr1oxrBS9fq+C8XX3l1dbcBf42pkbtJ
iLgO5G+qNeu0mN5yvB18J+vu5XvdreNts+0rHd874Q/ou4QfKndrPJLv4XwM
e7zQO/Ckta+hv/Jp4UDms8TByKHo4ZyRrlG6FyfHZl4yvVJ/bTPhO5kydfXN
i7c/3lNNi86YzIZ/OD/3YP7lwuziwsf1T0gi+6mr4+uUGxKfZb/wfSX/+mvz
09bUt6Hv93/Ubifv2P3k/7nzq2s38bfyHm5f52D1b/7FoHVYNdwNIYhEI7dQ
q+g1kgXMFikWx0umiXciT6W4QTlOdUTDS6tLF0ifyVDDeI+pn/kZy1PWB2y1
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
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 598, "PixelYDimension" -> 371]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{598, 371},
  PlotRange->{{0, 598}, {0, 371}}]], "Output",
 CellChangeTimes->{3.771692790946599*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"db0a6cb9-6c1d-47d9-b301-ca114a8c39a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetChemistry", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7716923832156487`*^9, 3.771692385590172*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"4a7904a0-c38c-4efe-bd35-b914aa0f4207"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i17$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i17$$ = 1}, 
     "\"max\"" :> {$CellContext`i17$$ = 3}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i17$$], 1, ""}, 1, 3, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i17$134691$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i17$$], {1, 3, 1},
                  AnimationRate->1.5,
                  AnimationRunTime->60.070241928100586`,
                  AnimationTimeIndex->0.23777659734089696`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{
                    "C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 1}, {5, 
                    2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {5, 6, 7, 4, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 
                    1}, {5, 2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {6, 7, 6, 3, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 
                    1}, {5, 2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {7, 8, 5, 2, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i17$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i17$$, \
$CellContext`i17$134691$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 3, 1}, 3, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{314., {243.884033203125, 249.615966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.77169249132983*^9, {3.771692582297661*^9, 3.7716926046587877`*^9}, 
   3.771692686842588*^9, {3.771692727067857*^9, 3.771692749049643*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"2e52111e-2f30-4b0c-982e-3abf4f5f7566"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Application of Petri net", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.771686793052129*^9, 
   3.77168680115561*^9}},ExpressionUUID->"11996809-1268-4c70-9c36-\
fd8f73be6e29"],

Cell["\<\
Petri net, as a mathematical modeling language, indeed is not limited to \
visualize chemical processes. In fact, any mathematics model can be somewhat \
expressed with Petri net. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 
   3.771686935711549*^9}},ExpressionUUID->"fe8170dc-c96c-47bd-b6f2-\
f17aa1fcc2ab"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{925, 789},
WindowMargins->{{118, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 263, 4, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[846, 28, 398, 6, 35, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1247, 36, 389, 6, 35, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[1639, 44, 1306, 20, 81, "Text",ExpressionUUID->"23daff6c-19fe-4986-bc44-208556a6dbb4"],
Cell[CellGroupData[{
Cell[2970, 68, 712, 11, 67, "Section",ExpressionUUID->"b49099be-a366-4fde-b014-2eb32872e588"],
Cell[3685, 81, 1481, 22, 104, "Text",ExpressionUUID->"3f00114e-937f-4cf7-b7e3-d1762a4d61f2"],
Cell[5169, 105, 731, 14, 173, "Text",ExpressionUUID->"a2c8877c-7b2d-4a27-a374-7e892c368403"],
Cell[5903, 121, 410, 8, 72, "Code",ExpressionUUID->"ec90ff51-b3b5-4165-b284-b452ee5df5f1"],
Cell[6316, 131, 1001, 28, 129, "Code",ExpressionUUID->"c7ca858a-37ca-4d7a-b736-30554d08b3d2"],
Cell[7320, 161, 1057, 27, 148, "Code",ExpressionUUID->"1ebf8948-319e-41f8-984c-dfc824866d2e"],
Cell[8380, 190, 1185, 19, 35, "Text",ExpressionUUID->"6a7824ea-cf22-4233-89c0-1dceb723e5c0"],
Cell[CellGroupData[{
Cell[9590, 213, 2450, 53, 115, "Input",ExpressionUUID->"8e35565b-2592-45f5-8649-76b182eab020"],
Cell[12043, 268, 277, 4, 34, "Output",ExpressionUUID->"37372e8a-e869-4fd5-9dc1-6f3b3c099bab"]
}, Open  ]],
Cell[12335, 275, 1968, 30, 150, "Text",ExpressionUUID->"996da0f6-1bcf-4737-9dff-2e2a937463c5"],
Cell[14306, 307, 2263, 52, 110, "Code",ExpressionUUID->"36ed3164-4511-4267-af9a-401e89d87dec"],
Cell[CellGroupData[{
Cell[16594, 363, 2125, 49, 115, "Input",ExpressionUUID->"ae23dd54-456c-469c-8019-5896bad3c888"],
Cell[18722, 414, 8653, 164, 299, "Output",ExpressionUUID->"fefb02ed-546f-423a-9cf9-dddc1c55f831"]
}, Open  ]],
Cell[27390, 581, 1328, 21, 81, "Text",ExpressionUUID->"375484a4-5a91-4c3b-9339-42372ea042c5"],
Cell[28721, 604, 1592, 24, 81, "Text",ExpressionUUID->"5d1f44d9-839a-4dca-9672-52d748569a1d"],
Cell[30316, 630, 444, 10, 52, "Code",ExpressionUUID->"4ae68435-51f7-400b-8184-fd9e6c3a8459"],
Cell[30763, 642, 823, 22, 129, "Code",ExpressionUUID->"ed033309-5d85-4813-9895-ba1760d8bfd3"],
Cell[31589, 666, 2939, 71, 224, "Code",ExpressionUUID->"fcb59257-154a-4aa1-986b-be7dfef2c362"],
Cell[CellGroupData[{
Cell[34553, 741, 357, 8, 30, "Input",ExpressionUUID->"48811983-6035-4691-a3f1-d9b6e8951153"],
Cell[34913, 751, 8808, 180, 449, "Output",ExpressionUUID->"24c5fdda-c98d-473b-92da-bcf33931d38f"]
}, Open  ]],
Cell[43736, 934, 1555, 24, 58, "Text",ExpressionUUID->"3159de7b-45ed-4cd2-89ea-2d7484bd465d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45328, 963, 790, 12, 67, "Section",ExpressionUUID->"40eb5353-3697-4650-9c97-38c6a9712c4c"],
Cell[46121, 977, 2206, 32, 150, "Text",ExpressionUUID->"f47315fb-6e5d-47af-988f-c42b042ce630"],
Cell[48330, 1011, 390, 9, 81, "Text",ExpressionUUID->"42027586-2542-4d1f-8a19-76e0f0e2d4a9"],
Cell[48723, 1022, 940, 24, 129, "Code",ExpressionUUID->"40e2830c-f2be-4ab2-8600-ac8700c26637"],
Cell[49666, 1048, 1345, 35, 148, "Code",ExpressionUUID->"3b72b55a-752d-496c-9680-388ba7cb2045"],
Cell[51014, 1085, 1324, 34, 167, "Code",ExpressionUUID->"7094da66-edb8-44b2-bbad-9dcd56752430"],
Cell[52341, 1121, 2141, 55, 243, "Code",ExpressionUUID->"a0ae6461-c5d0-48d7-8852-24e932df858f"],
Cell[CellGroupData[{
Cell[54507, 1180, 603, 15, 30, "Input",ExpressionUUID->"4f9f4b83-2fca-4e66-b49b-4ab6b6f3025c"],
Cell[55113, 1197, 120389, 2174, 525, "Output",ExpressionUUID->"2972fb07-ed16-4820-b4ae-9c7dc0f8fa54"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175551, 3377, 809, 12, 67, "Section",ExpressionUUID->"6546414a-3e9f-420a-b124-7c862b2daa92"],
Cell[176363, 3391, 1985, 29, 104, "Text",ExpressionUUID->"98a3d490-da6c-437f-994c-37456e70b5de"],
Cell[178351, 3422, 939, 26, 129, "Code",ExpressionUUID->"f01c6582-3435-4013-b30c-b8a5f0c87059"],
Cell[179293, 3450, 1859, 44, 205, "Code",ExpressionUUID->"54fbc894-7033-4a57-a320-8755b56f3fb3"],
Cell[181155, 3496, 1184, 29, 167, "Code",ExpressionUUID->"68769efd-464f-4d7f-afed-0305e3d44130"],
Cell[182342, 3527, 1990, 44, 148, "Code",ExpressionUUID->"10e36ae1-b155-4f2b-ae6b-2f130d8935e7"],
Cell[184335, 3573, 1942, 29, 81, "Text",ExpressionUUID->"1b316858-98de-4dbf-99b5-953cfb80717f"],
Cell[CellGroupData[{
Cell[186302, 3606, 437, 9, 52, "Input",ExpressionUUID->"2ecce3f0-d148-458d-94c9-83316be56d46"],
Cell[186742, 3617, 79286, 1307, 505, "Output",ExpressionUUID->"75fa57bb-0bf5-4318-9be2-e3715efaeb3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266065, 4929, 208, 3, 30, "Input",ExpressionUUID->"29371861-dcf1-4425-81a7-7652da1e46d7"],
Cell[266276, 4934, 36885, 697, 383, "Output",ExpressionUUID->"2bf74c02-a3cc-4365-9e86-02fc39dbc7ee"]
}, Open  ]],
Cell[303176, 5634, 1794, 26, 58, "Text",ExpressionUUID->"a703ba13-887d-429a-927a-173dbd20a3a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305007, 5665, 772, 12, 67, "Section",ExpressionUUID->"75fa4bfb-9b34-487b-b050-b1aee34505e5"],
Cell[305782, 5679, 1325, 20, 81, "Text",ExpressionUUID->"db5f61a4-b6c4-4855-9a4d-4bfca574e3da"],
Cell[307110, 5701, 1148, 29, 167, "Code",ExpressionUUID->"4766af39-e26e-4696-8649-cd3372e43ee7"],
Cell[308261, 5732, 423, 10, 52, "Code",ExpressionUUID->"7100e181-ce6f-4604-b725-2a4095357ad5"],
Cell[308687, 5744, 644, 16, 72, "Code",ExpressionUUID->"7cc2b2be-af35-47d4-b9e2-cef379a3b4e8"],
Cell[309334, 5762, 463, 10, 72, "Code",ExpressionUUID->"e3a317be-8b13-4536-bd09-14dfdbbea7f1"],
Cell[309800, 5774, 2159, 53, 281, "Code",ExpressionUUID->"bb076a98-2802-4aa8-a156-c11359351aef"],
Cell[311962, 5829, 381, 8, 72, "Code",ExpressionUUID->"12cb881d-2d37-4ed8-8268-cb3baf825524"],
Cell[312346, 5839, 434, 12, 72, "Code",ExpressionUUID->"05565033-d64c-4d1c-b3f2-4e02ff2c560f"],
Cell[312783, 5853, 1872, 49, 167, "Code",ExpressionUUID->"5874dcdd-3b71-4e69-af45-9b47d4c316c7"],
Cell[314658, 5904, 1338, 31, 167, "Code",ExpressionUUID->"e66ab582-81dc-431d-9ecc-ba05abcbf1bb"],
Cell[315999, 5937, 1426, 37, 186, "Code",ExpressionUUID->"f3aab129-0579-476f-baaa-ecc28462c086"],
Cell[317428, 5976, 1213, 28, 110, "Code",ExpressionUUID->"e6e6ee49-501b-4fc5-842b-e72091247f20"],
Cell[318644, 6006, 1827, 27, 35, "Text",ExpressionUUID->"119293fa-c0bd-42a0-83e5-9e0335957ed3"],
Cell[CellGroupData[{
Cell[320496, 6037, 387, 8, 52, "Input",ExpressionUUID->"37c0e1ee-0362-4af7-a501-dddadba982ba"],
Cell[320886, 6047, 56092, 926, 388, "Output",ExpressionUUID->"db0a6cb9-6c1d-47d9-b301-ca114a8c39a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377015, 6978, 212, 3, 30, "Input",ExpressionUUID->"4a7904a0-c38c-4efe-bd35-b914aa0f4207"],
Cell[377230, 6983, 19486, 400, 525, "Output",ExpressionUUID->"2e52111e-2f30-4b0c-982e-3abf4f5f7566"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396765, 7389, 764, 12, 67, "Section",ExpressionUUID->"11996809-1268-4c70-9c36-fd8f73be6e29"],
Cell[397532, 7403, 1189, 19, 58, "Text",ExpressionUUID->"fe8170dc-c96c-47bd-b6f2-f17aa1fcc2ab"]
}, Open  ]]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    739462,      13740]
NotebookOptionsPosition[    727446,      13561]
NotebookOutlinePosition[    728253,      13588]
CellTagsIndexPosition[    728210,      13585]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Implement Petri Net", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
  3.770055604008165*^9, 3.7700556066618843`*^9}, {3.7716857442286043`*^9, 
  3.771685751038966*^9}, {3.771705176216404*^9, 
  3.771705178214192*^9}},ExpressionUUID->"49ab34ee-bfd5-49f5-beef-\
400d3cc456dd"],

Cell["Pumeng Lyu", "Text",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.771685753634265*^9, 
  3.771685755958733*^9}},ExpressionUUID->"94536f76-3fd2-4bf6-b228-\
fa93ec9acae9"],

Cell["Jofre Espigule-Pons", "Text",
 CellChangeTimes->{{3.549624515773694*^9, 3.5496245246892014`*^9}, {
   3.5498187208956137`*^9, 3.5498187221413403`*^9}, {3.5498190558319674`*^9, 
   3.54981906151682*^9}, {3.770055624686027*^9, 3.770055659820487*^9}, 
   3.771685758408799*^9, {3.771686022793871*^9, 3.771686028933701*^9}, {
   3.771705170169018*^9, 
   3.771705173878416*^9}},ExpressionUUID->"b70c649b-a958-4202-9f22-\
238ea1f9c7d4"],

Cell["\<\
In my project, I am going to write a package to visualize a mathematical \
modeling language for the description of distributed systems called Petri \
net. Petri net is a set of discrete event dynamic system. Let\
\[CloseCurlyQuote]s further explore the usefulness of Petri net and how I try \
to visualize and make analysis on it step by step.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686180552411*^9, 3.7716861997012653`*^9}, {3.7716862639051323`*^9, 
   3.771686300298769*^9}, {3.771686331806986*^9, 
   3.771686433120767*^9}},ExpressionUUID->"23daff6c-19fe-4986-bc44-\
208556a6dbb4"],

Cell[CellGroupData[{

Cell["What consists of a Petri net?", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 
   3.771686398964229*^9}},ExpressionUUID->"b49099be-a366-4fde-b014-\
2eb32872e588"],

Cell["\<\
A Petri net includes places, transitions and arcs. Arcs must go from a place \
to a transition or vice versa, which makes a Petri net a directed bipartite \
graph and the nodes represent transitions (events that may occur to cause \
change in states, marked by square) and places (conditions, marked by \
circles). These conditions make our first group of functions to check if the \
input structure is a Petri net, with the function named petriNetQ.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 
   3.771687519083227*^9},ExpressionUUID->"3f00114e-937f-4cf7-b7e3-\
d1762a4d61f2"],

Cell[TextData[{
 StyleBox["petriNetQ [ ",
  FontWeight->"Bold"],
 StyleBox["Places",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["Transitions",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["Arcs ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]: ",
  FontWeight->"Bold"],
 "returns True if the input satisfy the requirement to build a Petri net, \
else returns False.\nHelper function: \n",
 StyleBox["applyBooleanToList[",
  FontWeight->"Bold"],
 StyleBox[" Logic operator",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["List of conditions ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]:",
  FontWeight->"Bold"],
 " it is a helper function to apply boo-lean operator on a list of \
conditions. We are going to use this \t\t\t\tfunction to check if for the \
input data to build Petri net, the places list has no common vertex with the \
transition list, and also check if the graph is \t\t\tbipartite.\nInput: \t<|\
\"States\" -> ",
 StyleBox["list1",
  FontSlant->"Italic"],
 ", \"Transitions\" -> ",
 StyleBox["list2",
  FontSlant->"Italic"],
 ",  \"Arcs\" -> ",
 StyleBox["list3",
  FontSlant->"Italic"],
 "|>\nReturn: \tTrue or False"
}], "Text",
 CellChangeTimes->{{3.771687298414647*^9, 3.771687514277643*^9}, {
  3.7716900845306*^9, 3.771690094950184*^9}, {3.771709667091535*^9, 
  3.771709785732905*^9}, {3.771715730550413*^9, 3.771715731134293*^9}, {
  3.7717159032473507`*^9, 3.771716017010295*^9}, {3.77171608967312*^9, 
  3.771716126452729*^9}, {3.7717171952122803`*^9, 
  3.7717172016907463`*^9}},ExpressionUUID->"a2c8877c-7b2d-4a27-a374-\
7e892c368403"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyBooleanToList", "[", 
   RowBox[{"logic_", ",", " ", "booleanList_"}], "]"}], ":=", " ", "\n", "\t", 
  RowBox[{"Fold", "[", 
   RowBox[{"logic", ",", " ", 
    RowBox[{"First", " ", "@", " ", "booleanList"}], ",", " ", 
    RowBox[{"Rest", " ", "@", " ", "booleanList"}]}], "]"}]}]], "Code",
 CellLabel->"In[54]:=",ExpressionUUID->"ec90ff51-b3b5-4165-b284-b452ee5df5f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetQ", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "->", " ", "s__"}], ",", 
     RowBox[{"\"\<Transitions\>\"", "->", " ", "t__"}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", "a__"}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "g", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", 
       RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"applyBooleanToList", "[", 
      RowBox[{"And", ",", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Intersection", "[", 
           RowBox[{"s", ",", "t"}], "]"}], " ", "==", " ", 
          RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t", 
         RowBox[{"BipartiteGraphQ", "[", "g", "]"}]}], "}"}]}], "]"}]}]}], 
   "\n", "]"}]}]], "Code",
 CellChangeTimes->{3.771689049554954*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"1ebf8948-319e-41f8-984c-dfc824866d2e"],

Cell["\<\
Here is an example of petriNetQ. The input in this case satisfy the condition \
for making a petriNet.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 
   3.771688985991187*^9}},ExpressionUUID->"6a7824ea-cf22-4233-89c0-\
1dceb723e5c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "graph", "]"}], ";"}], "\n", 
 RowBox[{"graph", " ", "=", 
  RowBox[{"petriNetQ", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
        "h"}], "}"}]}], ",", 
     RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
       "}"}]}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", 
      RowBox[{"List", " ", "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"c", "\[Rule]", "t1"}], ",", 
         RowBox[{"t1", "\[Rule]", "d"}], ",", 
         RowBox[{"t1", "\[Rule]", "e"}], ",", 
         RowBox[{"t2", "\[Rule]", "a"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "c"}], ",", 
         RowBox[{"t2", "\[Rule]", "f"}], ",", 
         RowBox[{"d", "\[Rule]", "t3"}], ",", 
         RowBox[{"e", "\[Rule]", "t3"}], ",", 
         RowBox[{"t3", "\[Rule]", "g"}], ",", 
         RowBox[{"c", "\[Rule]", "t4"}], ",", 
         RowBox[{"f", "\[Rule]", "t4"}], ",", 
         RowBox[{"t4", "\[Rule]", "e"}], ",", 
         RowBox[{"t4", "\[Rule]", "h"}], ",", 
         RowBox[{"h", "\[Rule]", "t5"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"g", "\[Rule]", "t6"}]}], "}"}]}]}]}], "|>"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.771675908473971*^9, 3.7716759121049023`*^9}, {
   3.7716875735400248`*^9, 3.771687864687045*^9}, {3.7716879314655857`*^9, 
   3.7716879923091593`*^9}, {3.771688035093364*^9, 3.771688124072446*^9}, {
   3.771688356104116*^9, 3.77168835784394*^9}, {3.771688399413743*^9, 
   3.771688399632266*^9}, 3.771688447133608*^9, {3.771688494008086*^9, 
   3.7716887595514593`*^9}, 3.771688803053347*^9, {3.771688926947785*^9, 
   3.771688928700877*^9}, {3.771689118294434*^9, 3.771689165512939*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8e35565b-2592-45f5-8649-76b182eab020"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.771688704953764*^9, 3.771688760282246*^9, 3.771688803576728*^9, {
   3.7716890128319473`*^9, 3.7716890536374483`*^9}, 3.7716891719930983`*^9, 
   3.771704921281623*^9, 3.771709628504578*^9, 3.7717118070383987`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"68fe8485-bc05-45d9-96e9-2f7215adc573"]
}, Open  ]],

Cell["\<\
But what is the Petri net looks like? Here we need a function to visualize \
Petri net with the help of Graph function. First we need to make a \
petriNetData function close to the OceanData function already in the wolfram \
language repository.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689346058982*^9}, {
   3.7716893842543783`*^9, 3.771689420221116*^9}, {3.771689467272953*^9, 
   3.77168949538177*^9}, {3.771697576768919*^9, 
   3.771697580481494*^9}},ExpressionUUID->"996da0f6-1bcf-4737-9dff-\
2e2a937463c5"],

Cell[TextData[{
 "petriNetData returns the graph visualization of the petri net in a graph \
form, if the input satisfy the Petri net structure.\n",
 StyleBox["petriNetData [",
  FontWeight->"Bold"],
 StyleBox["Places",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["Transitions",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["Arcs",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]:",
  FontWeight->"Bold"],
 "\nInput: \t<|\"States\" -> list1, \"Transitions\" -> list2,  \"Arcs\" -> \
list3|>\nReturn: \tIf the input is a valid Petri Net, it returns a data list \
includes graph, with its places, transitions and arcs; if the input is not a \
valid Petri net, it will tag \t\t\tFailed."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689346058982*^9}, {
   3.7716893842543783`*^9, 3.771689420221116*^9}, {3.771689467272953*^9, 
   3.77168949538177*^9}, {3.771697576768919*^9, 3.7716976159676847`*^9}, {
   3.7717097960142317`*^9, 3.771709865365016*^9}, {3.771715736065134*^9, 
   3.771715736667734*^9}, {3.771716146652227*^9, 
   3.771716158049296*^9}},ExpressionUUID->"73df6d32-26cf-4b87-ab29-\
a3a01bc3ff5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetData", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "->", "s__"}], ",", 
     RowBox[{"\"\<Transitions\>\"", "->", "t__"}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", "a__"}]}], "|>"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"petriNetQ", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<States\>\"", "->", "s"}], ",", 
       RowBox[{"\"\<Transitions\>\"", "->", "t"}], ",", " ", 
       RowBox[{"\"\<Arcs\>\"", "->", " ", "a"}]}], "|>"}], "]"}], ",", " ", 
    "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", " ", 
        RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}], ",", " ", 
        RowBox[{"VertexShapeFunction", " ", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"s", "->", "\"\<Circle\>\""}], "]"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{"t", "->", " ", "\"\<Square\>\""}], "]"}]}], "]"}]}], ",",
         "\n", "\t", 
        RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", " ", 
        RowBox[{"VertexStyle", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"s", " ", "\[Rule]", " ", "LightBlue"}], "]"}], ",", 
           RowBox[{"Thread", "[", 
            RowBox[{"t", " ", "->", " ", "LightGray"}], "]"}]}], "]"}]}], ",",
         " ", 
        RowBox[{"VertexSize", "->", "Large"}]}], "]"}], ",", " ", "\n", "\t", 
      "s", ",", "t", ",", 
      RowBox[{"DirectedEdge", " ", "@@@", " ", "a"}]}], "}"}], ",", " ", 
    RowBox[{"$Failed", ";", " ", 
     RowBox[{"Print", "[", "\"\<Fail!\>\"", "]"}]}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.771674919822431*^9, 3.7716749201493187`*^9}, {
   3.771674968564487*^9, 3.771675037914268*^9}, {3.771675080110948*^9, 
   3.771675087263629*^9}, {3.771675384881175*^9, 3.771675388446395*^9}, 
   3.771688828499237*^9, {3.771688858520293*^9, 3.771688878071103*^9}, {
   3.771689451007882*^9, 3.7716894515062838`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"36ed3164-4511-4267-af9a-401e89d87dec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "graph", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"graph", " ", "=", 
  RowBox[{"petriNetData", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<States\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
        "h"}], "}"}]}], ",", 
     RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
       "}"}]}], ",", " ", 
     RowBox[{"\"\<Arcs\>\"", "->", " ", 
      RowBox[{"List", " ", "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"a", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"b", "\[Rule]", "t1"}], ",", 
         RowBox[{"c", "\[Rule]", "t1"}], ",", 
         RowBox[{"t1", "\[Rule]", "d"}], ",", 
         RowBox[{"t1", "\[Rule]", "e"}], ",", 
         RowBox[{"t2", "\[Rule]", "a"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "b"}], ",", 
         RowBox[{"t2", "\[Rule]", "c"}], ",", 
         RowBox[{"t2", "\[Rule]", "f"}], ",", 
         RowBox[{"d", "\[Rule]", "t3"}], ",", 
         RowBox[{"e", "\[Rule]", "t3"}], ",", 
         RowBox[{"t3", "\[Rule]", "g"}], ",", 
         RowBox[{"c", "\[Rule]", "t4"}], ",", 
         RowBox[{"f", "\[Rule]", "t4"}], ",", 
         RowBox[{"t4", "\[Rule]", "e"}], ",", 
         RowBox[{"t4", "\[Rule]", "h"}], ",", 
         RowBox[{"h", "\[Rule]", "t5"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"t5", "\[Rule]", "g"}], ",", 
         RowBox[{"g", "\[Rule]", "t6"}]}], "}"}]}]}]}], "|>"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.771689358347481*^9, 3.771689366669503*^9}, {
  3.77168945491753*^9, 3.771689455371284*^9}, {3.771689561760415*^9, 
  3.7716895715438433`*^9}, {3.771710010701158*^9, 3.771710015595016*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ae23dd54-456c-469c-8019-5896bad3c888"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f, $CellContext`g, $CellContext`h, \
$CellContext`t1, $CellContext`t2, $CellContext`t3, $CellContext`t4, \
$CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 9}, {2, 9}, {3, 9}, {
         9, 4}, {9, 5}, {10, 1}, {10, 2}, {10, 2}, {10, 2}, {10, 3}, {10, 
         6}, {4, 11}, {5, 11}, {11, 7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {
         8, 13}, {13, 7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {
        VertexLabels -> {"Name"}, 
         VertexShapeFunction -> {$CellContext`t6 -> "Square", $CellContext`t5 -> 
           "Square", $CellContext`t4 -> "Square", $CellContext`d -> 
           "Circle", $CellContext`g -> "Circle", $CellContext`h -> 
           "Circle", $CellContext`b -> "Circle", $CellContext`f -> 
           "Circle", $CellContext`e -> "Circle", $CellContext`t2 -> 
           "Square", $CellContext`c -> "Circle", $CellContext`t1 -> 
           "Square", $CellContext`t3 -> "Square", $CellContext`a -> "Circle"},
          VertexSize -> {Large}, 
         VertexStyle -> {$CellContext`h -> 
           RGBColor[0.87, 0.94, 1], $CellContext`g -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
           GrayLevel[0.85], $CellContext`t6 -> 
           GrayLevel[0.85], $CellContext`e -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
           GrayLevel[0.85], $CellContext`a -> 
           RGBColor[0.87, 0.94, 1], $CellContext`b -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t5 -> 
           GrayLevel[0.85], $CellContext`d -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
           GrayLevel[0.85], $CellContext`f -> 
           RGBColor[0.87, 0.94, 1], $CellContext`t2 -> 
           GrayLevel[0.85], $CellContext`c -> RGBColor[0.87, 0.94, 1]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
           4.664440747183114}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
           4.335559252816889}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
           4.500000000000026}, {1., 4.}}], 0.2], 
          ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
           4.499999999999981}, {1., 4.}}], 0.2], 
          ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
          ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
          ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
          ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
          ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
          ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
          ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
          ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
          ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
          ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
           5.335559252816896}, {1., 5.}}], 0.2], 
          ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
           5.664440747183141}, {1., 5.}}], 0.2], 
          ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
          ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
          ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
          ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
          ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
           1.3355592528169071`}, {2., 1.}}], 0.2], 
          ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
          ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
           1.6644407471831297`}, {2., 1.}}], 0.2]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
           InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
           InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
           InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
           InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
           InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
           InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
           InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
           InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{0.8235294, 3.8235294}, {1.1764706, 4.1764706}]}, 
           InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, 5.8235294}, {2.1764706, 6.1764706}]}, 
           InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, 1.8235294}, {2.1764706, 2.1764706}]}, 
           InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{2.8235294, 3.8235294}, {3.1764706, 4.1764706}]}, 
           InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{2.8235294, 1.8235294}, {3.1764706, 2.1764706}]}, 
           InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {GrayLevel[0.85], 
            RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
           InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
     "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4", ",", "t5", ",", "t6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"a", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"b", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"b", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"c", "\[DirectedEdge]", "t1"}], ",", 
     RowBox[{"t1", "\[DirectedEdge]", "d"}], ",", 
     RowBox[{"t1", "\[DirectedEdge]", "e"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "a"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "b"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "c"}], ",", 
     RowBox[{"t2", "\[DirectedEdge]", "f"}], ",", 
     RowBox[{"d", "\[DirectedEdge]", "t3"}], ",", 
     RowBox[{"e", "\[DirectedEdge]", "t3"}], ",", 
     RowBox[{"t3", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"c", "\[DirectedEdge]", "t4"}], ",", 
     RowBox[{"f", "\[DirectedEdge]", "t4"}], ",", 
     RowBox[{"t4", "\[DirectedEdge]", "e"}], ",", 
     RowBox[{"t4", "\[DirectedEdge]", "h"}], ",", 
     RowBox[{"h", "\[DirectedEdge]", "t5"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"t5", "\[DirectedEdge]", "g"}], ",", 
     RowBox[{"g", "\[DirectedEdge]", "t6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771689367305394*^9, 3.771689461076956*^9, 
  3.771689572257666*^9, 3.771704925601585*^9, 3.771707961991384*^9, 
  3.771709635477755*^9, 3.7717118144010983`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"af3e9fe2-3e12-4d5a-b230-eaa18a37bc6f"]
}, Open  ]],

Cell["\<\
A Petri net includes places, transitions and arcs. Arcs must go from a place \
to a transition or vice versa, which makes a Petri net a directed bipartite \
graph and the nodes represent transitions (events that may occur to cause \
change in states, marked by square) and places (conditions, marked by \
circles). \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.7716905542748632`*^9, 
   3.7716905739428463`*^9}},ExpressionUUID->"375484a4-5a91-4c3b-9339-\
42372ea042c5"],

Cell["\<\
Also we need another thing in Petri net: tokens. The tokens describe the \
current state in each places, and the number of the tokens determine the \
firing option to the next state, as we will explain in detail later. Now we \
can add text-dot to show the tokens and visualize the Petri net as its \
initial state.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771690497144916*^9, 
   3.771690503762805*^9}},ExpressionUUID->"5d1f44d9-839a-4dca-9672-\
52d748569a1d"],

Cell[TextData[{
 StyleBox["petriNetInit [",
  FontWeight->"Bold"],
 StyleBox["Petri net net",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["List of initial conditions",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]: ",
  FontWeight->"Bold"],
 "\nInput: \tPetri net structure net, a List defining the initial conditions \
of the graph.\nReturn: \tA graph with places(circles), transitions(squares), \
arcs, tokens on places.\n\nHelper function:\ntextDot[vertex, n, \
coordinateDictionary]: build string of n dots on specific location on the \
graph.\nbuildDotsList[coordinateDictionary, vertextWeightDictionary, List of \
vertices]: add dots on each places\[CloseCurlyQuote] vertex depending on the \
vertex weight."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.7716905542748632`*^9, 3.7716905739428463`*^9}, {3.771711910509897*^9, 
   3.771711953127808*^9}, {3.771714553624522*^9, 3.771714783633814*^9}, {
   3.771715745524171*^9, 3.771715773196865*^9}, {3.771716035657069*^9, 
   3.771716057784684*^9}},ExpressionUUID->"a801ad1f-6ff8-4722-a68a-\
1c9f945f2764"],

Cell[BoxData[
 RowBox[{
  RowBox[{"textDot", "[", 
   RowBox[{"vertex_", ",", " ", "n_", ",", " ", "coordinatesDict_"}], "]"}], ":=",
   " ", 
  RowBox[{"Text", "[", 
   RowBox[{
    RowBox[{"StringRepeat", "[", 
     RowBox[{"\"\<\[FilledSmallCircle]\>\"", ",", " ", "n"}], "]"}], ",", " ", 
    RowBox[{"coordinatesDict", "[", "vertex", "]"}]}], "]"}]}]], "Code",
 CellLabel->"In[51]:=",ExpressionUUID->"4ae68435-51f7-400b-8184-fd9e6c3a8459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildDotsList", "[", 
   RowBox[{
   "coordinateDict_", ",", " ", "vertexWeightDict_", ",", " ", "vertices_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Scan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"res", ",", 
          RowBox[{"textDot", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"vertexWeightDict", "[", "#", "]"}], ",", " ", 
            "coordinateDict"}], "]"}]}], "]"}], "&"}], ",", " ", "vertices"}],
       "]"}], ";", "\n", "\t", "res"}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[52]:=",ExpressionUUID->"ed033309-5d85-4813-9895-ba1760d8bfd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"petriNetInit", "[", 
   RowBox[{"pnet_", ",", "init_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g", ",", " ", "coordinatesDict", ",", " ", "vertexWeightDict", ",", " ",
       "graphData", ",", " ", "vertexWeight", ",", " ", "vertexWeightsDict", 
      ",", " ", "epilog"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"First", " ", "@", " ", "pnet"}], ",", " ", 
        RowBox[{"VertexWeight", " ", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"pnet", ",", "2"}], "]"}], " ", "->", " ", "init"}], 
            "]"}], ",", " ", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"Part", "[", 
              RowBox[{"pnet", ",", "3"}], "]"}], " ", "->", " ", "0"}], 
            "]"}]}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"graphData", " ", "=", " ", 
      RowBox[{"ToExpression", " ", "@", " ", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ToString", "[", 
           RowBox[{"FullForm", "[", "g", "]"}], "]"}], ")"}], ",", " ", 
         RowBox[{"\"\<Graph\>\"", " ", "->", " ", "\"\<List\>\""}]}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"vertexWeight", " ", "=", " ", 
      RowBox[{"Last", " ", "@", " ", 
       RowBox[{"(", 
        RowBox[{"Last", " ", "@", " ", 
         RowBox[{"graphData", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}]}], ";", "\n", "\t", 
     RowBox[{"coordinatesDict", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"graphData", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "->", " ", 
          "VertexCoordinates"}], " ", "/.", " ", 
         RowBox[{"AbsoluteOptions", "[", 
          RowBox[{"g", ",", " ", "VertexCoordinates"}], "]"}]}], "]"}]}]}], 
     ";", "\n", "\t", 
     RowBox[{"vertexWeightsDict", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"graphData", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "->", " ", "vertexWeight"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"epilog", " ", "=", " ", 
      RowBox[{"buildDotsList", "[", 
       RowBox[{"coordinatesDict", ",", " ", "vertexWeightsDict", ",", " ", 
        RowBox[{"graphData", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Graph", "[", 
      RowBox[{"g", ",", " ", 
       RowBox[{"Epilog", " ", "->", " ", "epilog"}]}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->"In[53]:=",ExpressionUUID->"fcb59257-154a-4aa1-986b-be7dfef2c362"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"petriNetInit", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "0", ",", "0", ",", "5", ",", "3", ",", "0", ",", 
     "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771689585913856*^9, 3.771689624518352*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"48811983-6035-4691-a3f1-d9b6e8951153"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d, \
$CellContext`e, $CellContext`f, $CellContext`g, $CellContext`h, \
$CellContext`t1, $CellContext`t2, $CellContext`t3, $CellContext`t4, \
$CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 9}, {2, 9}, {3, 9}, {
       9, 4}, {9, 5}, {10, 1}, {10, 2}, {10, 2}, {10, 2}, {10, 3}, {10, 6}, {
       4, 11}, {5, 11}, {11, 7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 
       13}, {13, 7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
         Text["\[FilledSmallCircle]", {0., 5.}], 
         Text["\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
         Text["", {2., 5.}], 
         Text["", {1., 3.}], 
         Text[
         "\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
         Text[
         "\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 
          5.}], 
         Text["", {2., 1.}], 
         Text["\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
         Text["", {1., 4.}], 
         Text["", {2., 6.}], 
         Text["", {2., 2.}], 
         Text["", {3., 4.}], 
         Text["", {3., 2.}], 
         Text["", {2., 0.}]}, GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {"Name"}, 
       VertexShapeFunction -> {$CellContext`t3 -> "Square", $CellContext`c -> 
         "Circle", $CellContext`b -> "Circle", $CellContext`t1 -> 
         "Square", $CellContext`h -> "Circle", $CellContext`t6 -> 
         "Square", $CellContext`t4 -> "Square", $CellContext`e -> 
         "Circle", $CellContext`d -> "Circle", $CellContext`t2 -> 
         "Square", $CellContext`g -> "Circle", $CellContext`t5 -> 
         "Square", $CellContext`a -> "Circle", $CellContext`f -> "Circle"}, 
       VertexSize -> {Large}, 
       VertexStyle -> {$CellContext`t6 -> GrayLevel[0.85], $CellContext`h -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
         GrayLevel[0.85], $CellContext`t5 -> GrayLevel[0.85], $CellContext`f -> 
         RGBColor[0.87, 0.94, 1], $CellContext`b -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
         GrayLevel[0.85], $CellContext`a -> 
         RGBColor[0.87, 0.94, 1], $CellContext`e -> 
         RGBColor[0.87, 0.94, 1], $CellContext`d -> 
         RGBColor[0.87, 0.94, 1], $CellContext`c -> 
         RGBColor[0.87, 0.94, 1], $CellContext`g -> 
         RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
         GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
       VertexWeight -> {1, 2, 0, 0, 5, 3, 0, 2, 0, 0, 0, 0, 0, 0}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
         4.664440747183114}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
         4.335559252816889}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
         4.500000000000026}, {1., 4.}}], 0.2], 
        ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
         4.499999999999981}, {1., 4.}}], 0.2], 
        ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
        ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
        ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
        ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
        ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
        ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
        ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
        ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
        ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
        ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
         5.335559252816896}, {1., 5.}}], 0.2], 
        ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
         5.664440747183141}, {1., 5.}}], 0.2], 
        ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
        ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
        ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
        ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
         1.3355592528169071`}, {2., 1.}}], 0.2], 
        ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
        ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
         1.6644407471831297`}, {2., 1.}}], 0.2]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
         InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
         InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
         InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
         InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
         InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
         InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
         InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
         InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{0.8235294, 3.8235294}, {1.1764706, 4.1764706}]}, 
         InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, 5.8235294}, {2.1764706, 6.1764706}]}, 
         InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, 1.8235294}, {2.1764706, 2.1764706}]}, 
         InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{2.8235294, 3.8235294}, {3.1764706, 4.1764706}]}, 
         InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{2.8235294, 1.8235294}, {3.1764706, 2.1764706}]}, 
         InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {GrayLevel[0.85], 
          RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
         InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Epilog->{
    InsetBox[
     FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 
     5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1., 3.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
      TraditionalForm], {3., 5.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 1.}], 
    InsetBox[
     FormBox[
     "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 
     3.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {1., 4.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 6.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 2.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3., 4.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {3., 2.}], 
    InsetBox[
     FormBox["\"\"", TraditionalForm], {2., 0.}]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.771709648313813*^9, 3.7717118869145203`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f106e9ee-8e48-40ef-a9c5-fade122dc0db"]
}, Open  ]],

Cell["\<\
Now we can clearly see what a Petri net is. These blue circles: a, b, c, d, \
e, f, g, some with dots(tokens) are places; these gray squares: t1, t2, t3, \
t4, t5, t6 are transitions; and the edges connected between places and \
transitions are arcs. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 
   3.77168985424896*^9},ExpressionUUID->"3159de7b-45ed-4cd2-89ea-\
2d7484bd465d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Codes for Petri net visualization", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.7716870365262814`*^9, 3.771687056829726*^9}, 
   3.771687088404793*^9},ExpressionUUID->"40eb5353-3697-4650-9c97-\
38c6a9712c4c"],

Cell["\<\
The next step is to make our Petri net \[OpenCurlyDoubleQuote]running\
\[CloseCurlyDoubleQuote]. To do this we need the rules for \
\[OpenCurlyDoubleQuote]firing\[CloseCurlyDoubleQuote]. Firing means the \
tokens from source places with a transition move to source states based on \
the number of edges between nodes. For example, as the Petri net showed \
above, place a now has 1 token, and the number of edges between a and t1 is \
2, which means place a needs to consume 2 tokens to set up transition t1. The \
system will randomly select one transition that meets the requirement to \
fire. For example, if the condition to start transition t1, as t1 has 1 edge \
to d, and one edge to g, so it will pass 1 token to place d and 1 token to \
place g. Now we write codes to achieve these firing rules.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 
   3.771690651020948*^9}},ExpressionUUID->"f47315fb-6e5d-47af-988f-\
c42b042ce630"],

Cell[TextData[{
 StyleBox["petriNetRun[",
  FontWeight->"Bold"],
 StyleBox["A Petri net data structure",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[",",
  FontWeight->"Bold"],
 StyleBox[" initial number of tokens in each places",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["steps need to visualize",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]\n",
  FontWeight->"Bold"],
 "Input: \tA Petri net and number of tokens in each places, and the steps \
that the user wants to run.\nReturn: \tDynamic visualization of how tokens \
move from state to state in the first n steps."
}], "Text",
 CellChangeTimes->{{3.7716900690173683`*^9, 3.7716900711435966`*^9}, {
  3.771710178560175*^9, 3.7717101796575623`*^9}, {3.7717102369342422`*^9, 
  3.771710237710691*^9}, {3.7717152838398314`*^9, 3.771715297012601*^9}, {
  3.7717157985605793`*^9, 3.771715802460876*^9}, {3.771716212752777*^9, 
  3.771716267908478*^9}},ExpressionUUID->"42027586-2542-4d1f-8a19-\
76e0f0e2d4a9"],

Cell[TextData[{
 "In order to make our Petri net running, we need some helper functions:\n",
 StyleBox["checkFiring[ ",
  FontWeight->"Bold"],
 StyleBox["A Petri net data structure, transitions, current number of tokens \
in each places ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]",
  FontWeight->"Bold"],
 ":  \n\tcheck if this specific transition meets the requirement to fire.\n",
 StyleBox["makeFiring[ ",
  FontWeight->"Bold"],
 StyleBox["A Petri net data structure, transitions, current number of tokens \
in each places ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]",
  FontWeight->"Bold"],
 ":  \n\tRandomly choose one of the available transitions to fire, reduce the \
tokens from the source states.\n",
 StyleBox["updateFiring[ ",
  FontWeight->"Bold"],
 StyleBox["A Petri net data structure, transitions, current number of tokens \
in each places ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]",
  FontWeight->"Bold"],
 ":\n\t update the tokens of sink states of the transitions and finish \
current step of firing."
}], "Text",
 CellChangeTimes->{{3.7716900690173683`*^9, 3.7716900711435966`*^9}, {
  3.771710178560175*^9, 3.77171022576727*^9}, {3.77171527050627*^9, 
  3.77171546259799*^9}, {3.7717163057797737`*^9, 3.771716404447329*^9}, {
  3.7717171782964983`*^9, 
  3.771717187245563*^9}},ExpressionUUID->"82d9d3c0-8353-4613-9528-\
73588c12f09a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkFiring", "[", 
   RowBox[{"pnet_", ",", " ", "transition_", ",", " ", "current_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "tokenList", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokenList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"#", " ", "\[DirectedEdge]", " ", "transition"}]}], 
          "]"}]}], " ", "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", " ", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"AllTrue", "[", 
      RowBox[{
       RowBox[{"current", " ", "-", " ", "tokenList"}], ",", " ", 
       "NonNegative"}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[38]:=",ExpressionUUID->"40e2830c-f2be-4ab2-8600-ac8700c26637"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeFiring", "[", 
   RowBox[{"pnet_", ",", " ", "transition_", ",", " ", "current_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tokenDeleteList", ",", "tokenAddList"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokenDeleteList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"#", "\[DirectedEdge]", "transition"}]}], "]"}]}], " ", 
        "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"tokenAddList", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"EdgeList", "[", 
          RowBox[{
           RowBox[{"First", "@", "pnet"}], ",", " ", 
           RowBox[{"transition", "\[DirectedEdge]", "#"}]}], "]"}]}], " ", 
        "&"}], "/@", " ", 
       RowBox[{"Part", "[", 
        RowBox[{"pnet", ",", "2"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{
     "current", " ", "-", " ", "tokenDeleteList", " ", "+", " ", 
      "tokenAddList"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[39]:=",ExpressionUUID->"3b72b55a-752d-496c-9680-388ba7cb2045"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"updateFiring", "[", "pnet_", "]"}], "[", "current_", "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "index", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"index", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"checkFiring", "[", 
             RowBox[{"pnet", ",", " ", "#", ",", " ", "current"}], "]"}], " ",
             "&"}], "/@", " ", 
           RowBox[{"pnet", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", "True"}], "]"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "index", "]"}], ",", " ", "\n", "\t", 
       RowBox[{"makeFiring", "[", 
        RowBox[{"pnet", ",", " ", 
         RowBox[{"pnet", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "index"}], "]"}], "]"}], ",", " ", "current"}], 
        "]"}], ",", " ", "\n", "\t", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Dead!\>\"", "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[40]:=",ExpressionUUID->"7094da66-edb8-44b2-bbad-9dcd56752430"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "petriNetRun", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"petriNetRun", "[", 
   RowBox[{"pnet_", ",", " ", "init_", ",", " ", "step_Integer"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"current", " ", "=", " ", "init"}], ",", " ", "g", ",", " ", 
      "index"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"current", " ", "=", " ", 
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{"updateFiring", "[", "pnet", "]"}], ",", " ", "current", ",", 
        " ", 
        RowBox[{"step", "-", "1"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"index", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"checkFiring", "[", 
             RowBox[{"pnet", ",", " ", "#", ",", " ", "current"}], "]"}], " ",
             "&"}], "/@", " ", 
           RowBox[{"pnet", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", "True"}], "]"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "index", "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{"makeFiring", "[", 
        RowBox[{"pnet", ",", " ", 
         RowBox[{"pnet", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "index"}], "]"}], "]"}], ",", " ", "current"}], 
        "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Dead!\>\"", "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"petriNetInit", "[", 
       RowBox[{"pnet", ",", " ", "current"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", " ", 
       RowBox[{"{", 
        RowBox[{"pnet", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "index"}], "]"}], "]"}], "}"}]}], "]"}]}]}], "\n",
    "]"}]}]}], "Code",
 CellLabel->"In[41]:=",ExpressionUUID->"a0ae6461-c5d0-48d7-8852-24e932df858f"],

Cell["\<\
We thus get the animation of the graph we displayed above in fifteen steps.\
\>", "Text",
 CellChangeTimes->{{3.7716900690173683`*^9, 3.7716900711435966`*^9}, {
  3.771710178560175*^9, 3.7717101796575623`*^9}, {3.7717102369342422`*^9, 
  3.771710237710691*^9}, {3.7717152838398314`*^9, 3.771715297012601*^9}, {
  3.771715481335043*^9, 
  3.7717155035171022`*^9}},ExpressionUUID->"da38cea0-812c-4ae0-ad7c-\
331cb50a350a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"petriNetRun", "[", 
      RowBox[{"graph", ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "0", ",", "0", ",", "5", ",", "3", ",", "0", ",", 
         "2"}], "}"}], ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "15"}], "}"}]}], "]"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77169067175078*^9, 3.771690785017421*^9}, {
  3.771704874014626*^9, 3.7717048743114357`*^9}, {3.771704953085881*^9, 
  3.7717049533146152`*^9}, {3.771707940361452*^9, 3.771707951676859*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4f9f4b83-2fca-4e66-b49b-4ab6b6f3025c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i11$$ = 11, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i11$$ = 1}, 
     "\"max\"" :> {$CellContext`i11$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i11$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i11$3395$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i11$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->4.236797332763672,
                  AnimationRunning->False,
                  AnimationTimeIndex->3.5225116184778926`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t5}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 2, 0, 0, 5, 3, 0, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 5, 1, 0, 5, 4, 0, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 2, 0, 0, 5, 3, 6, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 4->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 6, 1, 1, 6, 5, 0, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 5->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 8, 1, 0, 6, 4, 3, 2, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 6->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 8, 2, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 7->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text["", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 12, 2, 1, 7, 6, 0, 3, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 8->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 1.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t5}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 9, 0, 1, 8, 4, 3, 3, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 9->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t6}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 6, 0, 0, 6, 4, 10, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 10->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 8, 1, 0, 6, 4, 6, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 11->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 6, 0, 0, 6, 4, 8, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 12->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {2., 5.}], 
                    Text["", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t6}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 12, 2, 0, 6, 6, 5, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 13->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text["", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 5.}], 
                    Text["", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t3}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {0, 7, 0, 1, 7, 5, 4, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 14->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 9, 1, 1, 7, 5, 4, 0, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 15->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`a, $CellContext`b, $CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f, $CellContext`g, \
$CellContext`h, $CellContext`t1, $CellContext`t2, $CellContext`t3, \
$CellContext`t4, $CellContext`t5, $CellContext`t6}, {{{1, 9}, {1, 9}, {2, 
                    9}, {2, 9}, {3, 9}, {9, 4}, {9, 5}, {10, 1}, {10, 2}, {10,
                     2}, {10, 2}, {10, 3}, {10, 6}, {4, 11}, {5, 11}, {11, 
                    7}, {3, 12}, {6, 12}, {12, 5}, {12, 8}, {8, 13}, {13, 
                    7}, {13, 7}, {13, 7}, {7, 14}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 5.}], 
                    Text["\[FilledSmallCircle]", {2., 5.}], 
                    Text["\[FilledSmallCircle]", {1., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 3.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {3., 5.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {2., 1.}], 
                    Text["\[FilledSmallCircle]", {3., 3.}], 
                    Text["", {1., 4.}], 
                    Text["", {2., 6.}], 
                    Text["", {2., 2.}], 
                    Text["", {3., 4.}], 
                    Text["", {3., 2.}], 
                    Text["", {2., 0.}]}, GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t3 -> 
                    "Square", $CellContext`c -> "Circle", $CellContext`b -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`h -> 
                    "Circle", $CellContext`t6 -> "Square", $CellContext`t4 -> 
                    "Square", $CellContext`e -> "Circle", $CellContext`d -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`g -> 
                    "Circle", $CellContext`t5 -> "Square", $CellContext`a -> 
                    "Circle", $CellContext`f -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t6 -> 
                    GrayLevel[0.85], $CellContext`h -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t5 -> 
                    GrayLevel[0.85], $CellContext`f -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`b -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`a -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`e -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`d -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`c -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`g -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`t2 -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 12, 1, 1, 8, 5, 5, 1, 0, 0, 0, 0, 0, 
                    0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.6644407471831086, 
                    4.664440747183114}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{0., 5.}, {0.33555925281687987`, 
                    4.335559252816889}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {1.1644407471831102`, 
                    4.500000000000026}, {1., 4.}}], 0.2], 
                    ArrowBox[BezierCurveBox[{{1., 5.}, {0.8355592528168897, 
                    4.499999999999981}, {1., 4.}}], 0.2], 
                    ArrowBox[{{2., 5.}, {1., 4.}}, 0.2], 
                    ArrowBox[{{2., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{1., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{2., 3.}, {2., 2.}}, 0.2], 
                    ArrowBox[{{3., 5.}, {3., 4.}}, 0.2], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.2], 
                    ArrowBox[{{3., 3.}, {3., 2.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {1., 3.}}, 0.2], 
                    ArrowBox[{{1., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {0., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.6644407471831548`, 
                    5.335559252816896}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {1., 5.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{2., 6.}, {1.3355592528169014`, 
                    5.664440747183141}, {1., 5.}}], 0.2], 
                    ArrowBox[{{2., 6.}, {2., 5.}}, 0.2], 
                    ArrowBox[{{2., 6.}, {3., 5.}}, 0.2], 
                    ArrowBox[{{2., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {2., 3.}}, 0.2], 
                    ArrowBox[{{3., 4.}, {3., 3.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.6644407471831357`, 
                    1.3355592528169071`}, {2., 1.}}], 0.2], 
                    ArrowBox[{{3., 2.}, {2., 1.}}, 0.2], 
                    ArrowBox[BezierCurveBox[{{3., 2.}, {2.335559252816896, 
                    1.6644407471831297`}, {2., 1.}}], 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 5.}, 0.2]}, 
                    InsetBox["a", Offset[{2, 2}, {0.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 5.}, 0.2]}, 
                    InsetBox["b", Offset[{2, 2}, {1.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 5.}, 0.2]}, 
                    InsetBox["c", Offset[{2, 2}, {2.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 3.}, 0.2]}, 
                    InsetBox["d", Offset[{2, 2}, {1.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 3.}, 0.2]}, 
                    InsetBox["e", Offset[{2, 2}, {2.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 5.}, 0.2]}, 
                    InsetBox["f", Offset[{2, 2}, {3.2, 5.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{2., 1.}, 0.2]}, 
                    InsetBox["g", Offset[{2, 2}, {2.2, 1.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{3., 3.}, 0.2]}, 
                    InsetBox["h", Offset[{2, 2}, {3.2, 3.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    
                    RectangleBox[{0.8235294, 3.8235294}, \
{1.1764706, 4.1764706}]}, 
                    InsetBox["t1", Offset[{2, 2}, {1.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 5.8235294}, \
{2.1764706, 6.1764706}]}, 
                    InsetBox["t2", Offset[{2, 2}, {2.2, 6.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, 1.8235294}, \
{2.1764706, 2.1764706}]}, 
                    InsetBox["t3", Offset[{2, 2}, {2.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 3.8235294}, \
{3.1764706, 4.1764706}]}, 
                    InsetBox["t4", Offset[{2, 2}, {3.2, 4.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.8235294, 1.8235294}, \
{3.1764706, 2.1764706}]}, 
                    InsetBox["t5", Offset[{2, 2}, {3.2, 2.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{1.8235294, -0.17647060000000003}, \
{2.1764706, 0.17647060000000003}]}, 
                    InsetBox["t6", Offset[{2, 2}, {2.2, 0.2}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {2.,
                     5.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {1.,
                     3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 3.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {3., 5.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {2., 1.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {3.,
                     3.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 6.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 4.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {2., 0.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i11$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i11$$, \
$CellContext`i11$3395$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{309., {243.884033203125, 249.615966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7716906723209667`*^9, 3.771690718043619*^9}, {
   3.771690775647368*^9, 3.7716907861370993`*^9}, 3.771704876017096*^9, {
   3.771704942705061*^9, 3.7717049546979923`*^9}, 3.7717079705753393`*^9, 
   3.7717123070994673`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e6a7bf16-6c95-4b50-8148-4fdf253cf35e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["User interface and animation", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.7716870365262814`*^9, 3.771687056829726*^9}, {3.771687088404793*^9, 
   3.771687108958023*^9}},ExpressionUUID->"6546414a-3e9f-420a-b124-\
7c862b2daa92"],

Cell["\<\
A Petri net requires places, transitions, arcs, tokens and firing rules. It \
requires a lot of input for the users, which is not convenient. To make user \
input data for a Petri net easier, we are going to create a user interface \
and the program will translate the input from users to be a PetriNetData \
structure. Here is the code to start the user interface and helper functions \
to translate the input to be a Petri net data.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.77171655905812*^9, 
   3.7717165658398743`*^9}},ExpressionUUID->"98a3d490-da6c-437f-994c-\
37456e70b5de"],

Cell[TextData[{
 "PetriNetGeneral[]: start a user interface and translate user input into a \
Petri net data structure. \nTo achieve this, we need some helper function to \
interpret the user input:\n",
 StyleBox["makeMultipleEdges[<|\[CloseCurlyDoubleQuote]from\
\[CloseCurlyDoubleQuote]->",
  FontWeight->"Bold"],
 StyleBox["source places",
  FontSlant->"Italic"],
 StyleBox[",\[CloseCurlyDoubleQuote]to\[CloseCurlyDoubleQuote]->",
  FontWeight->"Bold"],
 StyleBox["sink places",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[",\[CloseCurlyDoubleQuote]numbers\[CloseCurlyDoubleQuote]->",
  FontWeight->"Bold"],
 StyleBox["numbers of edges needed",
  FontSlant->"Italic"],
 StyleBox["|>]: ",
  FontWeight->"Bold"],
 "return a list of edges in the Petri net.\n",
 StyleBox["inputTranslator[<|\[CloseCurlyDoubleQuote]Places\
\[CloseCurlyDoubleQuote] -> ",
  FontWeight->"Bold"],
 StyleBox["List of places",
  FontSlant->"Italic"],
 StyleBox[", \[OpenCurlyDoubleQuote]Transitions\[CloseCurlyDoubleQuote] -> ",
  FontWeight->"Bold"],
 StyleBox["List of transitions",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", \[OpenCurlyDoubleQuote]Arcs\[CloseCurlyDoubleQuote] -> ",
  FontWeight->"Bold"],
 StyleBox["List of arcs",
  FontSlant->"Italic"],
 StyleBox[", \n\t\[OpenCurlyDoubleQuote]Initial \
States\[CloseCurlyDoubleQuote]-> <|\[CloseCurlyDoubleQuote]e.g: 0,0,1\
\[CloseCurlyDoubleQuote]->",
  FontWeight->"Bold"],
 StyleBox["initial number of tokens in each places",
  FontSlant->"Italic"],
 StyleBox["|>, \[OpenCurlyDoubleQuote]Steps\[CloseCurlyDoubleQuote]-><|\
\[CloseCurlyDoubleQuote]Input the steps you want to animate\
\[CloseCurlyDoubleQuote]->",
  FontWeight->"Bold"],
 StyleBox["number of steps \t\twant to visualize",
  FontSlant->"Italic"],
 StyleBox["|>|>]: ",
  FontWeight->"Bold"],
 "translate the user input to a data same as the structure of Petri net data.\
\n",
 StyleBox["makePetriNetFromInput[ ",
  FontWeight->"Bold"],
 StyleBox["A Petri net data structure ",
  FontSlant->"Italic"],
 StyleBox["]: ",
  FontWeight->"Bold"],
 "generate a visualization or animation of the Petri net step to step."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.77171655905812*^9, 3.7717167366336403`*^9}, {3.771716778673066*^9, 
   3.771717014438005*^9}},ExpressionUUID->"0ad19078-98bb-448f-9cf2-\
159eddddd01e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "makeMultipleEdges", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeMultipleEdges", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<from\>\"", "->", "in_"}], ",", 
     RowBox[{"\"\<to\>\"", "->", "out_"}], ",", 
     RowBox[{"\"\<numbers\>\"", "->", "num_"}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", "num"}], ",", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"l", ",", 
         RowBox[{"{", 
          RowBox[{"in", ",", "out"}], "}"}]}], "]"}]}], "]"}], ";", " ", "\n",
      "\t", "l"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->"In[43]:=",ExpressionUUID->"f01c6582-3435-4013-b30c-b8a5f0c87059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "inputTranslator", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputTranslator", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Places\>\"", " ", "->", " ", "placeList_"}], ",", " ", 
     RowBox[{"\"\<Transitions\>\"", " ", "->", " ", "transitionList_"}], ",", 
     " ", 
     RowBox[{"\"\<Arcs\>\"", " ", "->", " ", "arcList_"}], ",", " ", "\n", 
     RowBox[{"\"\<Initial States\>\"", "->", " ", 
      RowBox[{"<|", 
       RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init_"}], "|>"}]}], ",", " ", 
     RowBox[{"\"\<Steps\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
       "\"\<Input the steps you want to animate\>\"", "->", " ", "steps_"}], 
       "|>"}]}]}], "|>"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "initialState", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"initialState", " ", "=", " ", 
      RowBox[{"ToExpression", " ", "/@", " ", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"init", ",", "\"\<,\>\""}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<States\>\"", "->", " ", 
          RowBox[{"First", " ", "/@", " ", 
           RowBox[{"Values", " ", "/@", " ", "placeList"}]}]}], ",", " ", 
         "\n", "\t", 
         RowBox[{"\"\<Transitions\>\"", "->", " ", 
          RowBox[{"First", "/@", " ", 
           RowBox[{"Values", " ", "/@", " ", "transitionList"}]}]}], ",", 
         "\n", "\t", 
         RowBox[{"\"\<Arcs\>\"", "->", 
          RowBox[{"Join", " ", "@@", " ", 
           RowBox[{"makeMultipleEdges", " ", "/@", " ", "arcList"}]}]}]}], 
        "|>"}], ",", " ", "initialState", ",", " ", "steps"}], "}"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->"In[45]:=",ExpressionUUID->"54fbc894-7033-4a57-a320-8755b56f3fb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "makePetriNetFromInput", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makePetriNetFromInput", "[", "input_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inputPnetData", ",", " ", "initState", ",", " ", "steps", ",", " ", 
      "pnet"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"inputPnetData", ",", " ", "initState", ",", " ", "steps"}], 
       "}"}], " ", "=", " ", 
      RowBox[{"inputTranslator", "[", "input", "]"}]}], ";", "\n", "\t", 
     RowBox[{"pnet", " ", "=", " ", 
      RowBox[{"petriNetData", "[", "inputPnetData", "]"}]}], ";", "\n", "\t", 
     
     RowBox[{"ListAnimate", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"petriNetRun", "[", 
          RowBox[{"pnet", ",", "initState", ",", " ", "n"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "steps"}], "}"}]}], "]"}], ",", " ", 
       RowBox[{"AnimationRate", "->", "1.5"}], ",", 
       RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.771704280659625*^9, 3.771704281077743*^9}, {
  3.771709589425152*^9, 3.771709589868793*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"68769efd-464f-4d7f-afed-0305e3d44130"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriNetGeneral", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriNetGeneral", "[", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Places\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", "\n", "\t", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{"\"\<Circles\>\"", "->", " ", "\"\<String\>\""}], "|>"}], 
          "]"}], "]"}]}], ",", 
       RowBox[{"\"\<Transitions\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{"\"\<Squares\>\"", "->", " ", "\"\<String\>\""}], "|>"}], 
          "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Arcs\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<from\>\"", "->", " ", "\"\<String\>\""}], ",", 
            RowBox[{"\"\<to\>\"", "->", " ", "\"\<String\>\""}], ",", 
            RowBox[{"\"\<numbers\>\"", "->", " ", 
             RowBox[{"\"\<Integer\>\"", "->", "1"}]}]}], "|>"}], "]"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Initial States\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "\"\<String\>\""}], "}"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Steps\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Input the steps you want to animate\>\"", "->", " ", 
           RowBox[{"\"\<Integer\>\"", "->", "5"}]}], "}"}], "]"}]}]}], "|>"}],
      ",", " ", "makePetriNetFromInput"}], "]"}], "[", "]"}]}]}], "Code",
 CellChangeTimes->{3.771675406334553*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"10e36ae1-b155-4f2b-ae6b-2f130d8935e7"],

Cell["\<\
So when we start the function PetriNetGeneral[], the program will pop out a \
menu to ask users to input places, transitions, arcs, initial state and steps \
they want to animate. Below is an example of the user\[CloseCurlyQuote]s \
interface and the animation after we click \[OpenCurlyDoubleQuote]submit\
\[CloseCurlyDoubleQuote] button.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 
   3.7716916207835608`*^9}},ExpressionUUID->"1b316858-98de-4dbf-99b5-\
953cfb80717f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/luzhiryou/Documents/GitHub/WSS-2019/Final Project\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<GenInterface.jpg\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.771691705807214*^9, 3.7716917524253902`*^9}, {
  3.771691864013026*^9, 3.771691938672223*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"2ecce3f0-d148-458d-94c9-83316be56d46"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmUFOW5//HcLDe5udlubk5ucpObm+Wem9wlNwoao8YkqDFRY05ijCau
7DuyySIooiCggLgQxV0ENwQUUBZFCPtMd8/0zDAocRiYFYYZlgFm6xmZ+j//
fs6856Wqp6fp7pr1+znHPtXVVdXV40vVr9636n2/03/0tYM//rGPfWz8Z+Tl
2n6T+owb1+/OP3xJ3vzx9vHDhtw+aOCVt98xaMigcT/p/wmZ+QV5GS///f9p
BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhYc3Ozviqd+dFHH7kW
O336tM5vamqSCfvVfGo2pTPNp2bCbFmWdy2sW/BOfBRl3sqmzCr2T9BlGhsb
zW8xG7f3zbUbumOuX23WjbmiPdP8lcyE9+9gVnf9Uu++nY5yAAAAuqY4IU1D
jqYdV47yZkJh0qMsZodDk9Y09cXcB/sb7QkXV451pV87qjlnpll7fiQSMftp
VnR9tSsNejOtvSe6QfsvaVKr63eJhoYG58xcKtNma97/HQAAAF2CKyja06bq
zzkzd7mWtOs57cUcTyWeCVEmuanWEp3sgF2Van+7N3bW19fbe2VnSzvC2RWS
ZgHXWq7oaIKxd3nzV9It6xbs/TdrmYju3Y6EUnt/qLQEAABdmklQzpnJzY5J
jpWL7CRpR0rdTsw2dNd2li5d+r3vfW/JkiWOp+7RFR29SdU0XrsqUe3pw4cP
S2BzVW+6dt4VEe3sZzJhzBZt79bsCK3TFRUVN91004ABA/r167dy5UpXS7dO
mCZ+s65+r/cPCAAA0Pm5UpbGns9//vOf/OQnP/axj33uc5+78MILN2zY4IpA
jpWgZKK+vl7i044dO+zNag1ezFwq5s6dK9ufOXOmvi0tLf34xz9+zjnn6Nvf
//73X/3qV2PeEmlmSm4cNGiQfKmrGf2ll176l3/5l7/7u7/71Kc+deONN0rC
dKzs6qo1NTtmoqM31OkPMV9q/xZX1aKdPOUXSbD81a9+9YlPfGLq1KmOlWP1
K3Jzc3fu3Ll9+3ZtGZctV1VVydtt27YVFBS4/z8BAAB0BeZ+SFNj+aUvfUky
3vPPPy+J6J/+6Z8kXh45csQsYD+zo6Fr//79khKXLFnibTs21ZjeR1QqKirM
nKKiIo2ymzZtkuWvvfbar3/96/qpZjl7I7r9AwcOyPKyk+ZXyOubb74pkfK7
3/3uY489NmXKlP/93/89duyY62c6sdrW9dXkRvONdku36++mgVCZxVxRc9++
fbKT06ZNc1XwymLyF/5Y1IcffqgLv/rqq7LzMmfgwIGJ/a8DAADojMwdj5Kg
JFj++te/1vkzZsyQtCN5T6b37t17xRVX/OM//uM3v/nNefPmafS65JJLvvOd
73z84x//6le/+sMf/vAHP/jB9u3bnWju+v73v7969eqHH35YZn7605+W4CTz
/+d//ue///u/JfLJxNKlSzWwlZSUSKD61Kc+pd/7+9///stf/rITjXOSWi+/
/PIvfOEL3/72t++77z5d/uKLL5a3kkVlT2TjssEtW7bI/N69e3/mM5+RrZkf
pcvLzowZM+Yb3/jGF7/4xeuuu66qqkp3/j//8z//8pe/3HjjjbLzffr0ycvL
0xs75ZdeeeWV8kvlp82aNUsXPnHihOz28uXLH3roIflpsrfLli2T+RJxR40a
JZuSjd96662BQMBpqRTVyH333Xd7nz0/77zzZs6cafK2RtP6+vrrr7++X79+
7fL/HAAAIM28j8NIitOAJ3Hotttuk2iUm5t77Nixr3/96xLA7rzzzt/85jda
RSnLSKb63e9+J28l/o0dO3bEiBEffPCBbFNimCTS//qv/5KkJ1vr27evxDbZ
4IQJE0aOHKmrPProo7oDpaWl8vZPf/qTrCLf9cc//vFrX/ua7FJ1dbV+6cSJ
E3/7299KfH3ppZdk+fHjx1999dWyigRd+cbbb7/9/fffl+U/+9nPXnrppd4W
6ptvvlkWvummm2QP5dfJuk40bX7iE5+Q+RdeeOG1114rG5dXWfjkyZP/EjVp
0iRZUpZ54YUXZPmamhpZWH6RhOSrrrpK/jKyqzJf/g6yh7IPQ4cO/dznPieh
12mp4SwoKJDNalO4666AH/3oRw8++KB5a1b5wx/+MGDAAP/+dwMAAPjH1f2j
E73HUmLVdddd961vfeuTn/yk5C6ZKSFQMtL8+fOLi4uLioq++MUvSjjUVTZu
3CiJ68UXX3SsmCrxTGZKUFy/fr3d3Kx1d4FAQLa2YMECnVNWViYLP/DAA//3
f/936623SsLUpvCnn35a5stiJSUl8r2SCSV36S2RGzZskI8WL15smqErKipk
zvXXXy/TkydP/oeoRYsWHT16VL6rT58+ZVF//vOfJStKqpTvleUvu+wybdQ+
99xz//mf/1m2LKvovsk3SuKVX6pfeurUKW28lq92Wup4ta8h2cLBgwfXrl37
s5/9TBaQb9E/wr59++QPKFHcdUunE625lT+mPUfJ/hMsAQBAF2Xai83jNpLf
vvzlL1988cVXXXXVzJkzJZjJR3fccYfGKq3lk+h10UUXaSKS6CgBUqv1zIMw
1dXVMvOGG25wrOBknrLJzMyUjTz22GM6v7CwUDY7a9asJUuWfOYzn/ntb3/7
la98RYLf2LFj5Yu0lVy//ac//anTkmblI/1SUxkoc77//e/L9iX7yQ7LDshX
bNmyRe9dtEkOlJ2R79IgKtMSpCUESkydOHGiLiNb0xV79eolyxw7dkzm3Hzz
zY51i6m8VlZWyl7JYt/4xjf+9V//VSbMc0x6j+V9991n/trmXk3JsTNmzNBp
++8jofq2225L+/9lAAAAv8UcL+bzn//81VdfrRHRPMusz3E/+OCDRUVFBw4c
KCkpOXTokH60efNmSVyzZ8+2x9mpqamRmYMGDXI9eK7fmJWVJVt76KGH9CPZ
lAawhoaGb37zm5/+9Kf1Hkv5Opk/Z86c/fv3y/eWl5eb+yffe+89reR0rOeJ
zj//fJlZXFysDwdJLJSvkLW0ZlJ2W7ZTHKVxWtvHdR8k0clbmZCvkz2XLRe1
OH78uGy8trZWFhg8eLDrQZ7f//73X/rSl7Zv3y5f+uSTT8oyepepLKZfPW7c
OOfMp8slvp5zzjnyJ3WsR6J0s5Jv+/fvn+7/zwAAAO3EPA2tbbtf/OIXr7rq
Ksfq4Ufs27fvs5/97L/9279JdsrIyJgwYUJhYaE+oC0RTpLYD3/4w5VRsqTT
ckeixDBXF+X6FZmZmZ/4xCcWLlyoH8mmPvnJT2rvQ5Lo9FEgWb6goOAzn/nM
v//7v8uX7tix484779y7d68TDWPypbLKD37wg+XLl69evVqfrV6xYoWsKzOf
eOKJqVOnSrB85JFHZP5FF10k03fddZds5Kmnnnr++ed1Z2ThP/7xj05LjaXs
ktmZ73znO88884x+6fvvvy8LaFO4SX0mLffp0+fv//7vZR8WL178rW99S7ap
TxJp3JXtfPvb3162bNkrr7xi/uCy7o9+9KP777/f/r+gCfOGG24gWAIAgK4o
ZhfiX/jCF6688krTG7npM3zdunXf+973tG36u9/97l//+lez+vTp03W+ZDMJ
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
v7i4WBZ+7rnnZGYoFJIE+84770hmk72SDR44cKC1XihtkgZly3/5y1/+9re/
6RzZ56effrq6ujozM1NSq0xIOpUv0k9Xrlwpn8rEzp07ZQckUt57770SHWUn
Z8+ePWrUqJKSEknIspj8WFk3KytLMqrMkbAqM2X35M/Y2mPvAAAAPYQELclg
dlO4RKZXX33VibbzVlZWSiST5Dlx4kTJeIsWLZL506dPnzBhgi4vEVE+kgmJ
XuPHj5fMJh9po7asOHnyZJnYvXu3hEZzj6WsLoFTJiRGSlx8//33GxoaTp48
Kd+ycOHCqqoqmfnKK6/It0vGk5lvvPGGrCi5VHZAtiMJ9ujRo/F/lCxfUFAg
W5OsK99SUVEhv1G27ESrSWUj8rv2799vgqV83fPPPy8xW/YkGAwuXrx49OjR
MseJBuaNGzfqPQD33XffQw89tG7dulWrVo0cOfLDDz9csWKFLClvDx8+7Hge
RKIpHAAA9BCaebKzsyWwbdmyRRORBEvNdbrAggULJGd+8MEHEvxkMa1InDJl
iqRHXV2i4z333KO1iPX19du3bx82bNi4cePk02nTpknslLS2d+9eiXCSvpxo
9JLAKVlUFpCoKRvXTKu78frrrxcVFckWXnvtNZm5b98+CYQSLHWHq6urJfLJ
py+99FKc32U/cbN161aJkbKi/Kjy8nKZU1NTI+lXfo4kYZnQhVeuXCmZWabl
t2g954svvqjBUubIRpxozJ4xY4YEy23btu3YsUN+qWzWid4mKuuOGDHC3Plp
7rpMpMtNAACA7kGST1ZWlqQ+TXeSiA4dOiRxS3KdBjPJURLJgsHgE0880a9f
P81a06dP16pIcccdd0hQbGxslDz25ptv5ufnT4yS1WW+JEwn+jyObEQS2q5d
uyRnyoRWcpaWlkpKlC1I5pSwKsFyz549MlO+SBKm7NuBAwdkpnyqFac7ovr2
7fvyyy/H+VGhUEiSXlVVlWRIScijR4+WmTNnzpQ4KtE3MzNTtnnkyBH5VH54
OByW6TvvvFN+mqRNCbqSD0+dOjVnzpxnnnlGVpw9e/bmzZs1IsoWZDfk58iv
k/10ovW9srD8KEna8uu0YtM7AiYAAEC3JwEpNzdX8pXWWAoJlvJ2xYoVmo7k
0/Hjx996661z5869/fbbn3zySVnl3nvv1bQmQXTq1KnTpk2TwCbBbPDgwbLu
qFGjtm/frotpi7nEzgULFkicGzJkyP79+829l060RnHMmDHykSTMdevWOdGb
PGV6+fLlspZkPAmZklclxc2YMUOfKpIQKFEwTqdDx48fnz9/vmxEErIk2337
9knekx8i+yP5VnZYtnPixAnZvgRF2SX5XQsXLpSfJutKIpVP5SdLnly8eLH8
ilmzZu3cuVO/rra29pFHHpFVhg8fLslTfvWjjz4qv1f+GpKWtW8lZQ9OBAAA
0BOYRtvWcposoDdA2u3Lprdwe8mmqKqqKjO2uGtgGtmIth27yHZMUDQ9YbrG
SdTXmpoa2Yj2/9PmT5Nljh075hrHR7Yg+yDRUcKn2StXpaLkQ7vjd3PbpPle
iZeylhPtg13fyjbNyEGuPjmJlwAAoCcwoau5ZURsE6h0jr51rIjlWtGxhmJ0
rCjl6tHRNY6PK3p5Rx43c+wnX1zjlccJbN5hu000lbUkN/bt21devd2ku/bB
3tWYvcR717V/IPdYAgCAHsg1WqKyo509Ao6d7rxPPbveuoYCNwu4qhxjjocY
cyRHXbHNR61dO2mv0tDQsGbNGq1sdPULpD/TNT6j+Znxd9L1ewEAANA9JJFF
gaS57iRps5sp16hPyV2P2Fc3XNEAAOATc1p3VScCvjqrimtT+Z8KvbHZaaUh
AAAApJF9nqXGEj6JmQ/jlDdzY4lrzPqz5bofw/FUnAIAgNTJ6bXNR2yANLIr
yRMZzdPbdJ76DmheNQ/cAQCANNJTvOv5HSDtJNHZnWXZ0zHZvSJoDtRuEJL4
3vhfBAAAUpeRkREOhwOBQDAqK8pMAOmVnZ0tr1rkmj3N0zHpqFJ79uzRYinr
6kbOSigUysnJkdIur4WFhQ6dpgIA4AM5z9p3V5qnJNJfVwVEOdGKytzcXMfT
j2tM+/fvlyhYX1+vb5Mun6b5u6CgoKSkxOGuDwAA0i0UCjln9sTucMKF/4LB
oE40x+3/Rz7Ny8urq6tzrDrGFMunxNrs7GyaxQEASDsNlkA7S7zgZWVlpfdK
R7aW9m0CAACHYIkOQrAEAKD7IViiQxAsAQDofgiW6BAESwAAuh+CJToEwRIA
gO6HYIkOQbAEAKD7IViiQxAsAQDofgiW6BAESwAAuh/tp1qHJlmyZMnQoUNr
a2tlzmOPPTZx4kQ6kYZPUgyWOkfKZ3PL0PbmI1NozUwdkdxel2AJAIAf5Pxu
BtqTSPnLX/5y4cKFxcXFF154YSAQ0GXMMHwduaPoXlIMlq6BovStRkotqJo5
Y6ZHgiUAAD4x53c9KW/atOmCCy645ZZbZsyYYWp+vFVAQIpSbwqPRCL2fHva
jp2SM12rEywBAPCJVkvaTd5XXnnlj3/84+LiYjNfzuAOqRJplXpTuCm0dXV1
hw8frqysrKiokFeZPnbsmGTL1urYCZYAAPhEzrBmWs7Uq1atuuqqq6677rr7
77/fTpveah8gFWm5x1KL5aZNm4YNGzZo0KChQ4cOHDhw8ODBQ4YMsRfzrkuw
BADAD3J+13bDSCRSVVV16aWXSrYMh8MXXHCBnHzlo8bGRrOw3cIIpCItT4Wb
e4NLS0sPHTp0MKqiokJeHeuuYLsMOwRLAAB8k52d7bQ0dk+YMOG2227T+TNn
zrzyyitdSZJzMdIl9WCpudG0idsN3/ZjO94GcYIlAAA+0e6G7FZvCZPmnNts
cQiWSJ+0NIV752tJtl+9ixEsAQDwSTgctt+anlsAP2jYkzKWk5Njz4mDDtIB
AOgqAoFAU1OT6+ROtoSvpLxlZmbG6WrSRrAEAKCr0HsslTnVMuAO/Kb3YCSC
YAkAQFcRCAQkRpoqSu6lhN+0sGVkZDjWmIxxECwBAOgqtB/L01EdvS/oQbTg
2Y+GxVmSYAkAQJdgBgQ32ZITLvxjOv/Jzs5O8FqGYAkAQFeRk5PT0NCg03qq
5ckd+K2uri4vLy+RdnCHYAkAQNeRmZkp2TIQCMipVqbD4bBMy2sI8IGUsewo
fXjHHvK7NQRLAAC6iphdvnC/JXylRS7BWy9yc3Pr6+udxJ70aY2ph5eNNDU1
yaUThRwAgLQzZ2o588oJN5F+BYGk2QHPzPSOumgrLi4uKyszN2wkHS91SCnZ
zv79+2WDSWwBAADE5604in+WB1JhjxbqtAxSH58EwsLCwnA4nJmZGQqFZCJ4
9nRdmdi9e7dszaGcAwDgD9N3JQ/voB3Yw4a2WeTsyslE+iZK5NtNpKRyHgCA
9LJ7sDQnXG4/g0/sLKdt005bAU8/1fs0dE4SlY2uJng6bgUAwCfek2wz4Cen
JenJayIBzyyjazUnVdNobs7UXNpsVZwCAIC0CAQC2t1QMBjMzs6WiVAoJBNZ
gA+0jOXm5sqExrw2g6UsUFxcnJ+fLytmZGRIcZXtnO09lrJKOByW1eWrS0tL
iZQAAPhBzu96krXP75x24RMTJuX6JcGKx4MHD+7du7exsTHBIBr/qyORSGFh
YUlJiUM5BwAg3eT83tG7gJ4o8YKXZXVmnlwjuItE0yw6SAcAwAcES3QIgiUA
AN0PwRIdgmAJAED3Q7BEhyBYAgDQ/RAs0SEIlgAAdD8ES3QIgiUAAN0PwRId
gmAJAED3Q7BEhyBYAgDQ/egZ1j5xm16jkxiRGUhQcsHS1tjYqBM65nizNey4
GVhch3F0rS5vCZYAAPghGAya6TvvvPOpp55yomfe2traW265JSMjwz4vJz3o
CeCSerB0Woa5tz+NWUQJlgAAtA8TLOU8u2TJkj59+mhFkETKiy+++MiRI07L
ydpUEAGpSzFYmnr15jPZH0m51Vp3giUAAO1DzrBOS6t3fX39T3/6023btsnb
OXPmjB492jnzpEyNJdIl9RpLV12lPR1/EHCCJQAAPtHzu55kGxoapk+fPmrU
KJm+9NJL169fbxaLRCIdtYfoltLVFC6vdXV1FRUVR44cORx16NChY8eOOa0/
6UOwBADAJ4FAQM/Oep7Nz8+/4IILNm7c+Itf/ELDpF35E78iCEhcWoKlFshN
mzYNGTKkb9++8tq/f/8RI0YMGDDAfpzHVdNOsAQAwCeu87ucbf/85z9ffvnl
06ZNMzP1EQknTZ29AE7KwVILpL7W19eXl5dXVlbKa0VFRWlpqbw6Z96Haa9L
sAQAwCc5OTn6VI6p2HnjjTd69+6dmZmpC7R2dgZSkXqNpd2hkOMpqKaW0ttr
FsESAACf2N0NOdFz7ssvv/yrX/2qo/YHPURamsKTQ7AEAMAn+lS41vaUlpau
Xbv2sssue+mllzp6v9DNESwBAOh+5PxuBit55plnrr766rlz53LOhd8IlgAA
dD8mWGqlpet2NcAnBEsAALofPb+bh74ZXgftg2AJAED3Ew6HHevRWroVQvsg
WAIA0P0EAgFzhjW9AnboHqFHIFgCAND9mDMsI+ygPREsAQDofkJA+woEApLr
tAPVRNKdLG8v6RqfMUGm6wNdPRSNtWRLAACALk3jnD4mpjEvTg25LJyfn19X
V+eknANNIj158qRsM7mACgAAgE5CwqGJkU1NTYlkxaKo+vp6XVEfNEuOrF5b
W1tYWFheXu7EGu0RAAAAXYvd+UCb2VIWLikp2b17dygUCofDWUnJzs7OyMgI
BoN79uyRrREpAQAAujrTAJ3gPZMmgpqbJDUTJlddaeMJNQAAgK6u2eoxtc0b
HU3TuZ0DU+nG394Ot1kCAAB0aXqTpB3q4gc8U9nYbI0MlUR15ekoe3WCJQAA
QNflbZKOf4+lxr/S0tKcnJzs7GztpyiJeywDgYCsLuvm5uYWFRURKQEAAHoa
CZbFxcUHDhxobGw0dYzJ3R5pmtQLCgrKysp4fgcAAKBHaY72Y1lTU+N96ieJ
TTnRBnHZmmwzbbsIAACALkJH3jGSDpaO9XS5jvsDAACAHiUzM9M5y64v49BH
h8LhMN0NAQAA9DShUEhCoB0mUwmWIhKJ5ObmEiwBAAB6FMmQWVlZZtpJoWNz
+0lwbQpPMaACAACgC5HsFwqFzLSTQq/mdozMyMhwCJYAAAA9jDaF63SC4/V4
2Q+Vy7SpBQUAAEDPISGwtZG+I5GI43mixw6fMdvNtXmd6koAAICeps0Q6B1M
vKGhQSdi1m0SLAEAAHqm+CFQRw+XAOlqLo+DYAkAANAztRYCdZBHJxoUNVW+
9tpreXl5TksTuQ7a6M2ZBEsAAICeKX4IlEhpouPkyZPXr19vfxpzRYIlAABA
zxQzBOoAOjo/EolURk2ZMmXNmjUycfToUaclVZr7LQ2CJQAAQM8UMwTac7Zv
3963b9+hQ4cOGDBg4MCB/fr1GzZsmCRPvf3Si2AJAADQM8UJlnprZV1dXUVF
RVlZ2aRJk5YtWybT5eXlZgFvj0MESwAAgJ4pTgh0jcUzderUDRs2uGYSLAEA
AKBihsCmpibXzMbGxqVLl77//vtmTmv9DhEsAQAAeqbWQqCdG820djSktLsh
x/NsOMESAACgZ4r/8I6JlHaMjDOeo0OwBAAA6Kni32NpOh0yJE/ao4fHDKUE
SwAAgB6otRBoAqQTvcEy5kM6pvbSNZ9gCQAA0APFr7E0LeCO1QjutDLmjvmI
YAkAANADtTbyjk5osDTDhSvXHZiuSkuCJQAAQM8UCoUc69mcpGny1Aiam5ub
+gYBAADQtWRkZOiEGR88icpG1x2YgUAgPTsHAACALkIyZH5+vumd0jWqTnJq
ampycnKc6CM/qe8hAAAAuoqioqKCgoLa2lqnpdIy6U3Jug0NDYWFhSUlJenb
QQAAAHQB2oRdWloaDoeDwWAgEMjOzpaJULLy8vIkqXb0zwIAAEDHOB1lplsb
UicOV6/pOifFJnUAAAB0IaZrSleHQsltykwTKQEAAHq4pLOl6WvIaUmVPLkD
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAJK25udl+e/r0aTMdiUTsZcySMmEW+ygqka9w
bcS7A7pN72LNUWfzm4CzoKVLip+3pDU1NTmeIgq0G9eR0Gkpk2ZCy6QchHXC
LqL2tKzrOp7rcds+mOs/Acc6COsyZkmffiOA7qexsdE5M7/ZhxonemAxRzPz
kb18nGxpDk0NDQ3mu3Rm/E2Zc7r5asAP9nnWOfNUq8iT6Ch6bNQSaI6E5mgp
c2RaD6rOmUXXHDl1GbNBc0i3v8V+a/9D8OEHAej+zFk1ZlWhPcdcFBsyxxzT
4oi/jBz3XDnWm2bbrBQFkmMXeLt+0j696nwKIdqfqUW06yddAVIn7JrMmM1D
sope3et8U4FpuKpAHasy394TAIjPWxtjDi/28cSV8Vwhs80qHVcjjq5uH6lk
2py4XWdw7wEQSBdvXVBrt2F4azKBdmCCoqux25stnVgt4/a6ZhlTk+C6aNLF
TFVAnGp8AIhj5cqVAwcOnD17tqtq0XvTjqsyx74rMo69e/fOmzdv0aJFjqdG
NOaVtc43x0busUS7MQXSdTqmuhIdwhUaTYE0gVBnem8u8q5eXV39xBNP1NfX
x/yW+NWYZgdS/kEAeoQpU6b0799fsuWJEydOt/Aups0oNrNk/OA3c+bMl19+
+YMPPrDP195TthzB7EeB7HYZwCdawNasWVNRUeG0/qAZreHoEN76RqelRtF1
+HXdgem6/JfXY8eODRky5Pjx486ZlQZ2FagdUM3hWrYs30jhB5CgQ4cOSaR8
/vnnBw0atHnzZplz9OjRqVOnbtq06e67777jjjvkqHLw4MF58+aNGDFi4sSJ
u3btksPO66+/Pnbs2AkTJjz33HN1dXVxgqUsPHLkyIKCAnuOuYGntRVdTyxS
Ywn/SBmbNm1afn6+fV+ZvJob0qi3REdpbmEKod2upC3d3v40vBWb8lpZWdmv
X7+Yh2u7otJb2mO2uQNAa95++22JlBIvb7/99vnz58ucsrKywYMHy0wJlsuX
L6+pqRkzZkz//v0fffTR++67LxgMZmdnSxZduHDhyy+/PGfOnPj3QL7wwguy
sGxh69atTz75pCTSSZMmyWblrP3iiy9K5pR0+uabb8qSR44cmT59+tKlS4cN
GyYTu3fvvvfeeyW+btiwoZ3+Fuh55Fy5aNEiKe1y0SRFWs7aGRkZUkSHDh36
+OOPHzt2zPFUAQHt7MSJE3fdddeyZctGjRo1a9askpISmSmHa7kakonS0tKp
U6dKKZXF5KD96quvynFVjtVZWVmysBzY33vvPVlMCrMcip944gn5VEr7nj17
JDFKgZdDtMy54447du7cKYvJP4cVK1aMGzdOXuUgLPPl38KCBQtOnTpFsATg
5bqelbf333+/HGRkWk6jkujk6KHB8s4779Qz6aZNm+StZEhdRdbdsWOHnIgl
FlZVVTltnXAll8pRSw5xcu0sQVES5oEDB2pra1etWiUHQwm0cpCUBXbt2iXB
Uo57kjwPHjwoH0mk3LdvnxwS5VhKgzj8I6djKeE5OTlHjx6Vc/SQIUNCoZCU
2wceeEBOstzoiw4nJVOOjZIY5ZD74IMPyoTMlEN0ZmamTMhxUrKfLtavXz+5
Ti8vL5cgKgfbwsLCjRs36iFUDrBSzl955RXZiBxm5YpejsmrV6+WCCr/BKT8
y1fIkVmyqByQi4qKTp48OXfuXFlSwqd8SvkH4BLz+b7jx4/LwUSONjNmzJCD
j8TFjIwMbRxfvny53sMjl8ny1jQUivr6+nnz5slMOQXrIS4+yat79+6V750z
Z87atWt15syZM9etW+dEG2uef/75p556Sg5usgNyNJOZkloXL14sq9TV1fXv
318OiWn/gwBOy0WWFH6t/HnrrbfkUsuJ/jORQjt8+HB6h0YH0sZuiYJylJaL
HZkjUVAOpDJTrr7lgl0mysrKJFjKgfTYsWMDBgw4deqUE20qeu6552R1Oa7K
TPmosrJSJvQAK2/luCpzJFU+8sgjK1eulDgqG/nwww/lyCxZVP9drFixQv5p
rFq16vDhw1xbAYjJ1dn45s2b5WDy0EMPPfnkkw8//LAERQl4JSUlcswxiXH9
+vXyds2aNc6ZN3sXFBTIIUiOVHv27In/pXL9K+domZBT9tatW3V1ibLvvPOO
LvDyyy8/88wzWmMpSTISicgcCZayt3IFLTPlAJjmPwTQQk6XWkQlQ8pZWy6a
9ASal5enwVJKrN7vQc052p+UQAmHffv2bWhokEOiHLTnzp0r8ydPnrxt2zaZ
KCwslMN4Y2NjdXW1HMPlmCkzly5d+tJLLznRNiO5YC8vL9eN6KfaLH706NF7
7rln/vz5mZmZO3bs2LVrlywze/bsv/71r+bbJWo+/vjjEmtlCx3z+wF0Vlrx
4uqjUiJlv379TAcUcqSSM+nBgwflmPPKK6/oKvJWDla33367XNXKwUoOZZs2
bZIgunv37oULF8pH+/bti/O9co6WdTVY3nvvvXL40i7UZFNysSwxUi7Gx4wZ
s2XLFkmPkmD1glpS5ZIlS5xo7SjBEr6SAjl27Fg5qzrRVkW5Vjpw4IBMS/F+
4IEHzGL0p4r2pwdqbcU+deqUlFUNljL/sccekwtwbfGRg6QsJsdSKb0SDmVa
UuULL7ygnaLrIVRipyRMORTLKi+++OKkSZN0sWnTplVUVEguLSoqcqKX/xos
5bsyMjL0YR99bJPbjAG4uJ4rlCOGHGfkctV0oithUg5fkhvl6CQxUheWo5Ac
UrShXLz99tvbt2+X/CnTcryShNnmkItyNa3hUw5ZO3fuNB2mPfzww/JFI0eO
fPbZZ01vGJIkZfdkT5577jndSZkpV9a+/VUAR65i+vbtq6fat956S4qc/EOQ
6yA5odu1lIwuivanTeFyvNU27g0bNsybN08mgsHg6NGj5RAqwVIOyE60p0o5
JmtFgVy5yyG0OTrgo8yUo6tsRHv20Ed1tKcOOcA+8sgjt912m8yZPXu2REc5
Sm/btk1XfPTRR2UVOYDLvwXNqwBguEb+cjXqeftCd1ruxjTMSVZfjx8/rnU4
3qEeXez+1lwdr9VFma9z3cZjhodIZOBIIDlaxuR0LOdlJ1pc9R4M1/gjtIOj
/XlH1TFzdETdhoYGc4CN2S+QXXrNoVtH8zGk8EtqPX3mUGg6If8QNNA6/BMA
4GF6OLdjnmndsFv67IDn7SbaMMEvDvuhIXv7rj1xbUcPceRJtA9XKY1ZaB1q
LNERYh4JvSHQXObrKnYZ9nb4782r3l4rdTG7J0yCJQCvmOM4OJ4ug8xhxwzx
YC9w+szxZNs828bsBtB7aeyceUluH+54GhH+MaddV41QM+Mjo6PZJdB7vROz
iLrqLc3hVI/YpgLBdVHvqti0248YpQJAZ2Mf+vTgxjEK/nFd6bTZTYpZ3nXD
BpB23ht+2lw+uRWBpLkKW/xS572PLunjp+tQDLTG1RBDgUH7sEdAjr+k63xN
EUU7sEtdm/eou1bk6Wz4xHt7W/zCaU7uZsXUj58x78oAYrJvE+K6Gz6JeSyK
U97Mc2TOmU2HgB9cmTCRU6frHkjKJ3xlPx3mnGW6S/qSx9xul8aAim5MTtne
K+6O2hn0BHYleXJZkRoh+MouYPELp7cMc/yEr1wlLf4NGObk7u18IMWv5sYP
tEkLiX0TeDPgAzm+2R1qxexcy8Xc2KN9sNglFkgvUy3jWE8mximfzVaNuutw
CvjBe2xsbivgmT4KtK+2JIqo09L7QbN1GcUFPlqTkZERDocDgUAwKivKTADp
lZ2dLa9a5JoTqOSRj7KiBXLXrl2ySnYU5RM+ycvLk9edO3dqQU2kbkfO1Lqi
lM9QKJTF8RO+0aIlxUwKm5bVxHt9OXDgwJ49ezIzM5Mon7KWfKkct+VV/mnI
RGFh4dkEDfQsOTk59t2Vpjf1NF5hATYnei7Ozc3V8hb/sleWlyXtJ30on/CP
6UxYiqUcG+3uKGOSg6csKedZuzrd7g4ISCO7ryopclLwtB/+1sqnObqWlJQU
FBToSPRJHD/ttZzogFASU4uLi+P800BPJhcgjudJxmbunYDP5KpZJ5rb6j5I
LpbNks08vwOfNbc0GuqxMRGBQEAneKIB7cAUM1Pw4tADrFwl2Y3gqXy75lh5
lW2msh10Y4kfPIE0SrzgZWVlkSTR/hIponqKt699Yi5AAUbaNUdvE0qwaPlx
oic8oDWUDXQIgiU6uSSCpZnparXkMQekHcESnRZlAx2CYIlOLvEimp2d7cQa
H5xICf8QLNFpUTbQIQiW6OQSKaJaM5mZmRnz+TLTbWCbj+4CZ4tgiU6LsoEO
QbBEJ3dWNZbNLd0d2DdVmpCpeLQHaUSwRKdF2UCHIFiik0ukiGpVpAmWds/q
x48fN30QtdltEXC2CJbotCgb6BAES3RyCRZRKZx2b/+RSCQjI2Pw4MHnnXfe
ypUrdSZN4Ug7giU6LcoGOgTBEp1cgvdYOi0P75j0uG3btscee+ziiy9etWqV
qbSkDCO9CJbotEwjjhPt8vS111675ZZb5JA4atSonJwcux2HxxuRRolXB+lZ
Wy1dunTw4ME6PMrjjz8+YcIEc98alUJIr8S7G9qxY4dzZnSU6T59+qxevdpe
mGyJNEoxWLbW56qc6M2lkJ70W/sKgiVaEwwGzaOL8nrvvfeuW7du//79d999
tyRM+yOHQeeRPokflHSMHimEUvxqamp+/etfP/roo4WFhT/+8Y/luOq0jG7m
UD6RVokXUR2CxIxpomX18ssvX7lypZZMHayEYIk0SjFYail1DddoDqHmYbSz
2iagwuGw6/JElJaWLlq0qFevXtXV1XY3Gh22l+h2zqop3AxGJq9bt2696KKL
+vbtO2PGDF1AP6XGEumVeKX6rl27zLQ5Tl5yySV2jWWcAZ2BJKSlKdzVcYG9
cTtzntU2AR0zwhz0VqxYce211950001jx4798Y9/XFJSYtImwRJpdLYDMWsR
1cPgr3/96/POO6+oqMhutXGoEUJaJdgULoUwLy9P7xeyS+DPfvaztWvX2iWT
GnWkUSrBUoqi64ReX19fWVlZXl5+5MiRiooKmdZqpTgX7ARLtEbbGVVOTo6c
r/U8XlBQcO6558q5Wz/S0zqVQkiXs73H0tSor169+je/+c3111//4IMPOtZ9
QX7uLHqixO+x1GOmOTzqAzuXXnrp8uXL7YEdfdtT9ERpqbE0R8733ntv0KBB
Q4YMGTBggLzKdP/+/ZPbJiBnbXN/mgTLXr16ffDBBzU1NbNmzZLpkpISU25J
lUijs7rH0tSoV1VV/fznP1+zZk1ubu4555xjbuRwzmy7AVKX+FPhGiyNioqK
w4cPX3LJJYsXL66srDS1Q1z+II1Sv8dSJ7RYyjH20KFDUm7ltaysTCstnbi3
cBAs0RpTY6mla9iwYb17977ooovmzp37ox/9qLS0VI+KHBKRXkkMxCyvkydP
vvXWW53oQfX+++//wx/+cOrUqeYW/u0teqAEi6iUTCmi9uDgF154oRxFzzvv
vAsuuECOonIR5POeoidKJVjG7LHffs7CfoqntbvgCJZojV02tPxUV1fX19fb
c1xPigGpS/yglJGRoRPeOnN7DoUT6XW2NZb21bd9a6UeRWnxQXqlEiy9T+ya
KyOzQVefMG1uEzDC4bD9lv4q4StzqaI9tDgJPBSmz5fF71ENSAu7NOp5M5GH
FuUoaj9dSymFT+zUJ1yn7zjoIB3tSa615VLadfAkW8JXUt4kLnofpI3JdFbp
eDpbA9LOVN1owXPiZks9v5szLL0TwFeuAiYFr7X+glwIlmhP9rAmrjpwwD92
dwRxSIbU5h4Nk0RK+M2cu6XgJXgkNH34EynRDsx9jwkeRR2CJdpXIBCwn83h
iht+08Kmd062eS6WT+3DFw/pwFd2c7bWWMbPlnZ3Q6ZkcvkDn7jO1FrwqLFE
Z2MOntRSoj2ZBu42s+KuXbt0GdNGSVmFr+zqoEQuZMzzZUB7SrzgESzRnkwP
bCZbUiME/5hnY00PLW0yzT2UT/jNvoNXr2gSWcvcjelwHxF8Zhcwu+DFR7BE
e8rJyWloaNBpxh1D+6irqzOj4MVfUpbJzc1lnGW0Gy2TcgUkx8Y2OzbX6/H8
/PxIJGJW59oHPrFLlxQ5KXg8vINOKDMzU46fgUBArn1kOhwOy7S8hgAfSBnL
jjLtjIl0NyTLS7GUgipryUZkuqN/B7otPRhKSUuwk0BZRouorqITHf0j0D1J
0ZICpuVTJqTgpTikYyr82Ca6h5hdvtCaA1+57plMZBXKJNqHXT2eeN0jvRag
3ZxtYZNinJeXZ5omky6l9kE4EomYvogBF/tJxqamJtpx4CvXQA8q/qAkWizt
xyEpovCVXcYSKWymAHP5g3ZgilmCwznJ8iUlJcXFxUkP/2T+FegWJKMWFRWV
lZUltzV0e96KI4Yeg39c52tzZ1qc5V0DmnDuhn+0utIuaYlU73AIRfswRSvB
g6F9/Pzwww/z8vJ27doVDoeDZ0kb4rOzs/U1JyensLCQC3zEYY9p4tCaA5+5
qh+dBIqcfQSjxhJ+0wKZyCVMzLpNyid8ErOwtVne0nJJLpk2ZnsT4GU/U0aD
DvxmHwPlMNVmh/x2XRCDOcJvrqKYyFnbrp+0T76AH/SmNfM2fvW4nt/tuvSk
T+66olmdkID4vP0VNAN+cqz7z9s8QHkfptBECqSdXZeu082JVT82eyrVAT/E
LHLx6THWHEgTX9G1Bcc6AnO/B+LQXlzkVbsv0I5ctEMDIO20jOXm5spEcwIN
NLKMlExZPiMjQ1aUtfQGoY7+HeietHRlZmZKkZO3iVQ/yhlWC+TOnTtNbzCA
T7Q/KylsWdFOh+IHvOaWeyzltbi4OD8//2zvrjSyW0hCkMxw8OBBsiVaI+XE
e0MRrTnwiQmTcnRK8MJZlrQLZxKX20DizN0XcjJtTuwe4CxG3kF7OauRd8zx
tqSkZP/+/bW1tUl/r1Z4ah8dDQ0NBQUF5eXlSW8N3ZspmVpcuQZB+0i8c92s
xPqpBtIrkSKqJTMQCJhmymbPXcTNPNQDH0hxSvzYmHpn5t5WeDpIR2vC4bBj
PRzhtFySdPBuobsjWKKTS7CISnrUJU1VZ/OZ40lpVQ81mUgvgiU6rczMzI7e
BfREBEt0cokUUW0l18tzVyda8moel3A9UQukjmCJTkvLhl5lm86BOY/DbwRL
dHKJN4VnZGTYb+3HyenDDT4hWKLT0nssXZ0JcKcl/EawRCeXeBE1NxS5HvNx
nYspxkgjgiU6rWAwaKaltBw8ePDkyZMduD/oIQiW6OQSrLGUq3IpouZiXPug
1idnnZYbLO2RIoG0IFii08rOzrbbaC666KK1a9d24P6ghyBYopNLvIiaHrE0
Xn700UcVFRX79u1zaAqHbwiW6LQCgYBO6DX1ZZdd9uabb3Ieh98Ilujkzqq7
ITN95MiRoUOH/uQnP7nwwguvu+66vXv3agUmZRjpRbBEp6VN4ea416dPn1Wr
VulHer+QXnHr5TYdpyNdEj8oaRG1Bw13rBElnJbeAqkRQnolGCy1K3WnpUxu
2LBh0KBBx48fP3bs2IABA6ZPn+7/nqInSjFY2qN+ew+eelDVT1v7CoIlWqMl
0xShSy+99J577rnpppvkcnvYsGEHDhzQxbjcRnoleFCSgmd3Evjyyy8PHDhQ
x4944okn7rzzTr2lzaGpEemW+HkzNze3rq7OObPLSjk1v/rqq5dffrnTcnnO
URRplHqNpav3fnOFLky1UpzaJIIlWuN6eOeSSy655pprtm7d+v77719//fVy
xe1YVzSmWzYgRYkflLSrVS2BNTU1cqZ+/PHH5ZLn/PPPD4fD5En4JMEiGolE
srOzzVv7MufBBx+U6yCfdg89XCrB0tUPjD1hkqQ577eWLQmWaI2rbFxxxRWr
Vq3SWqCNGzeed9551dXVdms4kBZndY+leQJCjn7btm278MILb7311unTp5uD
YczWHCAVZ3vt45zZblhYWHjuuefKUZQRzeCHVIJlzLXstktzOI1TbgmWaI2r
ZP785z9fs2aNTufl5fXu3Xv//v3OmWM+AqlLfLw8M5y9mXPNNdecf/75ZWVl
TqwR9IC0SKSI6ilYj6KmekccPXr06quvnjp1qhOrf0sgdSk2hdtX5TIdiUSO
HDlSVVUlr5WVlTpxttsElDaFNzY26qHvkksuWb16tRM9PK5bt65Xr14NDQ32
TRdAWpzVDWzmzh+xcuVKOWX/7ne/e+CBB+zrHcon0ivxImr61lAnTpy4+eab
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
zdX8ZDuIeIsbExWr0zFNI2xtbQ0Gg6bDk20f4iFDEZaCHgIXyzOvL7lPkxAV
nRVuMx5dTbtZH5iQBHBfKPl8Pn1uTiE3F1hjw4d4jnsT1StiKcsId+7cOXXq
1DFjxmzcuFECB5wERMhgGbqw7FdJus8AhSWJhbl0v22Wrt6/nr4g4jkuCyXY
pN/vt220pzeFNEdp0kqJt7ivN2Ummi45d+/e/dprr/34xz9OT08XsxxwLDEh
g2WIwjL+jVK0xp9yTmFJYmGuwPbII4+8+eabyqq4we9//3uUkPoqS0XiIe67
wsWpriyzxNcVK1bccsstEyZMmD59OlfoJcnDjYmKmNSTc82hRBMnTty0aVOP
RTKzSYYpQxxjqc/FRBOY10NhSWJh7qy3bt26K6+8UprYkJSXXXZZY2OjGZkl
JPGKQbmDzJ7u+fPno74uKSl54oknbr75ZpszkxCvGNTkHXMBTDlBWZqenm4G
clkD4iGeCEubnrQtK6QD3aRJiMZcMaC1tfWKK67YunUrDOnZZ5+9//77Jdwc
4nuasklSDfeFkqz6IpWy7GsPysrKlixZ8qMf/ai5uZn1NUkGLk0UxqlHqkuI
FJgoSzdu3Mhl3EiSGPoYSxu2jcgHnHRGYUliofeMEN04Z86cGTNm4OSaa67Z
tm2bLTLLRuIV7gsl3fYRX/qaNWt+/etf33zzzdOnTx87dmxVVRU3uCfJIDGn
uq6FUYSuW7eO08pIkvBQWCKRQCDQ0NBQW1tbX19fV1dXU1ODNrsezZ5AmmQ4
o21DjGf//v2XXnrp1q1br7rqqs7OTrM8dLNQMCEuce8OMp3qRUVFEJOyR+2B
AwdwXlZWpq+y+iYe4rIrXHss9UwH+RRhqRwLZBHiCZ4IS22x27dvnzx58qRJ
k+6880584nzKlCnxK30KSxILc3SQsgzst7/97U9/+tM5c+bocDa6iee4F5Z+
v18Xbvn5+RdffDEkZWtr6/z58y+55BIIS9lfLJmZJcORQS03ZFbBtbW1NTU1
l19++ZIlS+rr67l0G0kGQxxjaavQOzs7KyoqYLfl5eXV1dVVVVX4VHFbQxSW
JBbaNvTotfXr148bN87chNS2DBEhQ2dQO+/oMhAn9913H+zz0ksvfeGFF37w
gx+gAJSiLxAIJCuvZFjifuGCwsJCORdDHT9+/JgxY9DqmTBhwg9/+ENc1Quu
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
CLIKVxETUspUUJCRCHz99dfl0dCZiIlHQzTec889UGWZmZmVlZXQYPfff//M
mTMzMjKgyrZu3QoJeueddz7++ONvv/02tNmxY8fmz58/ZcqU5557rqSkBElB
+i5atOjuu++ePXv2119/7fQWakwlKYSj2JZXck5gR2amTp26a9cu/ETIsDLc
kriE/CD/+A3vvfdefDW15bp16+bNm4ffzYM/GCGEEELImQqUD3TdK6+8AsUF
IXfXXXfhK8QeFBSkHSJAHCLk4MGDfr8f2g8RoAw/+eQTKEDp7MaNiD937lyc
z7AQJ+fvfve7VatWKaP7GCJ2+vTpt99++6uvvrpv3z5libc1a9ZMs/jggw8Q
CNmGOO+///6LL76ImPv378dzIRch2/7yl79A3HZ0dEDUQfoiPqQsLiGdxYsX
I2NICi+Cz/ivDPmH2/GC77zzjtmXjc+1a9dCFiIDjz76KLRrc3MzVG5jY6Mo
TPwICBStCOF95MgR/RtC686ZM0cuIUulpaX6cXLvtm3b/vCHPyhjvAHXjSeE
EEJIigGxB30IpYfz9PR0nEsnLwQVzquqqj799FMIS4goCCHovdtuuw1yS1md
3QiXUZQtLS3QVHv37oX2gwI8evQoboRWXLFihTIcgFBxhw4deuqpp2655RaI
xueee06Sgj589tlnda86ToqLizdt2oT0RSW+99570I1NTU1IYfv27dCE69ev
h3bFVYRXV1cvXLgQj4Moxeuo/sY3apBt5BDp19bWQl76fD7tsYQ4vOOOO5As
MimPg3iGgMQnruLRmzdvxs8imVy0aNFXX30lazHhqnkJPyZkpMx8l4fiZOfO
nfPmzeN0eEIIIYSkMBA50IoQhDjfuHEjBBX0FYTZunXrcF5WVrZhwwbILQQi
wpIlS6DK6urqIKggzHCjjKLMzMyEOJw0adLdd98NOZqfnw9hiaurV682nyV9
zYifl5cHlYVk8ZSurq577713wYIFEgE3Pvnkk3j0Aw88IE5FhEPQIlkZ27l0
6VI8CJoTcW699VaEH7WYPn068oa7cnJy4rzvZ5999vjjj+O5eFk8dNWqVVrm
HThwYMaMGfja0NAAmYpPGWmpx1tCJ0PiyvnixYszMjJ0sh9//PHbb78tv+db
b70ll8xZPFu3boV4NrvaTeVJCCGEEJICQDVBp7322mvQPOvXr4fYg0hTVg84
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
OjrwVT7feOONO++8E6rsySefzMzMRMgXX3zxwAMP3H///e+++y60KEL+YvHy
yy/j9qeffhoSEWKgrq7u1VdfnT59OiTH119/Hee5EA933HGHKDctKkzPp6ku
RJloX5xWKZBMyJKOI0nh0QcOHMB5bW3tXXfdBf1pGy+q+nbgOruk5UGPPfbY
oUOHJATJaunl9EyaGVB9+4JtmlZOnN48Z8aU4ZmUX8P0+Olo2l+q+na460c/
8cQT33zzjZn4448/jt+nX12qf2TtnDQj2PSh7RVs3lHb72O7MT09ffny5c7X
j3U7IYQQQs4K2tvboRghDv/0pz/t379fWRpgzZo1CIE+fO+99xAIbQmd+fzz
z0NVQg2uX78eEgJiEoEPP/wwwnEyZ84cZSlSaLmPP/4YqX3yySdx/E6QDRCu
UIaNjY1IasWKFXjc/PnzS0pKcBWidNGiRfiKONCuiIPAF198cd++fTiprKyc
NWtWQ0PDI488ggjQTp999pmyBOGbb745derUhx56CBlABGTmnXfekZSPHTum
LLU5b968adOmzZ07t6KiQjKDfEItv/DCC7gXqeEpeDpeCukjHfwgu3fvhs7E
VaSGyEj5qaeeWrJkyb333otfYO/evUiksLAQ8fG7IcMtLS3yS0Jmi2sOvP32
21999RUeihdBUngFSD6khixB7Il6/PLLLz/66CP9E+ERmzdvxnlubi5+JZGR
f/7zn/Py8rZu3QrZf88997z11lttbW2497XXXlu9ejV09YwZM7Zs2YKYr7zy
yqRJkx599FGcSJp4L/xieJeFCxciez6fD1cRB4ngpVRUAaJ98f777z/44INI
SkZE4E/wzDPPIG/33Xcffjq0R5TVuEAKcoJH46eDLe3YsQN/BfzCSBOqHuoU
b42nIKsIx++8a9cuvD5i4ueqr69Hk+S5555DrvA3kuYJe8AJIYSQsxdIRwib
22+/HZU7VGIgEEDlDjEGISER/vjHP0KhQZih3occevbZZxEIZYU4InUQAnEC
ZfLSSy8hEciwAbvCEUGEJaQFZMaqVatqamqguFauXAmN9MUXXyDxAwcOQM9A
xixbtgy3QJxAX+EEOcEtONm5cyf0CeLoYZbNzc2QNIgGaYdwyGCoXCg3iEYR
bMj22rVrER/CCapPaxg8EToNCu3o0aO4sbW1Fenk5OTgBFoXT0FmkDi0E4RT
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
hbrQq3A/9dRTkAr4Wl1dbQ6Hw0lNTY25QWEszIW+zdtlsOXLL78MTaKfKAoQ
WsjsvBYlKd3oZiIIwbvYdvDRIBqSNZde1Eqmvr5eP0tZrj9xhyprorR4OMPR
FTKRiMTXD8IvJp3F5ppCeBCEk3Tih6NrIkk/tQaRZV16W6D+1Cv/9BgbAyF7
5lW9zJH5a+AT0ZB5iSOfeLpIRHmuZMa2ZxA+TXms82ZOy9KBZre1eVWnKX5j
ZZiEmJOOKXPS3SytTwghhJAzHOc2jvrEuXWLaL+5c+c+/PDDqu/CkkrZ94WJ
g77RXBxSQrZs2fLCCy+E+25DowWVOWtYy05TcOr8mFpL6zqbetFToW1rXer9
vs23k6eIsISMNPWw85dEygUFBQsWLNArBTmlo7ldjjIEs23rcDP//YaYr2lb
mTPW38Jcm935tzZfx/bXMR9qk5TOh5q/s/nLyNOdGzYpbulICCGEnM30RLf/
cwoGrXNsi5Pj88svv5Q5vzYN4H7bFNPrqKLyUu49evQoJJnZJap9fcpQmLak
zMz36zdTDo3Uryo2bzH36dbKEypRVuk0X9/c41I/KCcnZ9u2bdo/qSObv5Ip
q0zlZv6MNj+tTkR/NSM79aGJKdtMQWtmw/S4OtN0/n37lbiq719N39uvZ9WW
svMXIIQQQsjZgrNz03bJlGGmkrHdaFNH8f1OTkVnC7f5x0yx4VSVpjc11uN0
nm2j+EwlGWfn6369i/0OCLRtFy706wHuV6SZ99oeZybV7zvafg0zk7Yfx3wp
Ex1H74hk/q1tCTp9tnH8mc4Mm8JeZ8+905sQQgghxKRfQUKI55htH846J4QQ
QlIJ09XZrz+NEA9x4+8lhBBCyNkO9SQ5BZgjFvqdT0QIIYSQsxrbIEz2S5Lk
YWu89Du6lRBCCCFnKTk5OUVFRfn5+Xl5eT6fLzs7Oysry+/35xKSBGBg+Myz
0EZIjyUhhBCSGkBSyv6AyrGoESFJIhgMirDktj6EEEJIKgFhqc+pJ0my0esa
5ebm6kCOviCEEEJSg+zsbOWQlKzoSfKQQZUwPNvK9oQQQgg52zGHuqm+ktK2
BPcpzhhJbUyPJSGEEEJSA5/Pp6ITwwVzYxfuFk2SBIUlIYQQknqIx7LfDVB0
oJyYO00TMkQoLAkhhJDUw+wK19LRdF3qEMWtUoh3UFgSQgghqYcWlrLwS0ND
Q21tbX19fU1NTUtLi57DywnjxFsoLAkhhJDUIycnRzsqISOnTZt26aWX/uhH
Pxo7duy1116ro3GHFOItFJaEEEJI6pGXl6fnfYdCof/6r/969913W1tbT5w4
0dLSoixPph57yYk8xCsoLAkhhJDUA8JSXJHy+ctf/nLz5s2q73BKvT0KhSXx
CgpLQgghJPWQBdL1EkOXX375fffdN2PGjD/+8Y+1tbUSyE5w4jkUloQQQkjq
UVBQoB2SOHn44YffeOON5cuX//d///cNN9zQ2tqqY1JeEg+hsCSEEEJSj6ys
LGX0ceuFhgoLC8eNG+fz+bq6uhCixSchnkBhSQghhKQeBQUFciJ6UivMtrY2
CMvt27crDq0kSYDCkhBCCEk9UL/rNSoXL1780ksvHT9+HKrymWeemThxYmNj
o+IwS5IEKCwJIYSQ1ENmhQeDQZwfPHjwd7/73dixY8ePH//zn/989+7dtq0e
6bokXkFhSQghhKQeOTk5cqJ9kvX19ZWVlToE2tLsIifEEygsCSGEkNRDC0vV
39qVOkR256G8JF5BYUkIIYSkHrKOpTJEI4dTklMAWjR67C4bLIQQQkhqkJub
q+eD670dT3emSMoi1hUKhbSrnPZGCCGEpAzZ2dnm3BzU+JwDTpINbEzvJaoX
JSCEEELI2Y6sYykzdE53XsiwQCwtPz9ff6W2JIQQQlID2xhL6RNnRU+SDQyP
qw0QQgghKUZBQYE549u2tyMh3qK7v8VjKYGnz/wJIYQQ4iVZWVmFhYU5OTmZ
mZm5ubl5eXmo8RGYR0gSEBvz+/0wOe0Y5zAMQgghJDUIG1N1ONqNnAJkidRw
dOiForAkhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgiJRdg6IvT0nocHihw/jldZCvf77ZRkgBBC
CCHklBAOnzWaxplVCTmpyyJn0JM9YahK1a1CPaqruyfYhSshkZnhUERwnozc
3+G8GrmlRzlx3BWWmLFSDkc+QtHjZNYl+age7k0EJz3dSicYvdYdOmv+XoQQ
QghJYWzC7CySlDZ69WQ43GPRR9yFe05qs5B1KBXsCUcjIHYwnvaTNGwexRjC
sq+glf/Kox2RTkaIKyytZ1mJdOM4qS2hSEOqu7vn5I2EEEIIIWcMYYvTnQvP
0IJNCGk9GIros6DIt4hIs45wj03mmYR6I0UOLeRsjkyJ1mkdIXVSOpq60bxX
H6E+MtPxDlFhGVLIa09XRF4i16FwqDfDuD3Q1Z06fzZCCCGEnP2YkvLskpcR
/6RFKBTCuQTG6scWpdcZcWx2q84uFehQgTbVfkK1ByJHh3V0Rk8C0UOH60u2
CAG5vU11BSJHR6A3wXbj9jiHTsF2S6Az+rXt5NNbWyOBJzoiV/EK7W2qt3+c
EEIIIeR0ojUkVJnuTT6tORoS4ajXNWS5+Kygk93K4ngMymBLiLT6ZlVVryqq
VXmVKitX5dZRET3Ky04eZWV9vkYOK3KZHGWq1DrKSvreVd7nKLfSrLAOW+Kl
xlFm3VheGTnKjqsy6ySSpcrIUVqhSitVcaU6VhnJdl2taqlVHU0q1HW6f3tC
CCGEkAjd3d3Nzc01NTWVlZXl5eWVZw8VFRXV1dVNTU2dnZ36dURYhmXYpNX3
LcISqrID2jOiKltVXU35zCeWX/hv6y76f1b/04Xp3/+X9IsuwrH++/q4EEdG
9Nh44ckjI3IpEifjwos2Ro4LN33vwk0XfleOjZHDuuvC3gibvhc5cIIE0y/q
PdZHk43c+z174pH8fP9fMy7E8S841n//X9ZehBCc/+vnF/7fG//h+5987/9a
+6//9v7//rejM+9XNaURnUwIIYQQcloR/2RbWxvkmeg0CMuqqqqKswTJ7fHj
xyGM5Y0gki2npUzVOakqQ9a4yoi7srtNtdQemfnQln+48MC3/vHgt//+wAV/
feCCbx244AIcBy+44ND5J4+DF5w8JOTIeZHj0PnfOnj+t6LRzsNxxHFEr37r
yHnfOnbuBUcjd0Uesf+vIgcSRDpHz+sNx9cDf3Ve7xHJSSR93Hj03MiBmAet
7B391t98M+q8sgv+/uDICw7+1d/lXPBXu//hb9seul+1tpxWOyKEEEIIiQAl
VldXV1JSApEGhXa6fZCDo8qitLS0trZWRLIMs+wjLK2+fZmw043/dZ1QtRXL
/vUiSMqGtNE1aWkNI0Y0pqXpo8k6WqInCKlPS6sbEfk0ro5ssg7zxkjMEZFP
3NtqHS2RwEi01sgRuRGJ1I6MpNYYfUpLNByBddYlOer7pqNz0jRihDy9ecS5
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
A4OgD0o=
    "], {{0, 782}, {883, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVWAdUFEuXrp7IDMOQc84555xzzjkMOeeMSkaSEgSUJIIKggomgoiICCJB
BBUwABJEogoqKJJ2eL59/+6e/c+eved09df31Nyprq+q7/2K0zPMyhcGAIgi
ITZWhDjNyEhCgjUF8cE2NCrAL9TH2zA02sfPJ1LBEyI6ZeiJDaCXIYSHB8OI
vUJCoyOt9LU4HBydONAfAA4wABpiBzaCV1S4poWFCfi3tjMJjgOCV6LHsf59
v//VKL19orwAgCyI2Nc7yiuEiDuIWMorPDKaiDeImDsuOpyIj0cJaCKJAyRi
nmPs9wcrHGPPP9jkrz42VtpE7AEACY5AiPQDAHs8Lo5YLz9iHGw+ACiqUO+A
UAAoLhGxmpc/wRsAujliH5GQkDAipscRsYDnf4nj999iev4Tk0Dw+wf/eZe/
DKeurs5hoq1DvKn/P6fk/7aQ4Jj//J/jmccl+mubEe90xIuFg8U9IC0ScAAT
oA10OFhdv/lzWj4FINonPvr4B9ph4QmRAX7+0RyaRLZ8OAxDvcREOKQkJGUB
OOb+T9jvVn9Fhuhe/MvnswKACpEDzNi/fIHnAGjqJ85X7r98fM4AMIoAcPul
V0xk7B8f4rhBAiwgJ64qRsAGuIEAEAVSQA4oAw2gC4yAObABjsANeAF/EAIi
QRw4AVJBFsgDhaAUVIAacBlcAzfBHdAOusBj8BQMgzEwAd6DObAE1sEm2AF7
EAShITKIGmKE2CFeSBiSghQgNUgXMoGsIEfIA/KDQqEY6ASUDuVBxVAFVAs1
Qreh+9BjaBAah95C89Aq9A36DYPDcDAaGCuMDyYOU4BpwoxhNjBXmB8sApYI
y4CdhV2A1cFuwNpgj2HDsAnYHGwdtg0HcFI4HZwTLgpXgGvDzeFOcF94JPwU
PBdeBq+DN8M74QPwV/A5+AZ8F4FCUCM4EKIIZYQBwhbhhYhAnELkIyoQ1xBt
iD7EK8Q8YhNxiCRDsiCFkUpIQ6QD0g8Zh8xCliHrka3IfuQEcgm5g0Kh6FD8
KHmUAcoRFYhKQuWjqlEtqB7UOGoRtY1GoxnRwmhVtDmagI5GZ6HL0TfQj9Av
0UvoXySkJOwkUiR6JE4koSRpJGUkTSTdJC9Jlkn2MBQYXowSxhzjjUnAFGCu
YDoxLzBLmD0sJZYfq4q1wQZiU7EXsM3Yfuw09jspKSkXqSKpJWkAaQrpBdJb
pM9I50l3cVQ4IZw2zgUXgzuLa8D14N7ivpORkfGRaZA5kUWTnSVrJHtCNkv2
C0+NF8Mb4r3xyfhKfBv+Jf4LOYacl1yT3I08kbyM/C75C/INCgwFH4U2BYHi
FEUlxX2KKYptSmpKSUpzyhDKfMomykHKFSo0FR+VLpU3VQbVZaonVIvUcGpu
am1qL+p06ivU/dRLNCgafhpDmkCaPJqbNKM0m7RUtDK0drTxtJW0D2nn6OB0
fHSGdMF0BXR36CbpftOz0mvS+9Dn0DfTv6T/ycDMoMHgw5DL0MIwwfCbkYNR
lzGIsYixnXGGCcEkxGTJFMd0kamfaYOZhlmZ2Ys5l/kO8zsWGIsQixVLEstl
lhGWbVY2Vn3WcNZy1iesG2x0bBpsgWwlbN1sq+zU7GrsAewl7I/Y1zhoOTQ5
gjkucPRxbHKycBpwxnDWco5y7nHxc9lypXG1cM1wY7kVuH25S7h7uTd52HlM
eU7wXOd5x4vhVeD15z3PO8D7k4+fz57vNF873wo/A78hfyL/df5pATIBdYEI
gTqB14IoQQXBIMFqwTEhmJCskL9QpdALYZiwnHCAcLXwuAhSRFEkVKROZEoU
J6opGit6XXRejE7MRCxNrF3siziPuJN4kfiA+KGErESwxBWJ95JUkkaSaZKd
kt+khKS8pCqlXkuTSetJJ0t3SG/JCMv4yFyUeSNLLWsqe1q2V/ZATl4uUq5Z
blWeR95Dvkp+SoFGwUIhX+GZIlJRSzFZsUtxV0lOKVrpjtJXZVHlIOUm5RUV
fhUflSsqi6pcqgTVWtU5NQ41D7VLanPqnOoE9Tr1BQ1uDW+Neo1lTUHNQM0b
ml+0JLQitVq1fmoraZ/U7tGB6+jr5OqM6lLp2upW6M7qcen56V3X29SX1U/S
7zFAGhgbFBlMGbIaehk2Gm4ayRudNOozxhlbG1cYL5gImUSadJrCTI1Mz5lO
m/GahZq1mwNzQ/Nz5jMW/BYRFg8sUZYWlpWWn6wkrU5YDVhTW7tbN1nv2GjZ
FNi8txWwjbHttSO3c7FrtPtpr2NfbD/nIO5w0mHYkckxwLHDCe1k51TvtO2s
61zqvOQi65LlMunK7xrvOujG5Bbs9tCd3J3gftcD6WHv0eSxTzAn1BG2PQ09
qzw3vbS9znute2t4l3iv+qj6FPss+6r6Fvuu+Kn6nfNb9Vf3L/PfCNAOqAjY
CjQIrAn8GWQe1BB0FGwf3BJCEuIRcj+UKjQotC+MLSw+bDxcODwrfC5CKaI0
YjPSOLI+CopyjeqIpiEm2ZEYgZjMmPlYtdjK2F9xdnF34ynjQ+NHEoQSchKW
E/USryYhkrySek9wnkg9MX9S82TtKeiU56neZO7kjOSlFP2Ua6nY1KDU52kS
acVpP9Lt0zszWDNSMhYz9TOvZ+GzIrOmTiufrslGZAdkj+ZI55TnHOZ65w7l
SeSV5e3ne+UPnZE8c+HM0Vnfs6MFcgUXC1GFoYWTRepF14opixOLF8+Znmsr
4SjJLflR6l46WCZTVnMeez7m/NwFkwsd5TzlheX7Ff4VE5ValS1VLFU5VT+r
vatfXtS42FzDWpNX8/tSwKU3tfq1bXV8dWWXUZdjL3+6Yndl4KrC1cZ6pvq8
+oOG0Ia5a1bX+hrlGxubWJoKrsOux1xfveFyY+ymzs2OZtHm2ha6lrxb4FbM
rbXbHrcn7xjf6b2rcLf5Hu+9qlbq1tw2qC2hbbPdv32uw7Fj/L7R/d5O5c7W
B2IPGro4uyof0j4s6MZ2Z3QfPUp8tN0T3rPx2O/xYq977/snDk9e91n2jfYb
9z97qvf0yYDmwKNnqs+6BpUG7w8pDLUPyw23jciOtD6Xfd46Kjfa9kL+RceY
4ljnuMp490v1l49f6bx6+trw9fCE2cT4pO3kmymXqbk33m9W3ga/3XoX+27v
fco0cjp3hmKmbJZltu6D4IeWObm5h/M68yML1gvvF70W1z9GfdxfyvhE9qls
mX25cUVqpWtVb3VszXltaT18fW8j6zPl56ovAl/ufdX4OrLpsLm0Fbl19C3/
O+P3hh8yP3q3LbZnd0J29n7m/mL8dW1XYXfgt/3v5b24ffT+hQPBg85D48Pp
o5Cjo3BCJOGvUgBOvGC+vgB8awCAzBEA6jFi/YT/U5v9bXBi8XFcy9pBujBN
uAKCAYlFkaAlSBwx6dhHOBQZAd9OgaUMphqikaWtogcMQYyjzHIshazr7Boc
BZzj3FgeRV5HviD+EAEXQS0hVqEt4aci5aJBYqriZOIfJFokU6QspTmlP8vc
l82Us5RnkV9SaFaMV9JUxiq/UqlS9VYTUfum3q5xQlNLC6f1Qbtbp0m3Wq9I
/5QBwVDdiMFoy3jEpNm02qzWvMti0QppzWjDZEthB7fbt99zBE4YZ7wLmSvC
ddttwX3Mo4dw17Peq9w71yfB18/Pxl8rQCZQKIgzmDGEPBQe+iNsIXws4kHk
laiz0ckxWbGt8YgEn8SeE+Ak3ymlZMMU59SYtLPppRlJmTKZi1kFpy2yeXNI
c0EeLJ/yjMBZtQKzQvsip2Kncw4ldqU2ZZbnzS4Yl+tXaFWqVSlWS18UrRG6
JFFrXJd+ee6qYf2NhvVGyibe65I3lG/qNJu22N9yv+1/J/xu3L1TrWltme3Z
HXn3CzpLH1R11T+8193/aKpn7vFkb8sT3z6Gvmf9ZU/jBnyfuQ7aD1kOG4/o
PzcYtXkRMXZp/O0r0tfiE9qThlO6bxTe8r7Dv9t9vzL9Zubx7OUP6XN+87YL
ZoumH82XzD8ZLSuu0K/MreauyazNrV/bSPxs8IXkS+NX/a+Lm5e34r+5fTf/
YboduNP76/Tv9gOdo6O/+ZeEI+CriDnkImqTBI6Rw/qTVuHm8ELkcRRPqRip
E2he00nRpzHMMMkyZ7GMsTGxO3AUcXZxTXNv8+zwrvE9578sECmoJkQi9Fq4
RiRQVFb0UOyp+FkJe0l2yWWpZulYGVVZSLZfLlfeXIFaYVKxXMlZmVV5mrgK
XNQY1abUz2s4a/Jp7mlNaN/Wydf10VPRp9T/ZNBlWGoUa+xj4mnqbxZmHmLh
aWlupWwtZMNsi7eD2e3YLztMOj5xanaudMl1TXQLcHfw0CGIezJ4QV5r3hM+
fb6tfvX+ZQEZgWFBjsEaIfyhZMSVMB8+G/EjijPaPaY89nHcm/jFhI3E3ROk
J9lOCSRzpKBSPqS2phWkR2a4ZdpmOZwOyE7Pqc69mdea33bm3tnbBTcLG4uu
Fl86V1lSWlpQlnM+7UJCeViFX2VAVUr1oxrBS9fq+C8XX3l1dbcBf42pkbtJ
iLgO5G+qNeu0mN5yvB18J+vu5XvdreNts+0rHd874Q/ou4QfKndrPJLv4XwM
e7zQO/Ckta+hv/Jp4UDms8TByKHo4ZyRrlG6FyfHZl4yvVJ/bTPhO5kydfXN
i7c/3lNNi86YzIZ/OD/3YP7lwuziwsf1T0gi+6mr4+uUGxKfZb/wfSX/+mvz
09bUt6Hv93/Ubifv2P3k/7nzq2s38bfyHm5f52D1b/7FoHVYNdwNIYhEI7dQ
q+g1kgXMFikWx0umiXciT6W4QTlOdUTDS6tLF0ifyVDDeI+pn/kZy1PWB2y1
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
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 883, "PixelYDimension" -> 782]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{550.88359375, Automatic},
  ImageSizeRaw->{883, 782},
  PlotRange->{{0, 883}, {0, 782}}]], "Output",
 CellChangeTimes->{
  3.771691890937189*^9, {3.771691928138406*^9, 3.7716919396343403`*^9}, 
   3.771713168673716*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"43d3642a-2007-47b1-8ea7-0fa26d476e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetGeneral", "[", "]"}]], "Input",
 CellChangeTimes->{{3.771691264480145*^9, 3.771691268713192*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"29371861-dcf1-4425-81a7-7652da1e46d7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i13$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i13$$ = 1}, 
     "\"max\"" :> {$CellContext`i13$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i13$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i13$121351$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i13$$], {1, 10, 1},
                  AnimationRate->1.5,
                  AnimationRunTime->16.09903621673584,
                  AnimationRunning->True,
                  AnimationTimeIndex->4.650310516357422,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {
                    1.654972841632204, 0.6101274277711493}], 
                    Text["", {0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 5, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.003417442455269204, 
                    0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 4->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {
                    1.654972841632204, 0.6101274277711493}], 
                    Text["", {0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 5, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.003417442455269204, 
                    0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 5->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 6->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]", {1.654972841632204, 
                    0.6101274277711493}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {
                    0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 1, 2, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}],\
 ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     1.2168782299610637`}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.654972841632204, 0.6101274277711493}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 7->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 8->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {
                    1.654972841632204, 0.6101274277711493}], 
                    Text["", {0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"x"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {3, 5, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.003417442455269204, 
                    0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 9->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {0., 
                    1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1.654972841632204, 0.6101274277711493}], 
                    Text["\[FilledSmallCircle]", {0.003417442455269204, 0.}], 
                    
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {2, 3, 1, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, 
                    {0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 1.2168782299610637`}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1.654972841632204, 
                    0.6101274277711493}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 10->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"a", "b", "c", "x", "y"}, {{{1, 4}, {2, 4}, {2, 
                    4}, {4, 3}, {3, 5}, {5, 1}, {5, 2}, {5, 2}}, Null}, {
                    Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 1.2168782299610637`}], 
                    Text[
                    "\[FilledSmallCircle]", {1.654972841632204, 
                    0.6101274277711493}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {
                    0.003417442455269204, 0.}], 
                    Text["", {0.7227929056848804, 0.951872572601179}], 
                    Text["", {0.7227148694544376, 0.2680121122402598}]}, 
                    GraphHighlight -> {"y"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "y" -> "Square", "c" -> "Circle", "x" -> "Square", "a" -> 
                    "Circle", "b" -> "Circle"}, VertexSize -> {Large}, 
                    VertexStyle -> {
                    "y" -> GrayLevel[0.85], "c" -> RGBColor[0.87, 0.94, 1], 
                    "a" -> RGBColor[0.87, 0.94, 1], "b" -> 
                    RGBColor[0.87, 0.94, 1], "x" -> GrayLevel[0.85]}, 
                    VertexWeight -> {1, 1, 2, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 1.2168782299610637`}, {0.7227929056848804, 
                    0.951872572601179}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.1326860466964899`, 
                    0.6277116350098796}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{1.654972841632204, 
                    0.6101274277711493}, {1.245079700620588, 
                    0.9342883653624544}, {0.7227929056848804, 
                    0.951872572601179}}], 0.13677209296266568`], 
                    ArrowBox[{{0.003417442455269204, 0.}, {0.7227148694544376,
                     0.2680121122402598}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227929056848804, 0.951872572601179}, {
                    0.003417442455269204, 0.}}, 0.13677209296266568`], 
                    ArrowBox[{{0.7227148694544376, 0.2680121122402598}, {0., 
                    1.2168782299610637`}}, 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.1325861574346374`, 
                    0.5923709675180355}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`], 
                    ArrowBox[BezierCurveBox[{{0.7227148694544376, 
                    0.2680121122402598}, {1.2451015536520091`, 
                    0.2857685724933762}, {1.654972841632204, 
                    0.6101274277711493}}], 0.13677209296266568`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 1.2168782299610637}, 0.13677209296266568]}, 
                    InsetBox["\<\"a\"\>", 
                    Offset[{2, 2}, {0.13677209296266568, 1.3536503229237293}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.654972841632204, 0.6101274277711493}, 
                    0.13677209296266568]}, 
                    InsetBox["\<\"b\"\>", 
                    Offset[{2, 2}, {1.7917449345948697, 0.7468995207338149}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.003417442455269204, 0.}, 0.13677209296266568]},
                     InsetBox["\<\"c\"\>", 
                    Offset[{2, 2}, \
{0.14018953541793489, 0.13677209296266568}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6021116391429935, 0.831191306059292}, \
{0.8434741722267673, 1.072553839143066}]}, 
                    InsetBox["\<\"x\"\>", 
                    Offset[{2, 2}, {0.8595649986475461, 1.0886446655638446}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6020336029125507, 0.14733084569837282}, \
{0.8433961359963246, 0.3886933787821467}]}, 
                    InsetBox["\<\"y\"\>", 
                    Offset[{2, 2}, {0.8594869624171033, 0.40478420520292546}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     1.2168782299610637`}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.654972841632204, 0.6101274277711493}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0.003417442455269204, 0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227929056848804, 
                    0.951872572601179}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7227148694544376, 
                    0.2680121122402598}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i13$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i13$$, \
$CellContext`i13$121351$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 10, 1}, 10, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{393., {172.384033203125, 178.115966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.771691498339802*^9, 3.771713254813192*^9, 
  3.7717133409457912`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"736de610-5a46-4cda-b544-c1d537e0f74c"]
}, Open  ]],

Cell["\<\
A more user-friendly might come as future work, but this version will \
definitely save out time to input data to make and visualize a Petri net.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 3.7716916207835608`*^9}, {3.771691961129424*^9, 
   3.771692009087027*^9}},ExpressionUUID->"a703ba13-887d-429a-927a-\
173dbd20a3a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Petri net application in chemistry", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.771686688875327*^9, 3.7716867014179163`*^9}, {3.771705002440125*^9, 
   3.771705006164613*^9}},ExpressionUUID->"75fa4bfb-9b34-487b-b050-\
b1aee34505e5"],

Cell[TextData[{
 "Some papers indicate that Petri nets were first invented in 1939 by Carl \
Adam Petri for the purpose of describing chemical reactions. To help those \
interested in chemical reactions, we write another function to visualize the \
chemical reactions using Petri net.\nTo interpret a chemical reactions into a \
Petri net, we need series of helper functions: ",
 StyleBox["reduceParentheses",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontSlant->"Italic"],
 StyleBox["getChemicals",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontSlant->"Italic"],
 StyleBox["getStoichemstry",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontSlant->"Italic"],
 StyleBox["inputTranslatorHelper",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". Then with the help from Wolfram Alpha repository, we are able to \
translate the input into a Petri net data structure."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686705410413*^9, 3.771686774583675*^9}, {
   3.7716920611678123`*^9, 3.7716920719435062`*^9}, {3.771692295392655*^9, 
   3.771692331889851*^9}, {3.771717593909039*^9, 3.7717177505989513`*^9}, {
   3.77171784430481*^9, 3.771717851594963*^9}, 
   3.7717182475266323`*^9},ExpressionUUID->"db5f61a4-b6c4-4855-9a4d-\
4bfca574e3da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "reduceParentheses", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"reduceParentheses", "[", "st_String", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPart", "[", 
         RowBox[{"st", ",", "1"}], "]"}], " ", "===", "\"\<(\>\""}], ",", " ", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"st", ",", "1"}], "]"}]}], ",", " ", 
       RowBox[{"s", " ", "=", " ", "st"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringPart", "[", 
         RowBox[{"s", ",", 
          RowBox[{"-", "1"}]}], "]"}], " ", "===", "\"\<)\>\""}], ",", " ", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"StringDrop", "[", 
         RowBox[{"s", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", " ", "s"}], "]"}], ";", "\n", 
     "\t", "s"}]}], "\n", "]"}]}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"4766af39-e26e-4696-8649-cd3372e43ee7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getChemicals", "[", "st_String", "]"}], ":=", " ", 
  RowBox[{"First", " ", "@", " ", 
   RowBox[{"StringCases", "[", 
    RowBox[{"st", ",", " ", 
     RowBox[{
      RowBox[{"\"\<[\>\"", " ", "~~", 
       RowBox[{"Shortest", "[", "c__", "]"}], "~~", "\"\<]\>\""}], "->", 
      "c"}]}], "]"}]}]}]], "Code",
 CellLabel->"In[3]:=",ExpressionUUID->"7100e181-ce6f-4604-b725-2a4095357ad5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getStoichiometry", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getStoichiometry", "[", "st_String", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"st", ",", "\"\<^\>\""}], "]"}], ",", 
    RowBox[{"ToExpression", "@", 
     RowBox[{"First", "@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"st", ",", " ", 
        RowBox[{
         RowBox[{"\"\<^\>\"", " ", "~~", "number__"}], " ", "->", 
         "number"}]}], "]"}]}]}], ",", "1"}], "]"}]}]}], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"7cc2b2be-af35-47d4-b9e2-cef379a3b4e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "inputTranslatorHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"inputTranslatorHelper", "[", "list_List", "]"}], ":=", " ", 
  RowBox[{"List", " ", "@@@", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"getChemicals", "/@", "list"}], "->", " ", 
     RowBox[{"getStoichiometry", "/@", "list"}]}], "]"}]}]}]}], "Code",
 CellLabel->"In[6]:=",ExpressionUUID->"e3a317be-8b13-4536-bd09-14dfdbbea7f1"],

Cell[TextData[{
 "With the help of Wolfram Data Repository, we define the function \
waChemicalReaction to fetch the reaction and return Petri net stucture.\n",
 StyleBox["waChemicalReaction [",
  FontWeight->"Bold"],
 StyleBox[" Chemical Reaction equations",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ]: ",
  FontWeight->"Bold"],
 "returns a Petri net and its initial conditions."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686705410413*^9, 3.771686774583675*^9}, {
   3.7716920611678123`*^9, 3.7716920719435062`*^9}, {3.771692295392655*^9, 
   3.771692331889851*^9}, {3.771717593909039*^9, 3.7717177505989513`*^9}, {
   3.77171784430481*^9, 3.771717851594963*^9}, {3.7717182475266323`*^9, 
   3.771718291453702*^9}, {3.771718484288123*^9, 
   3.7717185874579*^9}},ExpressionUUID->"81f551a8-0252-4bba-bb70-\
70bd467a994a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "waChemicalReaction", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"waChemicalReaction", "[", "chemicalReaction_String", "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "string"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"s", " ", "=", " ", 
      RowBox[{"WolframAlpha", "[", 
       RowBox[{"chemicalReaction", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<ReactionKineticsConstant:ChemicalReactionData\>\"", ",", 
            "1"}], "}"}], ",", "\"\<ComputableData\>\""}], "}"}]}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"s", " ", "===", " ", 
        RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Missing, try a different notation.\>\"", "]"}], 
        ";", " ", 
        RowBox[{"Abort", "[", "]"}]}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"s", ",", " ", 
           RowBox[{"StringLength", "[", "\"\<K_c  =  \>\"", "]"}]}], "]"}]}], 
        ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"s", ",", " ", "\"\</\>\""}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"reduceParentheses", "/@", " ", "s"}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"s", ",", "\"\< \>\""}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"string", " ", "=", " ", 
         RowBox[{"getChemicals", "/@", 
          RowBox[{"Flatten", " ", "@", " ", "s"}]}]}], ";", "\n", "\t", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"inputTranslatorHelper", " ", "/@", " ", "s"}]}], ";", "\n", 
        "\t", 
        RowBox[{"{", 
         RowBox[{"s", ",", " ", "string"}], "}"}]}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[8]:=",ExpressionUUID->"bb076a98-2802-4aa8-a156-c11359351aef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getPlaces", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getPlaces", "[", "Chem_List", "]"}], ":=", " ", 
  RowBox[{"Association", " ", "/@", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{"\"\<Circles\>\"", " ", "->", " ", "Chem"}], "]"}]}]}]}], "Code",
 CellLabel->"In[10]:=",ExpressionUUID->"12cb881d-2d37-4ed8-8268-cb3baf825524"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getTransitions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getTransitions", "[", 
   RowBox[{"{", 
    RowBox[{"leftChem_List", ",", "rightChem_List"}], "}"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"{", 
   RowBox[{"<|", 
    RowBox[{"\"\<Squares\>\"", "->", "\"\<T1\>\""}], "|>"}], "}"}]}]}], "Code",\

 CellLabel->"In[12]:=",ExpressionUUID->"05565033-d64c-4d1c-b3f2-4e02ff2c560f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getArcs", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"getArcs", "[", 
   RowBox[{"{", 
    RowBox[{"leftChems_List", ",", " ", "rightChem_List"}], "}"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", " ", "right"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"left", " ", "=", " ", 
      RowBox[{"Join", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<from\>\"", "->", " ", "\"\<T1\>\""}], ",", 
             RowBox[{"\"\<to\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<numbers\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "}"}], "&"}], ",", 
         " ", "leftChems"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"right", " ", "=", " ", 
      RowBox[{"Join", " ", "@@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<from\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"\"\<to\>\"", "->", " ", "\"\<T1\>\""}], ",", 
             RowBox[{"\"\<numbers\>\"", "->", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}], "}"}], "&"}], ",", 
         " ", "rightChem"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"Join", " ", "@@", " ", 
      RowBox[{"{", 
       RowBox[{"left", ",", " ", "right"}], "}"}]}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[14]:=",ExpressionUUID->"5874dcdd-3b71-4e69-af45-9b47d4c316c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"buildPetriNet", "[", 
   RowBox[{
   "reactions_", ",", " ", "chemicals_", ",", " ", "init_", ",", " ", 
    "steps_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"places", ",", " ", "trans", ",", " ", "arcs"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"places", " ", "=", " ", 
      RowBox[{"getPlaces", "[", "chemicals", "]"}]}], ";", "\n", "\t", 
     RowBox[{"trans", " ", "=", " ", 
      RowBox[{"getTransitions", "[", "reactions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"arcs", " ", "=", " ", 
      RowBox[{"getArcs", "[", "reactions", "]"}]}], ";", "\n", "\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Places\>\"", "->", " ", "places"}], ",", " ", 
       RowBox[{"\"\<Transitions\>\"", "->", "trans"}], ",", " ", 
       RowBox[{"\"\<Arcs\>\"", "->", "arcs"}], ",", " ", 
       RowBox[{"\"\<Initial States\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init"}], "|>"}]}], ",", 
       RowBox[{"\"\<Steps\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
         "\"\<Input the steps you want to animate\>\"", "->", "steps"}], 
         "|>"}]}]}], "|>"}]}]}], "\n", "]"}]}]], "Code",
 CellLabel->"In[16]:=",ExpressionUUID->"e66ab582-81dc-431d-9ecc-ba05abcbf1bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TranslateFromChemToGeneral", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Reactions\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"<|", 
        RowBox[{"\"\<Input the reactions\>\"", "->", "st_"}], "|>"}], "}"}]}],
      ",", "\n", "\t", 
     RowBox[{"\"\<Initial States\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "init_"}], "|>"}]}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<Steps\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
       "\"\<Input the steps you want to animate\>\"", "->", "steps_"}], 
       "|>"}]}]}], "|>"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "reactants", ",", " ", "chemicals", ",", "input", ",", " ", 
      "inputPnetData", ",", " ", "pnet"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"reactants", ",", " ", "chemicals"}], "}"}], " ", "=", " ", 
      RowBox[{"waChemicalReaction", "[", "st", "]"}]}], ";", "\n", "\t", 
     RowBox[{"input", " ", "=", " ", 
      RowBox[{"buildPetriNet", "[", 
       RowBox[{
       "reactants", ",", " ", "chemicals", ",", " ", "init", ",", " ", 
        "steps"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"makePetriNetFromInput", "[", "input", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellLabel->"In[17]:=",ExpressionUUID->"f3aab129-0579-476f-baaa-ecc28462c086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriNetChemistry", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriNetChemistry", "[", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Reactions\>\"", " ", "->", " ", 
        RowBox[{"RepeatingElement", "[", 
         RowBox[{"CompoundElement", "[", 
          RowBox[{"<|", 
           RowBox[{
           "\"\<Input the reactions\>\"", "->", " ", "\"\<String\>\""}], 
           "|>"}], "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Initial States\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<e.g: 0,0,1\>\"", "->", "\"\<String\>\""}], "}"}], 
         "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Steps\>\"", " ", "->", " ", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Input the steps you want to animate\>\"", "->", " ", 
           RowBox[{"\"\<Integer\>\"", "->", "5"}]}], "}"}], "]"}]}]}], "|>"}],
      ",", "TranslateFromChemToGeneral"}], "]"}], "[", "]"}]}]}], "Code",
 CellLabel->"In[18]:=",ExpressionUUID->"e6e6ee49-501b-4fc5-842b-e72091247f20"],

Cell["\<\
Below is an example of visualizing a chemical reaction with input and output. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771687014914322*^9, 3.771687023342532*^9}, {
   3.771687224539585*^9, 3.771687278797526*^9}, 3.771687519083227*^9, {
   3.7716889458350773`*^9, 3.771688985991187*^9}, {3.771689068518587*^9, 
   3.771689081282505*^9}, {3.7716891757929983`*^9, 3.771689350145054*^9}, {
   3.771689499568481*^9, 3.771689533564932*^9}, {3.771689731177801*^9, 
   3.7716898222415457`*^9}, 3.77168985424896*^9, {3.7716901461185904`*^9, 
   3.771690433211678*^9}, {3.771690629474565*^9, 3.771690651020948*^9}, {
   3.771690954606805*^9, 3.771690979000608*^9}, {3.7716910122980833`*^9, 
   3.77169104628679*^9}, {3.7716911362355423`*^9, 3.771691251616454*^9}, {
   3.771691521563776*^9, 3.7716916207835608`*^9}, {3.771691961129424*^9, 
   3.771692009087027*^9}, {3.771692403940859*^9, 3.771692432181847*^9}, {
   3.771692663538357*^9, 
   3.771692665716091*^9}},ExpressionUUID->"119293fa-c0bd-42a0-83e5-\
9e0335957ed3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/luzhiryou/Documents/GitHub/WSS-2019/Final Project\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<ChemInterface.jpg\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.771692626775058*^9, 3.771692630166587*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"37c0e1ee-0362-4af7-a501-dddadba982ba"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4FUearz+7O/fO3NndCbuzO3v3Pnfvzv53dzbMeJyNccbZHiec7bHJ
OWMwyeRowCbYGGObnJFABJNNzhkEiByFiAKhHM+p/3v6k8pF95EQQkIa+N7n
PE2d6upKOny//qqrqn9dt1XNhn/+gx/84IMfc6hZp8NjbdvW6fTqz/nyessP
mjRq2aD+sy3bNWjUoG21un8RSfZnP/jBG6SPhI2iKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKMqNIlzZFVAURVGUiiN8hdKFvE9hfG4ozDEUNoXH
yLfCYyhUmCw3N5djQUGBG1mYQ7hUEhr2CKaXPK+ala8+hc3wvtpsJSAZupH2
VJlxK5+fn19CSl8N3cpfKzYre7nbCdLMkiujKIqiGJ8CenbUBgsc+YvEFET0
0Rpba2OtHXZ1x5RCFFwBcq8t8JB4AleViby8PI7Z2dmSgwRcOZCvVjh8NS+z
CAYvLI3uSJU4RtXEUiLXcvSJoERKh0StoaIoimIp8D5XeoIRPMGwngWffJOf
Y8L5oYKIdXW1Q8y+tec+HSyOoD6K2PkiS+OpBc+6AurqKZlbdbDyUWaZsA0v
ZZNdr9YU4xVeFSnFVXlffUyp/wSKoii3OFYBiwgFn/+FQ/loX+HHRLeuNkbs
sKs7JYAeuUOUQm5uLpGhIkrOwXpDbtFR6+ZmJSmJjzp+Wxp8pVhhveolHK9z
iNKtbU5OTtTBZ5U/RVGUqxJ4DojMhYoeCIaKhAxZzDMFueIDuq6fa2kxxRhk
45j6Esr1DXvaSNd9M1cO9F2lIR6uErnPKG2erpt5/Q8BrZxdVfFd3+06KyBt
9D3WlFM+eVUdVBRFKR2h7x29cH7E7wsmMN+7G77ZJiaa8JVsgcVWc4yJifmn
f/qnqVOnuqdcp7LkfEow+xKflpaWmppq4xs0aDBq1Cg3hzIohVxy4sSJO+64
49133zWlEGufi3r983Bc788VRLeGiqIoSrEUzn6x8pdnRzsjHpMxP/v53/zg
B3/+Z3/+wx/9+Cf3Vau+aNEiE5igIl/FN8Hzqlev3tq1a0u2wFZACfTu3fsv
/uIvOIoZR1Z++MMf3n333eJkvf3223//939fbPW9NBRaq1atDRs2mCuVZc2a
Nf/93//9Axrw539+7733JiQkkJKy3njjDd+Dy7Jx4MCBP/uzP7v99ttLkw+V
qVOnjvSV6+2WgR07dtDD69evT09Pl8Zevnx55cqVFHHw4EFJI6WUuQhFUZRb
htAVPqA351Omg/7lz/7mt7ff9c24iR26dPvl3/3qr/7qr86ePWsvC05cOXr0
KIozduxYc7VVDO7ZM2fO2K8oILJCJsuWLePryy+/XIICSlZHjhxB48aMGWMc
bT106NCPfvSjv/mbv/n444+HDBnyb//2b5s3byaelKhqydUrDdL2ixcvivRf
VW6oBo3KzMy8nkKNV+3f//730kU0XCInT57MVyK5/VDvT1EUpTTkezKXXxAO
2dn0BUWzJcORUz/56S+eeu4FmS3To2dvbOyKFSuwsfv373/sscd+/vOf/9//
+3/79+/vXRl64IEH/uVf/gVTTORvfvOb//zP/1y9ejWnUlNTf/vb38bFxX3y
ySf/9V//9T/+x/+IiYkhk9tuuw0f7T/+4z84in7hGaGw5ICn9swzzxDzwgsv
/OpXvxKPBgfnqaee+su//Mtf//rXffr0kciHH36Yr1zyv//3//7d7373r//6
r+vWrSMftIDaLl++vKhhhesjiHzllVf++Mc//vVf//Xzzz+/adMmSZCRkdG8
eXMyQTRfffXV8+fPE/nmm2++//775ImjN2jQoL/927/FVyW+Xbt21BlVpV1v
vfWW5CD16dat2z333PM//+f/vOuuuz777DPiV61ahWb98pe/pJJ0C+0lgejU
zJkzqfO5c+eozy9+8Qu0nr567733HnnkEfuktVWrVtWqVXN1jdwGDBjgrkaU
wGuvvUarbTKVQkVRlBLINibLmNwiKczNK3pKxddQ5PPXP/35M88+L/qIqceG
79q1Ky0t7R//8R8RC4TgxRdfJHL8+PEY/7Zt2/IVJ+vxxx9v1qxZy5Yt9+3b
h4uUnZ1NGgQRXUN03nnnnZ07d5JhmzZtMO81a9bkkqFDh0rRx48fJ/G7777L
MT4+Hqv+d3/3d8RfunTpH/7hH9CRDz/8EAnj7MSJEymUUl566aUf/vCHqEaL
Fi3IMyEhgfTI6//7f//PTha1T8q4kMT33Xff66+/Thixk9V5KB3VQ4lat279
k5/8hDxJTDIU84knniAlOvvv//7vP/vZz0g/YcIEak7RP/7xjx999FHUSvL/
8ssvyYQ6jxo1iqw4RfyePXtIidKRSQsP+k1q9fXXX0vPoH1UQB4pcjNA5IIF
CwhnZWX9r//1v5Bm47iZqoCKoijXz2Vj0nB/PB3McVfBFwkHDtGv/v6Xr9Z8
+Tf/3z//2Q9+UL3a/Sgadh4TjU+UlJR06tSpn/70py+//LJcsnTpUhFE4yw3
wK8hErdo4cKFwbUAGzdu5OyIESPEhzp58iQigl+Jna9Vq9Ybb7whPiCFIkYI
JSWiklQMtZUcFi1aRA6TJk0yRRNjpObolyRwF4yTskaNGqJ6d999N26d8eRV
4hMTE6kAXhiinJmZee+99+L9oeBUnvy7du2KA5ucnGyfsuHt4vlaJcLJJZ/6
9eujer6i69atS/25eTDOQzoRO3xMKmCFjOKoPCpvvOFNil6/fr07yqoKqCiK
cv20HzCqbd/PO/T/PDVsMsMRTzAvv3B9RGRyYyj/5z/765/95Y8fe6j6s088
OrBf7/S0y9hV/CyEQB5FoVYcq1evLhkuXryYr7hI7hR9zD6R8vTNBLaR2bRp
E3IzbNgw+Xr06FHy7NevH5n86Ec/QuZQQOJxzaREEv/Aw0rP8uXL+Tpu3Di3
afhr+IBuWRImJaoqM1KoEl+NN03F5mzzP3PmTLVq1ZDRnJwcvs6aNUue5Z07
d07y5GYABcT3tA4m4oVviAtJMiowevRo28w6deoQySUkto8Ov/nmGyJjYmJs
tSWrbt260XZuMGj+f/zHf/j+aqqAiqIo18+h5IIT6ebYxZxMbyw0M6/weaDs
gcbnFz//6R+eebJwiUReNidM0aQO3DTUCo/pyJEjdnoMYoSCYJ9N0co17HxW
VpZ4RnY7NXexAwqI5KGAxrP/6A6J+/bty1X/5//8H0794z/+I+mHDBlCPDkf
OnSIQk+cOHH69GnJQfRr8ODBxlmc/s477/zwhz/E65Q0OFnGG1SkejLYSJ64
rnhYnJWh14ceeogAOR87doxjbm4uTiLiTgLOzpkzB10mcOHCBbtaHwW8//77
zZW74nAhvtt//ud/knjbtm2yoKNJkyY//vGP9+/fbzuflPiA1Gf+/Pnmyt11
aBpy36NHD6r3+eef+7Z5UQVUFEW5fhp/2LNhu+4NW3dKzTM53n4wnoKECvJz
ZfXfX/3VXz337NORwdGiFYKIFMKHD/jrX/8aA7569eoOHTpYw37q1ClM929/
+9vY2Ni5c+fu27fPeCvy0ILGjRtLGp8IooCcxc7L0zSkB1Ho1asXpwYNGoQC
/vKXvySckJBAZf75n/957NixSF6XLl2QQus2Ii6/+c1vpk+fjk6hyORz8OBB
sv3pT39KVmROJgMHDiQxGb755ptSAQLiAxJ++OGHUUzasn79+hEjRkycOJF4
1O3OO+/kLI2aN29ez549SW/lnvh/+qd/4kJTtD0ajmrNmjVRtM2bN7/11ltc
tXTpUjlLHbiWSGJwV6UT8AFpLI6z/YvYVRKkpD54gtwSuFvfGFVARVGU8iAz
HHn8l5kXFrPryVyh9xfZssx4M2H+8FLhPJmiLdMwrfhWiJGMFv7bv/0brp/d
xQXfUIYrMeBfffWV8Var8bVhw4bhoi1ZwkUby3DVhg0bSD98+HCpEgpIYrwt
ufAXv/iFzIQx3hArioNkoGL/8A//8N1339mG4C79hQdnrdO0ZMkSZFEqgyuH
JspzQDse+8Ybb3BWKoPf98wzz6A4JEBqO3XqRCQ+4IMPPig+IJqOZ0r68+fP
W+n5l3/5F/EBBdT5v/7rv2QclZsEBFEe+XHEMSQlfcKpn/zkJ9wqmKLngNTT
3Stb0iPEMlHH9pUtRRVQURTl+hFds0shvBXxHAvE45MFEXneEQ9R1kS4u5rg
DblDgnZbmJycHIQsNTXVfZVPCYvQg/tzhgObeVp7TqG4Rb5I422SefjwYbvg
zl570cMtKOxsYuMOMCL6XH7y5Emfz+W2wsqNzcpVKEmJz0smssGp+zzUeMOb
1F9OuZfbgmxZw4YNQ0nFhbSJ5ZQqoKIoyvUTeCuEf2fs8JUfpdwJvsJp/vz5
v/3tb3E2n3322eBLnYhBAX/1q1/ddddd3GZIDEL5u9/97qc//SmOtt2kVPeE
URRFUaos7pubrGu5aNGiBg0aDB061G6d6rtqypQpn3zyyeeff56SkmI8pUtI
SBg5cuSQIUPkkaJqn6IoivKnQnAo1TdAagIjw76hWnH93Et0FFRRFEWpsvje
KCFr+X1pfLpmHGmzT1fdfbZlPYjKn6IoivIngftmQ/H+3PcAmiJxdF+x5Oqg
BIKvrFIURVGUKovrvlmNE3yTTm0aN4FP6Xxr5xVFURSlihPUsuCbp4pbUeJq
qLvcUnVQURRF+RPCne4S9AcFu5zQfW6o8z8VRVFuAO7CcOMYarsi/nq8D9f4
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
A7oiWOYd5kuP/s4V5ZbC3l37bs4tvjtkRbkefL+9q8pZOJoeXU+hLr4bvxJS
KopyU2JXE2zfvn3Xrl2bN28msMVj69atvsA2RbkO+GnxW7K/MQI7d+6UVZkl
/0Tt7VliYmI51uf8+fP2XV0VPdNGUZQqC//3MU3u2jpd+KaUO77XKEsMalhc
evcHScrjx48fOXLE7p1beorzDRMSEhDB4kY/FEW5dZCXyVpuyi1QfFbOfSdg
GbKSgLXk5VHBQtyVAqW8IXEXs5TZnfGV5e7MYK7cIUEq5tuOoGSK6yLfDy9q
lSSA11a+IiV5BstSFOVWwzVE1rLZ2++baTPM4NOoMmTim0YbzPY6Ce7MU0I9
bQI3TZm9eLsINGp9zJXLSH1vSTbOjGLfwofiUAVUFKXS8Rkiaw1uJu1zpcTd
e61s+bhust0Frlywvphb4ZJndFgNklqVYajQluiKjts/PuHzbcEnJfp+La4+
Fld/VUBFUSod1xD5ntfcfO9EcM319fiA1y+mJXOtPt31P729quNm56UEdc0d
NfX9WrKzs4srURVQUZRKx2eI7Nv95OtNYxzKZQjUNf4VMXHI52P6HK6o6X0z
/6+zPm5W7g5mFhuTk5Pj+6m4SBNKvndSBVQUpdLxGaLTp09nZWWJ7SrbkFoV
JHzlHiDXv9OINftXFalrxcrrNdXQ3eG8DPXxPdz0vS7EnrVVcptvqx2scziw
9YqLKqCiKJWOa4gwBY888sicOXNMtGdef7p88cUX8trioBN3TVh7znHz5s3v
vffe+fPny7GeSUlJVDUzM7N27drfffedfWdiCZdYT41kq1atmjdvXplL9zn+
ZMu90O7du+2Lj60s2hkve/futcsKhIyMjPj4eFOKwWFVQEVRKh2fIapRo8bs
2bONc3t/EzwH/Oabb/r16ycNQWJGjRpVtnzcCSrY+SZNmpw5c6Yc64nwxcbG
Inxt27ZdsmSJuZqO+KScyjz22GPHjx+/njpIifTVmjVr7rnnnocffrh69eqb
Nm1yH3pSYnJy8iuvvEJxd95556BBg8QHHDFixL333vvoo49yHzV16lRTokOq
CqgoSqXjM0TYrgULFgSfBvpm5gdlMTh1332oZIoZ34s6XdBOsHTz9OXv7jBp
AnN4isuZZN26dfv444+D+QczcY1w1Myj7u7lK9etXslLsJctW/b0009bn86n
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
kpOT7UoKhLh58+YdO3a029QULVT0LAzSE8r/dt6c9u1ar1u7euMGDmsO7Nvv
XRsxS8hZu/Ydunbt3rljlwnjJkbSe08M83MLOIbyw8uWLh888JOIuQqbj/sP
XP7dCmvTFny78LNhn+flRNxM0ixZtFQkV3Lgs3L5qv59B0g+lW+j9VOhnyj4
HhTmX/lRBVSUG40shcA7Q3G++uorAosWLapVq9bRo0cRjri4OFyqM2fOoIBE
yqTNWbNmIYt4ggkJCagPShQbG4sCNm3atHv37ps2berUqRPh7du3o4bo16BB
g2SzFHkUuHz5ci4fPHjwggULBgwYwOWUQnyXLl0QwTVr1uBycrZJkybr16+X
GTJff/01CfA0qeT48eNx05BOJPvDDz9csWLF2rVrEUQq9umnn5Jm79697du3
l8eXV8y69Ga/yLPBfQl76tR9b9fOrfl5WWdPn+FUVmbe/G8XZ2Tmnko606Jl
a46pqeliytJT0+bPW5CVkSmqd+pkUotmzRP27Dt9KqlJo6ZcnpOVu2jBwpSL
l88knSbmyKHDSYmnG9ZvcP7shfzcvIXzF6WmXObCgrz8tavX9e7Zywqifm7m
jyk6OsGwXwTdj6IoNw53cxXCiAsKYopmwiQmJooCEn/8+HG8LZkJQwK8sLZt
26JcKJ2sd5gxY4bxHEZUCckbOnRo7dq1d+3aRbZ4hcSI0yekpaUhtS1btnz/
/feRPHEAiUfv5MlgTEzMvn37SMCFSCQO3dixY6lMamoqYdJ89NFH5IzU8pXq
yfQYfMAxY8ZQARIQj5K6M12NmKVw4fAj0YuWzG/YqG7rNs1btWqFb3v40PEG
9Zvs238wJze/XqPG9Rs3at6yRcfOHVauXnX4aOSB4P6D+7gwP5SHSxc7K6Zh
40ZNmjWOmzO7IJx/IvFkg0b1V6xaSXjW7Li69es0btpk9tw40h87cbRRk8bL
VnyXdOY0aerWr1evQd36DRus37jOM5MhPd6kx6L/ZUWfAudYnGAqinLDCO78
aU9Z1fCNXrrbZaODdkcXyQ3S09PdSCE5OdkOSNo9P8kBRfMtPMzJyTl79qwp
ejR5+fJlm7MNXLp0yS4/lK9on60YV1Gc3X3liv3TwoUK6D2V40ReXkF2Smpy
4e132GRkRLL9bvmyT4Z8mpp++XJa6vzFi5o2b5YXDqVnZtjhzPxQpGvSMmhq
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
Ab4hp/LCoXDhlZF/UUkJi95FFrZ7Z224oGgVvYRD5vvNX/R4Cx75ueSZMJ/8
iBSG0oyZuTuve8zBSRvPH8sx2aZQ9yI+oCqgoigVDDKXZcyRdDNl0zkUcE58
KoJYkJ+bL89qvNUQYogiouYZp/z8XHmck5ebbb5XyZAbJk2oIK/okU/IWyHx
fbICOaWfW+8TCueETG44Ms4eGV9AAafvyOgdd3jSxrMoYJYnkd4vRhVQUZQK
BxsTmQuabWZsSe4VmzArPivNi8mWT9i7ac8vvHvPxXgVeANZYZMXKjRWfHLy
I185RhKHCk/ZNHKJBPJC33/Vz635kZsrhJBbolRj4uLz+sQdnIwC5poMb4y0
wIQKnwOqAiqKUpFga5C5k1lm8vpzvWIPx+03SQXmsjHJ3ifFGAQxs0gNs70w
n9SCyDEtVPjV95H49PD3R5tSvurnVv5kO5/zIfNtguk5Y/+0DadPeD6gKqCi
KDcOz2U7k2WmrEnqO/Po1F1mwe78BTvT5+3OjduVPWdX9qK92fO2Xli6M2Xx
9ouLtiUv2H550c60hTvSOc7flrpwR+qC7Wk2zFHOSthLnPHt1kvEzN+WQtiN
IY0eb7XjtzsuLtp1eeH2y8vjsxdvSV28KzRjh+kde3D6+tOnsgtHQSMPoHUm
jKIoFU1kcBN7Yy6km6XxqX1nJHSbtn/QzIMfxyZglLrPPNpt1jGO+Ia9YyKf
XrGEj/acebRn7DE96vFaj91nHus+62S3mSd6xx7vF3P84+mH+0w73D02sW/c
sSX7MhMzIsPvBWHviSHHkIqgoigViShgODL180S6Wbg3d+rmtOnrzk9dc3by
+pTxG9PHbMrgQ4DPhA0Z473P2I161GNZjmM2ZX21KfubjdnjN2RN3ZA1Y33m
9PVpU7bkxG5PP5ZRNARakFc4e8pbhaooilKBhMJhb05CpjGncs3xDHM63VzK
MmfTzZkMcyoz8iHAR2L4JOlRj2U9JmZFPmczI8MOyanmfJpJ4muOKXo1SL63
VCJyb1bgaaCiKErFIavzwt5av3RvckJ+uGhRVth4i7a+X8wVDhvnpH70c20f
byJokdh537n7yvF+e6Yg1xRkFa4U9BajFhQ+E1QURakovHfahkLh3JCJrHl3
rFNBZHfQQpMUWcmOMuYXrpPXj37K8sn/XgFDVhdzRQG/XygfKtqISBVQUZQb
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
ZeKm1eK/fqs6lHUoK7tiTm4Y6ub1VWVnHssM1GX4ji67TER6Kh/+1e8u+2T5
pz/1bm7miZzMZl+oOZR9eO6cdxbNf21J/t4lBQfmLCjLW/j6skX7P7WsfE5e
hT+nIjDneO6lb8+dt7Wo6Hdf+oJobozecOOehYuOZ2Y3wYR0yy5Ic6ahba6S
fPvez4MC9ihrdzyupkNYt52wRsNOWIUsfwzDMAbTHwlTXV29cuXKZ555Rg/y
jCgLrrKy8rHHHluzZs3VV18N2xDJKP1dd90FCfvRj3508803P/DAAzU1NWQM
7t69e/369VddddXatWvfeOMNiB1K2LhxIyRv9erV27dvp2Jvuumm87UBrWbf
Xihbd41Z5g8NjBweFM0tOxfn14RCeladGl6CIIdZ9lp2lqc5I/P4F/+dOHVQ
/O6J3xXl75q3uDw3v86fU5WVK+79hXj44ZP+rIZQjvjOt8WuHdVzcw4tXS7a
+8SxGlFaIqpOiN2vNH718hPZ85N//VWx93Vxz3pRfVRUVoh1/2/kllvF0RJR
fURseqI0r6A8c7746c/Fk08d+PJfi7IDoqNVlB8RO3cNf/bftwUyu+yRonpZ
GFv+ZMclKnxgLilgjBQwrsXOUsAEr4fGMAwzJdMfCfPee+9df/315eXlFKPt
vrKysnvvvXfv3r3vvPMOLMRnn32WxnZCLqFiW7Zs2blz53XXXffiiy+ikPff
fx9K99BDD+3fv3/z5s1vvvkmLMRbb711w4YNpaWlv/nNb6699lpcAiVTP2Dq
cFB93SkUUGLYgJPuU48FHRLh8LaCwtpgSPkSISL+QStIG5AWXTntcje7fOUL
F4rdxaK1Qux/7eR1N+0p+Ivq4NwjOfPEW++L4l3lgbzK7EvEz+4VdXXHFuSV
Fi4SHVER7RX33SvuuE3UnRTlR98q+KT43zeIxjpRczy+4Ufi7TdEe5tobhLP
PCFe3SZqG9/98td3LigQv/6NePW1rZ9dEd30iIi0iqf+Vdy0qmvhkg6X57TP
GlczbPf9RSdG78hANqDeynBiz8Gz7vnLMAzDSKbfD7hjx45rrrnm5MmTeg47
SQ8NCoWJB4n8iYKcmdAyyB/NboBt+OCDDyIe1iIMPRoGg1zd3d1vvfUWij1y
5Agia2trYTCS8xMKuG3btiktPkeFUxTQ3I3Wueu6XBWtNVJcKBWw31JA36AM
Hu1mlONhPP52V0ZVMLvsk58QTz4gGipEQ4t4/3Ds7/7+9YX5ouSg2LH7RN7i
Q5nzxjY9JVraSublVXziMpTc/KtfvZi/cHv+wvqNG0Sko/Lr/zByzUrR0rTt
2//tucuWdK1aKdrb31x726+XFZ76p38SDeHq76/evHSpeO45sXvPU8s/vhWR
Lc3d11y3b/7i1sBcaeh55KT7fnv8Z7+1ktuEI3SfpYB07wlj/U9aH9uwiHmH
XIZhGINpKmBnZ+e+fftgvh04cIAGc9bX13d1dUF66urq7rvvPgjWT3/607Vr
165Zs4ZsQGgZ7L5oNAoRfOCBB2DlQQqhjzAYqYSImiVRXFwMC/GWW26Bgblq
1SqU8/zzz0Nw8RWnptS7P1UBw5YC2t1q9ugXj9Ut2C8nvCOEmrzBE8HsktxL
9hYuT95+p6ioEuVHfv1v/404ckC88eqhvOwjOXOGH3hSNPWUXlJwrGiZaAm3
bvzZvrm5pfPnVf/Laihg4z//88j114nm+h1X/O2bixZ1X/F3oqG17Job9ly6
sPHznxf1TXXr1v32ssXi978Se17/9dJlr/7jN0Rtlbj2xsPB3FZvqMcNIXb1
ZLi6vLRim2dATgz0d7kDCN0uf9TlcyhgkhWQYRhmekzfCwoDDQq4adMmckJC
E2n+++OPPw6zrqKiAqr33HPP3XbbbWTfQde2b99OTkvkuueee5DrF7/4xR13
3KFLwMFrr7121VVXQVgjysNJU+apHxA2oDY2I7b/M9UvOn0FlCgF3FZQWBcI
2d1qyvSzV8ZW1pZnxBXscGXU584XX7/i/exLXrt0yVPLLhPPPC1qa1/4j18R
R0tF+b7tl2bvWHzp0LNbRLjvwPzCY4XLRbi16ef37l6UD4EbeuAR0RI5cPmX
Et9bKRrr3vybvymZkxf/+jdEXbj821eXZOW1/+VnRGNj+e2rn/n4IvHsL8Wu
nZsv+9hb/+XvRd3JsRuv2zdvXq032OOVEyg6XK4uj5wXTwrYq2bHqwW9fak2
oOHzZAVkGIY5F9NUQHJswjq78sorf/vb35aVlb399tvQss2bNz/66KNQvcrK
ShiJ3/ve9+68806SJBzDiMMBDDrYgDD9cPz666/DuEMJJ0+efFUBYb311lvX
rVtXUlJSU1MD1aMhozfccAP0lCYbRoxFRKfRDziVAuqesJFJCkhbHUVt+dM9
bv0ud1tonrhjrThZKYqLT65b17DpUbmV/HsHni1a3vvLx0VXa/d9P+l5cpMY
HBJtXWUL848vWSraI5DI2vX3dP7054gUb71TvPSy+DXXiVN1JV/7TwfnzBv8
ytdEffjE1deXz1sU+fRfiYaG6rvveqroEvHcv4o39jxb9LFdX/yqaKgXO58L
r/xO45LlXd6sHjmd0Ns31XxA6haU/YDRHj0O9qwKaD8chmEYhpi+AlKyl156
CdbZtddee80119x3333QrNLSUtiAEKxVq1Y9+OCDZAMi5c0337xlyxZa5gUK
uHHjRpoc8fTTT69cuRIlwKJ84YUXkGD//v233347LEEUsmbNmqqqKmSHYsKK
pMVkzKW2U5muAhqropEC6ikG3fZ+Q1oBB12+lkDWu/kLxYP3ihPl4lSNaGwS
b7/TevnfvjVvUfl//oZ4901ReUScPC5e2yOqa4/l5lbNz4P8ydGeja2irkW8
8/7+//C1vXMvEf/r/4ijFRWfXXE8Mzv+pS+LisrIt/5HVVZua+ESUXEifP3V
u4sWiUfuF8Xbd16Sv/3SJeI3z4raw6K6THzrv0MBT7t8p40Oyj57KZhhu1vw
HAooWAEZhmHOznmtiqbXQIPFR7P8aI2XxsbG48eP03R4vQI2mW90VsuonjZI
6SPKF0pLZMN4gp5G1NxDmmqBq9AkQdMGjKQsmp2qgNatTVcBrSEl9g62UmJO
u9zdXm9j0F+V5S8PZTQWFdQtW3oib15zZl5zRnZ1IFCVm9lSuBjCB2vueCi3
3evr8Lkrs0Il2VnVBYWnipYem5t3IhCMZITa/YE6f+YpfyAS8DV4XSez5U7x
rV53NBg4Fco+Ecisy8hoDGY0ZmbLHeozciuDubVFBW0fW9ogx8BI+RvxyB0M
OzyeLo81BqbP3mm3n8aCGgooWAEZhmGmx3mtjK1Xw6ZPvbqLhnbr04t/6mnv
jkLMvZb0ujG6v0+vm226QPW40+n0A1q3Ni0F9NgT4T1qRz/aBxAq4yavo1yZ
02Otb9YpF0BzS7ekz0srVw/K3Y58A/LTQ2baSIZfbmnklgtf97s9g/aaZnJ1
ULXbERl0/W5Z5rDbOyD3jPCrXZZ83XIfimDUFej0ZrS7vb0+P+211KOuDvnr
cvu61Ma7vdb8fV/f2RTQXgmOFZBhGMaB3iAeB+a+ftORwo8CplZSjH1H51LA
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
wzAMwzAMwzDMhcH/B7aj7lk=
    "], {{0, 371}, {598, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVWAdUFEuXrp7IDMOQc84555xzzjkMOeeMSkaSEgSUJIIKggomgoiICCJB
BBUwABJEogoqKJJ2eL59/+6e/c+eved09df31Nyprq+q7/2K0zPMyhcGAIgi
ITZWhDjNyEhCgjUF8cE2NCrAL9TH2zA02sfPJ1LBEyI6ZeiJDaCXIYSHB8OI
vUJCoyOt9LU4HBydONAfAA4wABpiBzaCV1S4poWFCfi3tjMJjgOCV6LHsf59
v//VKL19orwAgCyI2Nc7yiuEiDuIWMorPDKaiDeImDsuOpyIj0cJaCKJAyRi
nmPs9wcrHGPPP9jkrz42VtpE7AEACY5AiPQDAHs8Lo5YLz9iHGw+ACiqUO+A
UAAoLhGxmpc/wRsAujliH5GQkDAipscRsYDnf4nj999iev4Tk0Dw+wf/eZe/
DKeurs5hoq1DvKn/P6fk/7aQ4Jj//J/jmccl+mubEe90xIuFg8U9IC0ScAAT
oA10OFhdv/lzWj4FINonPvr4B9ph4QmRAX7+0RyaRLZ8OAxDvcREOKQkJGUB
OOb+T9jvVn9Fhuhe/MvnswKACpEDzNi/fIHnAGjqJ85X7r98fM4AMIoAcPul
V0xk7B8f4rhBAiwgJ64qRsAGuIEAEAVSQA4oAw2gC4yAObABjsANeAF/EAIi
QRw4AVJBFsgDhaAUVIAacBlcAzfBHdAOusBj8BQMgzEwAd6DObAE1sEm2AF7
EAShITKIGmKE2CFeSBiSghQgNUgXMoGsIEfIA/KDQqEY6ASUDuVBxVAFVAs1
Qreh+9BjaBAah95C89Aq9A36DYPDcDAaGCuMDyYOU4BpwoxhNjBXmB8sApYI
y4CdhV2A1cFuwNpgj2HDsAnYHGwdtg0HcFI4HZwTLgpXgGvDzeFOcF94JPwU
PBdeBq+DN8M74QPwV/A5+AZ8F4FCUCM4EKIIZYQBwhbhhYhAnELkIyoQ1xBt
iD7EK8Q8YhNxiCRDsiCFkUpIQ6QD0g8Zh8xCliHrka3IfuQEcgm5g0Kh6FD8
KHmUAcoRFYhKQuWjqlEtqB7UOGoRtY1GoxnRwmhVtDmagI5GZ6HL0TfQj9Av
0UvoXySkJOwkUiR6JE4koSRpJGUkTSTdJC9Jlkn2MBQYXowSxhzjjUnAFGCu
YDoxLzBLmD0sJZYfq4q1wQZiU7EXsM3Yfuw09jspKSkXqSKpJWkAaQrpBdJb
pM9I50l3cVQ4IZw2zgUXgzuLa8D14N7ivpORkfGRaZA5kUWTnSVrJHtCNkv2
C0+NF8Mb4r3xyfhKfBv+Jf4LOYacl1yT3I08kbyM/C75C/INCgwFH4U2BYHi
FEUlxX2KKYptSmpKSUpzyhDKfMomykHKFSo0FR+VLpU3VQbVZaonVIvUcGpu
am1qL+p06ivU/dRLNCgafhpDmkCaPJqbNKM0m7RUtDK0drTxtJW0D2nn6OB0
fHSGdMF0BXR36CbpftOz0mvS+9Dn0DfTv6T/ycDMoMHgw5DL0MIwwfCbkYNR
lzGIsYixnXGGCcEkxGTJFMd0kamfaYOZhlmZ2Ys5l/kO8zsWGIsQixVLEstl
lhGWbVY2Vn3WcNZy1iesG2x0bBpsgWwlbN1sq+zU7GrsAewl7I/Y1zhoOTQ5
gjkucPRxbHKycBpwxnDWco5y7nHxc9lypXG1cM1wY7kVuH25S7h7uTd52HlM
eU7wXOd5x4vhVeD15z3PO8D7k4+fz57vNF873wo/A78hfyL/df5pATIBdYEI
gTqB14IoQQXBIMFqwTEhmJCskL9QpdALYZiwnHCAcLXwuAhSRFEkVKROZEoU
J6opGit6XXRejE7MRCxNrF3siziPuJN4kfiA+KGErESwxBWJ95JUkkaSaZKd
kt+khKS8pCqlXkuTSetJJ0t3SG/JCMv4yFyUeSNLLWsqe1q2V/ZATl4uUq5Z
blWeR95Dvkp+SoFGwUIhX+GZIlJRSzFZsUtxV0lOKVrpjtJXZVHlIOUm5RUV
fhUflSsqi6pcqgTVWtU5NQ41D7VLanPqnOoE9Tr1BQ1uDW+Neo1lTUHNQM0b
ml+0JLQitVq1fmoraZ/U7tGB6+jr5OqM6lLp2upW6M7qcen56V3X29SX1U/S
7zFAGhgbFBlMGbIaehk2Gm4ayRudNOozxhlbG1cYL5gImUSadJrCTI1Mz5lO
m/GahZq1mwNzQ/Nz5jMW/BYRFg8sUZYWlpWWn6wkrU5YDVhTW7tbN1nv2GjZ
FNi8txWwjbHttSO3c7FrtPtpr2NfbD/nIO5w0mHYkckxwLHDCe1k51TvtO2s
61zqvOQi65LlMunK7xrvOujG5Bbs9tCd3J3gftcD6WHv0eSxTzAn1BG2PQ09
qzw3vbS9znute2t4l3iv+qj6FPss+6r6Fvuu+Kn6nfNb9Vf3L/PfCNAOqAjY
CjQIrAn8GWQe1BB0FGwf3BJCEuIRcj+UKjQotC+MLSw+bDxcODwrfC5CKaI0
YjPSOLI+CopyjeqIpiEm2ZEYgZjMmPlYtdjK2F9xdnF34ynjQ+NHEoQSchKW
E/USryYhkrySek9wnkg9MX9S82TtKeiU56neZO7kjOSlFP2Ua6nY1KDU52kS
acVpP9Lt0zszWDNSMhYz9TOvZ+GzIrOmTiufrslGZAdkj+ZI55TnHOZ65w7l
SeSV5e3ne+UPnZE8c+HM0Vnfs6MFcgUXC1GFoYWTRepF14opixOLF8+Znmsr
4SjJLflR6l46WCZTVnMeez7m/NwFkwsd5TzlheX7Ff4VE5ValS1VLFU5VT+r
vatfXtS42FzDWpNX8/tSwKU3tfq1bXV8dWWXUZdjL3+6Yndl4KrC1cZ6pvq8
+oOG0Ia5a1bX+hrlGxubWJoKrsOux1xfveFyY+ymzs2OZtHm2ha6lrxb4FbM
rbXbHrcn7xjf6b2rcLf5Hu+9qlbq1tw2qC2hbbPdv32uw7Fj/L7R/d5O5c7W
B2IPGro4uyof0j4s6MZ2Z3QfPUp8tN0T3rPx2O/xYq977/snDk9e91n2jfYb
9z97qvf0yYDmwKNnqs+6BpUG7w8pDLUPyw23jciOtD6Xfd46Kjfa9kL+RceY
4ljnuMp490v1l49f6bx6+trw9fCE2cT4pO3kmymXqbk33m9W3ga/3XoX+27v
fco0cjp3hmKmbJZltu6D4IeWObm5h/M68yML1gvvF70W1z9GfdxfyvhE9qls
mX25cUVqpWtVb3VszXltaT18fW8j6zPl56ovAl/ufdX4OrLpsLm0Fbl19C3/
O+P3hh8yP3q3LbZnd0J29n7m/mL8dW1XYXfgt/3v5b24ffT+hQPBg85D48Pp
o5Cjo3BCJOGvUgBOvGC+vgB8awCAzBEA6jFi/YT/U5v9bXBi8XFcy9pBujBN
uAKCAYlFkaAlSBwx6dhHOBQZAd9OgaUMphqikaWtogcMQYyjzHIshazr7Boc
BZzj3FgeRV5HviD+EAEXQS0hVqEt4aci5aJBYqriZOIfJFokU6QspTmlP8vc
l82Us5RnkV9SaFaMV9JUxiq/UqlS9VYTUfum3q5xQlNLC6f1Qbtbp0m3Wq9I
/5QBwVDdiMFoy3jEpNm02qzWvMti0QppzWjDZEthB7fbt99zBE4YZ7wLmSvC
ddttwX3Mo4dw17Peq9w71yfB18/Pxl8rQCZQKIgzmDGEPBQe+iNsIXws4kHk
laiz0ckxWbGt8YgEn8SeE+Ak3ymlZMMU59SYtLPppRlJmTKZi1kFpy2yeXNI
c0EeLJ/yjMBZtQKzQvsip2Kncw4ldqU2ZZbnzS4Yl+tXaFWqVSlWS18UrRG6
JFFrXJd+ee6qYf2NhvVGyibe65I3lG/qNJu22N9yv+1/J/xu3L1TrWltme3Z
HXn3CzpLH1R11T+8193/aKpn7vFkb8sT3z6Gvmf9ZU/jBnyfuQ7aD1kOG4/o
PzcYtXkRMXZp/O0r0tfiE9qThlO6bxTe8r7Dv9t9vzL9Zubx7OUP6XN+87YL
ZoumH82XzD8ZLSuu0K/MreauyazNrV/bSPxs8IXkS+NX/a+Lm5e34r+5fTf/
YboduNP76/Tv9gOdo6O/+ZeEI+CriDnkImqTBI6Rw/qTVuHm8ELkcRRPqRip
E2he00nRpzHMMMkyZ7GMsTGxO3AUcXZxTXNv8+zwrvE9578sECmoJkQi9Fq4
RiRQVFb0UOyp+FkJe0l2yWWpZulYGVVZSLZfLlfeXIFaYVKxXMlZmVV5mrgK
XNQY1abUz2s4a/Jp7mlNaN/Wydf10VPRp9T/ZNBlWGoUa+xj4mnqbxZmHmLh
aWlupWwtZMNsi7eD2e3YLztMOj5xanaudMl1TXQLcHfw0CGIezJ4QV5r3hM+
fb6tfvX+ZQEZgWFBjsEaIfyhZMSVMB8+G/EjijPaPaY89nHcm/jFhI3E3ROk
J9lOCSRzpKBSPqS2phWkR2a4ZdpmOZwOyE7Pqc69mdea33bm3tnbBTcLG4uu
Fl86V1lSWlpQlnM+7UJCeViFX2VAVUr1oxrBS9fq+C8XX3l1dbcBf42pkbtJ
iLgO5G+qNeu0mN5yvB18J+vu5XvdreNts+0rHd874Q/ou4QfKndrPJLv4XwM
e7zQO/Ckta+hv/Jp4UDms8TByKHo4ZyRrlG6FyfHZl4yvVJ/bTPhO5kydfXN
i7c/3lNNi86YzIZ/OD/3YP7lwuziwsf1T0gi+6mr4+uUGxKfZb/wfSX/+mvz
09bUt6Hv93/Ubifv2P3k/7nzq2s38bfyHm5f52D1b/7FoHVYNdwNIYhEI7dQ
q+g1kgXMFikWx0umiXciT6W4QTlOdUTDS6tLF0ifyVDDeI+pn/kZy1PWB2y1
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
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 598, "PixelYDimension" -> 371]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{598, 371},
  PlotRange->{{0, 598}, {0, 371}}]], "Output",
 CellChangeTimes->{3.771692790946599*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"db0a6cb9-6c1d-47d9-b301-ca114a8c39a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetChemistry", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7716923832156487`*^9, 3.771692385590172*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"4a7904a0-c38c-4efe-bd35-b914aa0f4207"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i17$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i17$$ = 1}, 
     "\"max\"" :> {$CellContext`i17$$ = 3}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i17$$], 1, ""}, 1, 3, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i17$134691$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i17$$], {1, 3, 1},
                  AnimationRate->1.5,
                  AnimationRunTime->1090.0846033096313`,
                  AnimationRunning->True,
                  AnimationTimeIndex->0.8276131947831118,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 
                    1}, {5, 2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {5, 6, 7, 4, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 
                    1}, {5, 2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {6, 7, 6, 3, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\"", TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"C6H5NO2", "H+1", "C6H6", "NO2+1", "T1"}, {{{5, 
                    1}, {5, 2}, {3, 5}, {4, 5}}, Null}, {Epilog -> {
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {1., 0.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]", {0., 2.}], 
                    Text[
                    "\[FilledSmallCircle]\[FilledSmallCircle]", {1., 2.}], 
                    Text["", {1., 1.}]}, GraphHighlight -> {"T1"}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {
                    "NO2+1" -> "Circle", "H+1" -> "Circle", "T1" -> "Square", 
                    "C6H5NO2" -> "Circle", "C6H6" -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {
                    "C6H5NO2" -> RGBColor[0.87, 0.94, 1], "H+1" -> 
                    RGBColor[0.87, 0.94, 1], "NO2+1" -> 
                    RGBColor[0.87, 0.94, 1], "C6H6" -> 
                    RGBColor[0.87, 0.94, 1], "T1" -> GrayLevel[0.85]}, 
                    VertexWeight -> {7, 8, 5, 2, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[{{0., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 2.}, {1., 1.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {0., 0.}}, 0.2], 
                    ArrowBox[{{1., 1.}, {1., 0.}}, 0.2]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 0.}, 0.2]}, 
                    InsetBox["\<\"C6H5NO2\"\>", Offset[{2, 2}, {0.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 0.}, 0.2]}, 
                    InsetBox["\<\"H+1\"\>", Offset[{2, 2}, {1.2, 0.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{0., 2.}, 0.2]}, 
                    InsetBox["\<\"C6H6\"\>", Offset[{2, 2}, {0.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], DiskBox[{1., 2.}, 0.2]}, 
                    InsetBox["\<\"NO2+1\"\>", Offset[{2, 2}, {1.2, 2.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.8235294, 0.8235294}, \
{1.1764706, 1.1764706}]}, 
                    InsetBox["\<\"T1\"\>", Offset[{2, 2}, {1.2, 1.2}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 0.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\
\[FilledSmallCircle]\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {0., 2.}], 
                   InsetBox[
                    FormBox[
                    "\"\[FilledSmallCircle]\[FilledSmallCircle]\"", 
                    TraditionalForm], {1., 2.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1., 1.}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i17$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i17$$, \
$CellContext`i17$134691$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 3, 1}, 3, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{314., {243.884033203125, 249.615966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.77169249132983*^9, {3.771692582297661*^9, 3.7716926046587877`*^9}, 
   3.771692686842588*^9, {3.771692727067857*^9, 3.771692749049643*^9}},
 CellLabel->"Out[92]=",ExpressionUUID->"2e52111e-2f30-4b0c-982e-3abf4f5f7566"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Application of Petri net", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.771686793052129*^9, 
   3.77168680115561*^9}},ExpressionUUID->"11996809-1268-4c70-9c36-\
fd8f73be6e29"],

Cell["\<\
Petri net, as a mathematical modeling language, indeed is not limited to \
visualize chemical processes. In fact, any mathematics model can be somewhat \
expressed with Petri net. So here we write a new user interface to visualize \
the Petri Net. Different from the previous user interface for general input \
or chemical reactions, this time we build the system based on transitions and \
its rate. So our ultimate goal is to build Petri net to visualize system of \
transitions and use the Petri net to build groups of ordinary differential \
equations (ODE) and make plots for further mathematical analysis. Here we \
make the function PetriSystemAnalyzer and its helper function to visualize \
the system with many transitions.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 
   3.771695468855879*^9}},ExpressionUUID->"fe8170dc-c96c-47bd-b6f2-\
f17aa1fcc2ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "petriNetInputTranslatorHelper", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"petriNetInputTranslatorHelper", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Source States\>\"", "->", "sources_"}], ",", "\n", 
     RowBox[{"\"\<Source States Stoichiometry\>\"", "->", "sourceRatio_"}], 
     ",", " ", 
     RowBox[{"\"\<Sink States\>\"", "->", "sink_"}], ",", " ", 
     RowBox[{"\"\<Sink States Stoichiometry\>\"", "->", "sinkRatio_"}], ",", 
     " ", "\n", 
     RowBox[{"\"\<Transition name\>\"", "->", "trans_"}], ",", 
     RowBox[{"\"\<reaction rate\>\"", "->", "rate_"}]}], "|>"}], "]"}], ":=", 
  
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sourceStates", ",", " ", "sinkStates"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"sourceStates", " ", "=", " ", 
      RowBox[{"List", " ", "@@@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"sources", ",", "\"\<,\>\""}], "]"}], "->", " ", 
         RowBox[{"ToExpression", " ", "@", " ", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"sourceRatio", ",", " ", "\"\<,\>\""}], "]"}]}]}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"sinkStates", " ", "=", " ", 
      RowBox[{"List", " ", "@@@", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{"sink", ",", "\"\<,\>\""}], "]"}], "->", " ", 
         RowBox[{"ToExpression", " ", "@", " ", 
          RowBox[{"StringSplit", "[", 
           RowBox[{"sinkRatio", ",", " ", "\"\<,\>\""}], "]"}]}]}], "]"}]}]}],
      ";", "\n", "\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Transition\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"trans", ",", "rate"}], "}"}]}], ",", 
       RowBox[{"\"\<SourceStates\>\"", "->", "sourceStates"}], ",", 
       RowBox[{"\"\<SinkStates\>\"", "->", " ", "sinkStates"}]}], "|>"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellLabel->"In[20]:=",ExpressionUUID->"5e0ef88f-39eb-48e1-81e6-307654c1c0ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "petriNetInputTranslator", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"petriNetInputTranslator", "[", 
   RowBox[{"<|", 
    RowBox[{"\"\<Transitions\>\"", "->", " ", "List_"}], "|>"}], "]"}], ":=", 
  " ", 
  RowBox[{
  "petriNetInputTranslatorHelper", " ", "/@", " ", "List"}]}]}], "Code",
 CellLabel->"In[22]:=",ExpressionUUID->"90ccf078-bac5-4447-8fa1-5c1c7e44382a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriNetSystemInput", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriNetSystemInput", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<Transitions\>\"", " ", "->", " ", 
       RowBox[{"RepeatingElement", "\n", "\t", "[", 
        RowBox[{"CompoundElement", "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Source States\>\"", "->", " ", "\"\<String\>\""}], 
           ",", "\n", "\t", 
           RowBox[{
           "\"\<Source States Stoichiometry\>\"", "->", " ", 
            "\"\<String\>\""}], ",", "\n", "\t", 
           RowBox[{"\"\<Sink States\>\"", "->", " ", "\"\<String\>\""}], ",", 
           " ", 
           RowBox[{
           "\"\<Sink States Stoichiometry\>\"", "->", " ", "\"\<String\>\""}],
            ",", "\n", "\t", 
           RowBox[{"\"\<Transition name\>\"", "->", " ", "\"\<String\>\""}], 
           ",", 
           RowBox[{"\"\<reaction rate\>\"", "->", " ", 
            RowBox[{"\"\<Integer\>\"", "->", "1"}]}]}], "|>"}], "]"}], 
        "]"}]}], "|>"}], ",", " ", "PetriSystemAnalyzer"}], "]"}], "[", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.771695554596587*^9, 3.7716955617528353`*^9}, {
  3.7716956161713552`*^9, 3.7716956183826323`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"6c7f126a-51cb-4c5b-a708-f414a3c67a29"],

Cell["\<\
Here we make the function PetriSystemAnalyzer and its helper function to \
visualize the system with many transitions.
petriNetSystemAnalyzer <|\[CloseCurlyDoubleQuote]Source States\
\[CloseCurlyDoubleQuote]->sources_,
\t\[OpenCurlyDoubleQuote]Source States \
Stoichiometry\[CloseCurlyDoubleQuote]->sourceRatio_, \
\[OpenCurlyDoubleQuote]Sink States\[CloseCurlyDoubleQuote]->sink_, \
\[OpenCurlyDoubleQuote]Sink States \
Stoichiometry\[CloseCurlyDoubleQuote]->sinkRatio_, 
\t\[OpenCurlyDoubleQuote]Transition name\[CloseCurlyDoubleQuote]->trans_,\
\[CloseCurlyDoubleQuote]reaction rate\[CloseCurlyDoubleQuote]->rate_|>]
Input: list of transitions, including sink states, source states, \
stoichiometry, transition name, transition rate and initial state.
Output: a Petri net visualize the systems with many transitions.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 
   3.771695505568714*^9}},ExpressionUUID->"5377c0c2-69a0-473a-8a7c-\
2596ec5ee05f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "makeEdges", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeEdges", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Transition\>\"", "->", "transition_"}], ",", 
     RowBox[{"\"\<SourceStates\>\"", "->", "sourcePlaces_"}], ",", 
     RowBox[{"\"\<SinkStates\>\"", "->", " ", "sinkPlaces_"}]}], "|>"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sourceEdges", ",", "sinkEdges"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"sourceEdges", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"First", "@", "#"}], "]"}], ",", 
           RowBox[{"t", "[", 
            RowBox[{"First", "@", "transition"}], "]"}]}], "]"}], " ", "->", 
         " ", 
         RowBox[{"Last", "@", "#"}]}], "&"}], "/@", "sourcePlaces"}]}], ";", 
     "\n", "\t", 
     RowBox[{"sinkEdges", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{
           RowBox[{"t", "[", 
            RowBox[{"First", "@", "transition"}], "]"}], ",", 
           RowBox[{"p", "[", 
            RowBox[{"First", "@", "#"}], "]"}]}], "]"}], " ", "->", " ", 
         RowBox[{"Last", "@", "#"}]}], "&"}], "/@", "sinkPlaces"}]}], ";", 
     "\n", "\t", 
     RowBox[{"Join", "[", 
      RowBox[{"sourceEdges", ",", "sinkEdges"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[26]:=",ExpressionUUID->"128d777a-30b7-4ae6-9af4-6114820c30ae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "vsf", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vsf", "[", "scale_", "]"}], "[", 
   RowBox[{"pos_", ",", 
    RowBox[{"p", "[", "v_", "]"}], ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{"pos", ",", 
      RowBox[{"scale", " ", 
       RowBox[{"First", "@", "size"}]}]}], "]"}], ",", 
    RowBox[{"Inset", "[", 
     RowBox[{"v", ",", 
      RowBox[{"pos", "+", 
       RowBox[{"8", "size"}]}]}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vsf", "[", "scale_", "]"}], "[", 
   RowBox[{"pos_", ",", 
    RowBox[{"t", "[", "v_", "]"}], ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Transparent", ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"pos", "-", " ", 
         RowBox[{"scale", " ", "size"}]}], ",", 
        RowBox[{"pos", "+", 
         RowBox[{"scale", " ", "size"}]}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Inset", "[", 
     RowBox[{"v", ",", 
      RowBox[{"pos", "+", 
       RowBox[{"8", "size"}]}]}], "]"}]}], "}"}]}]}], "Code",
 CellLabel->"In[28]:=",ExpressionUUID->"6cf90949-4c85-4b3b-ac86-54a2386bba2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "PetriSystemAnalyzer", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PetriSystemAnalyzer", "[", "input_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "systemTransitions", ",", " ", "edgeData", ",", " ", "edgeList", ",", 
      " ", "edgeWeights"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"systemTransitions", " ", "=", " ", 
      RowBox[{"petriNetInputTranslator", "[", "input", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"edgeData", " ", "=", " ", 
      RowBox[{"Join", "@@", 
       RowBox[{"makeEdges", "/@", "systemTransitions"}]}]}], ";", "\n", "\t", 
     
     RowBox[{
      RowBox[{"{", 
       RowBox[{"edgeList", ",", "edgeWeights"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Keys", " ", "@", " ", "edgeData"}], ",", " ", 
        RowBox[{"Values", " ", "@", " ", "edgeData"}]}], "}"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Graph", "[", 
      RowBox[{"edgeList", ",", 
       RowBox[{"VertexShapeFunction", "->", " ", 
        RowBox[{"vsf", "[", "6", "]"}]}], ",", 
       RowBox[{"EdgeWeight", "->", "edgeWeights"}], ",", 
       RowBox[{"EdgeLabels", "->", "\"\<EdgeWeight\>\""}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellLabel->"In[31]:=",ExpressionUUID->"ff1da720-879b-4c9e-9215-e33f57953ad1"],

Cell["\<\
Below is the example for this system user interface and output Petri net \
given the input.  \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 3.771695505568714*^9}, {3.771695690669389*^9, 
   3.771695703386022*^9}, {3.771695871282113*^9, 
   3.77169589398473*^9}},ExpressionUUID->"91b558ec-76eb-47b3-9797-\
48fee71dc41e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/luzhiryou/Documents/GitHub/WSS-2019/Final Project\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<systemInterface.jpg\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.771692626775058*^9, 3.771692630166587*^9}, {
  3.771695956039246*^9, 3.771695959495224*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"1bba5edc-c5a4-42c2-89ac-4bec0044b712"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUVVWat9/zTeie9E1PT05r4urJM5LMtHm07Z7uNmvbIjknySBBJIiA
IiAISs5KzhkKyqoiZ2wsoMhFLrSpWwoq9/989/e/79p1blGNWNalb72/tequ
fffZZ+99Tp17nv3u8O6/r9/m0cb/5xvf+Eb7b/HxaL3O97RrV6/rY9/myxOt
2zdr0rpRw++37tCoSaN2t9b/dSJrk7YXf/8vHHe5XC6Xy+VyuVwul8vlcrlc
LpfL5XK5XC6Xy+VyuVwul8vlcrlcLpfL5XK5XC6Xy+VyuVw3kr744gsFPvvs
szDmypUrdohwGPP555+XmYmlD8N2bpheX5VPJDe+qibhpx3SiWFkeDRSRFho
5BIsBwtETg+LCGtiedpXxVy+fNkuPLy6MMZqEt6osHqRs1Irb8kilxMP/msK
pxbhcrlcrhtK9g6PAEsSZSIv+ZBH4Xv+0qVL4bkhESzzK0kpTUg9C0eQrYJ0
9NNPPy2z8vEAPSFSCUdIlFpKKqbDlMQYW1VcJMPU+xCpebx0e8PuVXiZVpal
R5GqKlmk/cBXOzdSnMvlcrluQIUWa4jXCAhkchoLUs3PSPpUBETYHQkbUOKl
qRHBdDyFKWEORsBIoWHO4SGlD1sLIdZTqVdmHQTlSO+Bzk01eMM8U+9eGBO5
CmtUqLiITa2jhnI75Mavy+Vy3ZhK7UAOZYSK2HSpmJZSzWE+J06c+E//9E/T
p0+PB1SKBzBKxVzERo6ndImH1Tt48GA86PWNl2ULq6xU+zesj6R8Uo1fyzYV
oFfr+E2tjBUXqUl4vZGOfYN7mT0P9jX8L6Qy2uVyuVw3lL7zne984xvf+LVf
+7Xf+Z3fufXWWxctWmRvbJmEoUkr2NWtWzcvLy8VHxbmxNBw69evH0X07dtX
WR05coTiqlWrpqOPP/74H//xH8dT+n4NcwQ++eSThg0bvv/++/EAPUQ2a9bs
/yT0+7//+126dCHGgGgduRHSlTla/frrr7/xxhsh3cqEo50b9vEq/Fu/9Vu6
jYjALbfcEi/dCAkpH2nJhM0GwmWa+R999FH9+vVzcnLCWinPzZs3v5+QzHZu
/tmzZ/manZ29f//+uMvlcrluPP3f//t///M//3P8+PHA6y/+4i9A8MWLF60L
V+/zEFi8z4Ed6fUV3sVLD1mW2b1cWFho4cOHD//mb/7mr//6r69cuZKvjzzy
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
5XK5XC6Xy+VyuVwul8vlcrlcLpfL5XK5XC6Xy+VyuVwul8vlcrlcLpfL5XK5
XC6Xy+X6VVfoOCte2luIy+VyZbzKdBzkclWOIn6VbedBl8vlyjzJse2V0th1
08NVmboS+H4MXVO6XC5XxutKijdgl6vSxFP3ySefXLhwobCw8NixY8ePHz/h
crlcmavjCRE4efLk6dOnz58/H9lOzuWqBBUXFxcVFX388ccXL16MxWIlLpfL
ldGKJcXb76OPPgK+WB9l7vHqcn194qnj2RN5kQVcLpcrI4WdqwAgVhjyQuF0
v4xdVUhffPEFjxzA5QlUg5CmoMIul8uVqYolDA3r7iNgm4q6XJUjmnxm7X76
6acxN35dLldGy5gbSw60YXR8/PHH6X4Zu6qWsHxLSg+CpO0n4apoqR+Dt4r6
1vSP9p4NV+XLenf1QF66dKmcRj5WACntGS5JUvL6nn8VRJhsrdDwRaecHb6u
SpbDN+OlYQU+SxItfHutuVyVI5691PEsG3hNFYn1uNopiv+yxNdZUFV10POv
ch2+rrTL4Zvx4m1Dm593C//oTxNKd41cVUvFSZUkRld/aQswRHNJci6KTvxS
4hSe9suXL2NoG/31inP4utIuh28Gi/8sbzn7n6rbjf94emvlqmoSTO05lBFa
TnobKNEpZgV/WYFdPfBisTJ3+LpuEDl8q4Ls36o30pftvnO5vorEPtp+Mj9t
GPdqMhNV6QXi65gIGk6sipU2qB2+rrTL4ZvBSu1qK3+ii8v1dUjYtfeMup3L
H/5QArOXbaz2S0lnqfRYcujZLV/XDSKHbwarJLmGQtiVH9G8vLz3Xa5K1Lp1
6/TU8fgZDcsZ9uW9dOTIkT179mzatGnDhg07duzYsmXL5s2bt3xJbdu2jbN2
7tx57Nixzz//XCO/JclB5PBnEnP4uipdDt8Mll41Mn41+EuAd2C6HzpXlRPs
48GTtcujePny5XJeNZD3wIEDJI4n91z77LPPrq9QPnnmya2wsNCGkmMOX9cN
oCoFX41AVVSyL6Vwwmdq27tyZPAN93DRy822lVTAEkS2m1RMmMYSRPaF0Vfb
pi11BzdXVRMPnp7DX/rjwmiNl36ivvrDQ56R34KFHb6utMjha9NC9NUWNVQg
f69WbkXlf40KLd+Qqpgh4SNR5osupCcBWSLGVgsoq5DLfPpOqa64w9flKq0q
Bd8yFV5+SdINxS9dDfFliwgNXt3k9MI3VEjJkLDxsixfsBsxnPXVNkXV3tCW
2LJyy7eKy+HrcoVy+ErmhEcTLDPyPpTZ7ZxqvXIUA9awa8NtYYJ4WV3ToYVL
DtbzbJayqyrL4etyhXL4xhLrCm1A1jZ4qliFBm/ax3zjSWJCRsNiOTC1NDba
a8ZyhKqRsd1Lly59bU+u61dMDl+XK1QVh68t/4/0CX9NCj0PfH2lXE0hfMvp
ClakuGlstQ7kkL+hdRxmFSFyZPKVq2rK4etyharK8DUHsHK9rgHfiFeciirI
gEv+tuqnAou49mrwDgxHcvman5+vMK+4wsLC5cuX21G+Hjp0KORmOIH58uXL
a9euHTNmzLJly86dOxcePXny5MGDB+NljRq7qqYcvi5XqCoF3zInNqNTp07x
05NHHUtZgeWac1oCRUVF58+f1zYHFVjEtSi125nPZ555ZvTo0RYzb968O++8
kwD1rF+//i0JPfXUU3v37rVnRim5ac8+++ztt9/epEmT//mf/7n//vtzc3N1
YuPGjW+77babb7758ccfP3DggIxon3BVxeXwdblCVSn4Fif39zRTF9ZAioYN
G7Zp0yY7O1uUNH+MJUkHs3aiWcdasK9Ic1hnndhKqb38zJrmc/HixY0aNQJq
Ko5Mdu7cyUvJkpUkt33RP2X79u05OTmhLyDzyxeuGja4mxe+cOvS8PIj3c4I
sI4aNSqe7EmeO3fu9773PQJLly5t1qwZ9ixPCPenT58+4YpgPnv06PHQQw8d
OXKErxTXsmXL++67j9JXrFjRvHlzEMzV1atXr1+/fja+nK6H3HUj6MvCN1Wp
OI5MArRAOCYibd26NfJbsLDD15UWVSn4cqVcr+GpsLAQ8q5fv57fHYxbvny5
gUybkQlw/JxlF5vVrDAGnRYlffbZZwSEP9tFyDgoRnOU4p5//vl169bxNSsr
a9WqVQSmT58+duxYksn3XXHS83ws8TZ49913x48fHzmq6slHkCHburIvXLjA
IbvMUJGlRqLtE088MWLECHt3zZ49u3bt2nqn2efUqVMffPBBLSbiK2eRP4bt
jBkz7MRjx45hIy9atIjSbckSVweR49757Ko4+PJbsMfJJtXrYS6ngefwdd1o
qlLwFVJjCSDyW9u/f3/dunV3794thAmmhw8fxljD1nvxxRd37NhB/KxZs6DM
LxIaNGjQtm3bOPfNN98ESe3bt58yZQqnEI+d2KVLl71795IbVm2HDh2aNGny
1ltv6Q5z7qFDh5o2bYoxaxbrmjVr2iTUtWtXji5cuLB3794UjSl65swZjr7w
wgstWrTo1KkTRw8ePNi/f39KweQkTCbTpk1r1apV27ZtZ86cqauT41yz3CMy
+OodpffV008/3a5dO5jLZc6fP5+rVrezpJQDBgzgRoWPDVdRrVq1EydOhJGP
P/74a6+9Fg9mc3Ei7Q23eV3xioBvvPRy8nB+fjiBsMw59g5f142mKgVfyaY0
Y7ECx0aNGo0ePVpDQsRDH4zNU6dOLV68GCxiSILXoUOHliR2ou/YsePGjRv5
db/88sutW7fet2/f2bNnOQUWnz59etOmTZx44MABIAuFjx49ClUBsS1lojjY
SuJdu3bBSjInDGo5l38E5jBnFRUV9erVa8WKFefPnx8+fDinAGLeDDAXyBKe
PHky9QF8ZLVnzx5KVG4ydQX6Mt9vEctX3qgg5kMPPUSF1f3+5JNP3nHHHfHk
jGXScDkYueEsLF5xy5Ytq1WrFnW2SFKqYSCrhFt0/PjxmjVrrl69OuLB0lU1
VSHwjSe7lG0sQ007AbecZ8zh67rRVKXgK8vXhlBlzMI7WAaCQRs2bIMGDQoL
C7UHd8uWLUEtZi90BpSc0rlz59zcXI5ioi5ZsoTcCgoKwNaxY8diic5hzpo7
dy62KrktWLCgZ8+eEydOLE5sKqRPrOmRI0fWr1//3XffJQbQjxs3Tt3I586d
W7t27TvvvIPBO2bMGCL55HQCR44cqVev3vTp0+fNmweO4T7nvvTSS3AfulFo
OBCsS0t9xZXp4eqZZ555++23zYig8sBXfjb4CusfeeQRmhA6al6w8vPzb7rp
pv3794dZPfzww7QlFKZNwldOdOa6pAqBr7UJecD4vdDypI1KmCZr6HI89NUm
OXxdN5qqGnw1LGs7dKurmasGYWAXKw/rj180v26OAsH169fPmjVryJAhGm/t
0qVLXl4eh1555RXgS+TBgwcBN6eoCG4mJjM24Jo1a1auXIkx++GHH2qUVgPE
oj/FgWx+75i94JVI/hHAdNiwYdB5woQJI0aMoDiwSJizaBWQ5+zZs8l21apV
69atIxNOJx+MTU5UR7qme9mocUThUiN7O2HqasKVZBOu4ol5y3Xq1IHO2l/G
xFHyufvuu2m0WJfy5s2bb7nlFsx8wjRUnnvuOe4nNY/7rgquhCpwwpV+PjRH
mzRp8vzzz/Ok8Ru0jmgbVQnPdfi6bjRVKfiCVFm7oiFvA/CB0QplICCo5fLB
KwYmacAuP+2TJ0/yS8eSpZmNzUvMpk2byOrll1+Gg2I3J06bNo0fL+w+dOgQ
pjSvApKRG1/JXBOPN2zYgGF4/Phx2uoYvB06dKAasBXgkobWO+8QUM5RzGrs
XzKcPHnywIEDVeF27dqRGK6R+OjRoySjGcC/b/fu3RTHV13j1fqcY2Wt88WO
ePrppynLvGfMnz//1ltvJUCdf/rTnz7wwAN79uzhujC9qQ83sHv37pjnBKhb
jRo1MPBPnDjBvfrRj35E/fVEceJDDz20fft27i13gBMdvq4KtHxpXvI74rfJ
s8cPs7CwkNavElzNe4zD13WjqUrB15bwaM4wv1x1OGup0c6dO9UL3bZt25Yt
WzZv3lzLfPiNY13Wr1+/X79+3bp1g6GcDnyBshYc7dq1i9NbtWrVokULTD9K
AWEYqk2bNm3fvj2Wr8qluMGDB1MWJcJrjTJTKF8pi0xGjhxJe56iMauxRgEc
aciHbEkGBDt27KgE8+bN27dvH5UhH9oDU6ZMsWnStvop9V9ZZrfzU0899dZb
b9lXjOt77rkHEGN616pVq2bNmhD25ptvrlat2qxZszidoz/72c9kZUyaNOnO
O+8kze23305bQjPDR48erbOqV69eMyHyrPTn2nXDqaImXIUDGeH8q0gyt3xd
N7iqFHyvJvAq41Tw4p6cOXPG7oxW9SJzfhV66lCYo5iuGk1WhzYmKtYomYQc
JECM4mPJbnCa7qdPn9ZRwuo9VrZkaE45YgmrVsNbtoKY9Gbz/lKVCd9rlHmM
BMG9evWyeA1VU5l4ytbALleoippwdX1y+LpuNDl8Y4nfne2noJlLoQeq4kDh
WebmQhw0aAq+oRvJ8A7b4K/i5Q1DxakzXMnsrDAfDeyGbYDQ/8Yv1XXD13bp
5a34wx/+MD8/PySsrexw7LrKkcPX5Qrl8I0l/WDESjthDm9LBKCS4djcaKSe
IlnmkXgryKZIRfZU0iGLtMVElptmWF3jZV43fG0eC08Ldq66/lJ79lLdCrlc
JoevyxXK4Rsr7UbSIi0cYWWsNItDpFqMQTwSmZoydPtcHOy2EKY3dltMLLDH
r/0yrxu+IVIjizisq9n7nF3ly+HrcoVy+Ephj3EsieNrP7ecxFeb+xSJj8A6
kjisZERfqp5fxfKNp1A4HrjS9fnMrvLl8HW5Qjl8TaFFmWq0RuZNpX61TMpk
qMgeiVdBsn/VvRzpmo6lmMwlwaYPsURHdCXANx54sJdv56tZuI5g19Xk8HW5
Qjl8Y6VNS1PktkTuTKQT2AKpQ7p2NDLya+Hi5LZH4dFUgluk7d2gLusvdZlf
pds53MnXDkU2mnET2HU1OXxdrlAO31iw/jeWnPJU/n0wX46xFPimju2GWdnA
rpE6VhrEZtterSvbFvNqmDjVmv6ll3l9lm/qkK51O/u+Ca5rkcPX5Qrl8M1g
CdPyeWUbAb/vclWuchLKzs4O25blINjg+xV3gg7bisBXy/rCDijJ4etKixy+
GSxZx7GkqW6d2y5X5askuW5dG1+W8zTu3r2bxPGrD3Bcu5QDJZKn3nU21hOp
mMPXVcly+Gaw7L+p0WG98cJubZerEqSOl0uXLunxi6yqS9XBgwePHTsm/krX
t4RNvIa8hw8fJkMCGNHmy86Kc/i60iKHbwbLXnE2rGxrqVyuypQ287LHr/z3
DO8l+Ltjx47Nmzdv3Lhx27ZtBLZ8eW3fvp3Td+7cCXwBsTYCow0Qc/i6bgA5
fDNYDl/XDaIvBV/NKoSSnFWcnKB43a8m0VYjL5cvX5abdIevK+1y+Gawir3b
2XUD6Mt2O0va/dMSF3/5V1NYh0g+xQ5fV7rl8M1g+YQr142ja59wFUu+iMzz
DImv3Ye5SYa29iLhdO1L4rOdXTeIHL4ZrGJfauS6AfRllxrZo3sxIUxmvn6p
DbwklWUtz9BxjcPXlXY5fKuOilOcbJhn5vKXUkbcWLkPK9d16P1rdrJRCXL4
utIuh2/VUQjfcO2Gb0XkqgQ5fF2uUA7fqqOI5StXzCKve4l0fd1y+LpcoRy+
VUcGX+s3vm7gCtwV9xi6Ml8OX5crlMO36ii0fMNxW+0SWM5DciWpr/1xdGWu
HL4uVyiHb9VRmWO+FrhGK9gp7Lo+OXxdrlAO36qj1G7na1TEv71v2uu6Djl8
Xa5QDt+qowh8barV8ePHDx06VA5P5aPAEOzGr+s65PB1uUKVCV8tSJdzBsWT
jFe0rXxXpJzPKL28t0XYfenSJaXXand5ONR6+bBQOX2V3xsK4vP8+fOFhYVW
n5KkRAFzGaewHNekrty37UtUeqpf2QsXLlCKroI0tj196I9OpROZn5+/adMm
K0X1lPu7mTNnbtmyxYrmqg8cOLBx48awDlZbqqqA8pezWVv+L4cAVtvQI4Hu
m91M1VO3jsjPPvtM+ch1fJkeCSLdzgC0qKioUaNGt99+e82aNZ966qmf//zn
oqo+P//887y8vGbNmtWoUWPu3LlpflJdv+Jy+LpcocqEr17s5hlm0aJFvKKb
NGnSqlWr9evXE6/3vL35BZFUL+iWubmGU4xc1hhGY0nKyAvTnDlzmjZtSokv
vPBCVlYWRzdv3rxu3Tpjd8gyBOZyc3OVZ9h4sLaBKmDUU1kLFixolFCLFi24
KBLD1uzsbMOl/NEZ0KdNm9arV69PklL+SvDSSy+tXbuWyhcn3di+99573bp1
U9FhW0XuetSK0OWo2aBGRcTnrQ4RP2/evP3799t9U+kcBbjWbODG8i/QIWuT
pL5wIk42Fi9e3LJlS5o6tEMaNGjw8ssvKx74kjkBruvNN9+89dZbqYOd5fOc
Xdchh6/LFapM+BoQ4Qi2Ia9l2EcYO2j58uV6q8veFE1iCcQYF0QWUSZiSiux
XKbHAidyKp2jJ06cAIi88znEr3XlypUEpk+fPnnyZLNwxRqzeYH1hAkTlKfy
jyVdyOoqtI+Jaii+nz59ul69euTPIT65OjKcPXs2pUSMdNmq5iRWoFQRFt+3
b1/qaZdpP2fyVDiynYGZurbTQSyJZgBqd0xwJ/Diiy/u3LnTyg1tfLPTOZEE
ag6Rf/mWL/QUWyVNtZoyZcqDDz4YD5YRGWTvvvvuhQsXWnrvc3Zdhxy+Lleo
MuFr73A+Dxw4AA23bdtm9CTNoUOH+vXrhy3co0cPuMAhDMmJEydiQAGUgQMH
kp58hg0bNmPGjHbt2kFP8nnjjTc4pWPHjrt27eIUCNu5c2di3nnnHU4khs9j
x47VqVPngw8+MEKtXr2aHEjWtWtXjq5YsYJA8+bNOevs2bNQD9OVo927dz9+
/PjBgwdBIYYz1ihfyZCiW7dujRENW2WAcxUYkpwioum6qAw2IKZ9+/btT548
WVBQQD6NGzemrD179pBszZo148aNiyWwCOupEonJk9MxGAcPHoypy7k0Ts6d
O0fiMWPGqBd9/PjxqsCsWbMEyhEjRkyaNIn7QA7Un5RcDgbmRwnREiCfZs2a
vf3221SMm8blUNzrr79+9OhRasW5nDh16lROEaOzsrIIW2e+OvCLU4bvI5av
2CoKw1P+aw0bNozMedYqpHvuuYf/b2SelSPY9aXk8HW5QpUJX17dMhjVpTl2
7Njnn38eFuzdu1f2ZqdOnWDfmTNn5s6dC/swJGHcyJEjZQl26dIlJyeHAFRq
06YNJCVlr169gA6BrVu3Qrd9+/ZBkB07dgAUALd+/XoznCkI6kET4Kj9rwmP
Hj0aqBUVFa1atYoMwW7Pnj0hF+mHDh0K9+EyKTES33vvPVJS5yFDhlAxak61
MajJzQZzOYvKUMqoUaO2b9+uMdy3EuIUToek5EB40aJFkJEY6AOeuKiZM2fC
zfz8/MOHD8NlMuzfvz9XSsz8+fM7dOiAEbpkyZJXXnmFhsq7775LA4O2CnWG
oRs3buSK+vTpM2DAANJDc3hHER9++CG3ccuWLaQkQIVpOXAtQjkxeXl5p06d
4r7RZhg0aNCRI0c4nTBXzT8LLtMMMINdFC4fvjA37D2msVGzZs3FixcTpv6K
hLwibO3atbk0zbMKp11V9sPq+lWWw9flClUmfK13V/2i2I/gABOsbt2606ZN
44XPa5/3v97wmHWgAbMOBMheBkAQlhMBEMwiUFhYWL9+fchio65QG0YDSliG
EY31Zz8EhGkMUrG4Ocrp4BhjU/3G5A/ZgSa2JPE6Cnw5F45zCrwjcyKpGIkx
gTGKQbZ6qsOxbLBLg4FrwYrkK7RVPlwgXKbO6lSHfZs3b+ZCuEDqRiuCcCzo
T4a8mLrEcE/q1asHJYEveOUQpRPW1kKTJ0+mOCJ79+6N/U4k7QGIrEsGqdxD
QNy2bVsCXIIaEhwC0NwQak7FyJ+Gh/5lmNukpJ7UVhQmT9ongPVqLxzrdtZ/
X2YvfP/Rj35EI0GRcjUZQvbuu++mYvbVseu6Djl8Xa5QZcK3JNhyWtaoIkEM
sMBMg6Tnz5/XyxxY5ObmTpkyZfjw4RrqBYubNm0CTFAG6pHD/v37IQiYEGiw
raAqcFy7dm1WVhb2HXnaeDH4EB8hVLNmzfhRgEXIpapCUkxaTE54jfVNeozi
SZMmkR64w6Z58+ZRKEYxTQJqyFmEe/Togb1p86VtpJUEHOWiCAD08ePHxwKG
qkeaCwT3VPLVV1/lKzylYspKOfTt25cSicGu5zL5XLp0KQ0PEnAIc1LmNpXE
hFd6cuBGYfiTuW41JAVwGLDcvVUJcbdJwKFWrVqBae4PN5DWBfZ4LDE+ztus
U6dOpKQsNSrUC62pX6n7n0YsX1m43N5nn332+eef50QxN2Qrafh633330Riw
YWKHr+s65PB1uUKVA1/F85MBGQcPHsT+hbCAgNd+u3btMIE5CiCaN29+4sQJ
AoAAYG3YsAFDjE9e5vBOE7QohaPYlTzhBQUFhw8fxpSDI+IjMRrzJUNiMA/B
HzHQChIRidkLm8jn5MmTDRo0ID0Awl5+6623OEqtBg4cKKsWoxuAnk+ITPjU
9Ozdu3dbg4F8gP6IESOwlDH6KAUCkg8nyniH/h07dsSCJpKUXCDUmz9/PqWQ
FckwEjE/ScZVcEVcpiaGkUyWKQ2A1157jSui5rRAKAXLlJsGc8mTGG4XoISt
ZK4GCRcI4GhUcIHcBAqixaJ/Cq0U4f748eMcJX+BlaKpJ5fMTbZZWDZvvJxu
Z7Nq+b8899xzDzzwwN69ew8nxIlAFlt+2bJlJKAs/qd33XUX/zsaFZRrT47P
eXZ9KTl8Xa5Q5Vu+kAhCDRs2DKZgHoJCzaSCZZpx1KJFCy0Cgr89e/YEu5AF
4xTLl2RQafXq1bLFOIXTYQ35YEiCngULFhBuldCBAwdUIsWBLbKtW7eupmbx
o6BQTGASQyusXUohq/79+4uzGk5FmIdAhLOaJQTLaDN069atTZs2fJ06dao1
KqAksGvSpAmGKuTdunUrkXwSQw0phXyAmqqXnZ1NxTBLOYXTISkU5pCGjLk6
LFnwRxq1DWgY8FXtAW4vAZoZpH/77bc1jC7LlwAVbtmyZSzRB445T4UJc1vI
mXKp9r59+2jqjBs3jtOpDwQnAARl4WqJMRWmGaBxXo252wrl1BdOZMIVrZdb
brmlRkLVqlWrXr06dSATaIs5TJqaNWvefPPNN910E58k4M7YuWl7ZF2/mnL4
ulyhyoSvhkdtzhVh7FDMLoUvX76sswAu8baiB0Ef5Wb9uhYAIpwFmCxPzCgM
K6EkFiyu4RA04RBgVaQmQmPJijjEk0DVU3oyIWdN0uYrVTUA8ak5VLYYSkti
tTAHsy5cB0QplKvlSHxygTYd+vPPP9dKYdWWZOSpm6ZKcoG2+Chct8tXXbWt
iY4lprTpDhtGw1cBiamYXQ5Fc0VctSaGYZkaajHb33jjDVtibH3pxcXFqa+4
EL42qzkcw7UVRpj5PXr0UCSl2NGIa6zKfVRdv9py+LpcocqEr2bs6M0vOuiF
H0tgBfDJnwPnQhy5t1L6WBIrpNdRIyBc46XNuVr/G0ss+RGRw9HJcH2uMhdK
CBvO1ACIJWnyaULmU0JUEjFt5axqEg6JKpn5CVH9zTRWpNYKCWrqGBe+zW2X
TlRZseRaXRWnVVfitWpOGquMjpYk/WyY35LQaFVZ1rzRhVttCwoKRo8ejdm7
Z8+ekqQsWaysV5zBV+S92pYKmzdvfvjhh/Pz88PxXzd1XV9RDl+XK9TV1vmG
tpixSSwzNtkL3+YPKxLC2lNtyC4OfC6Jy7Iui5MSjIxfxaW9UBoEzX2TKBYr
3ctanHTbGNq5nALCjL8qWp4oVKgZ6eFVh+6tVHO5bVR8aO/bHRCdLR87ajmo
FF2LrtQcZmpuuQxkST46zJ+V2dS6LYcOHZo1a9aHH36ohse1vNAi3c6ps5r1
Sf5nzpxJ3fNXJrDPdnZdnxy+Lleoq22sYE6YY6UxFHZHh06lBLXQbDTnS/Lw
LAKG3rFkD5rZa53PZhqrDgZlMwzNerUGgHW0GqEUiDiR/iRw72zlmkVpPI0l
QXwx6aYyFliUKohrUSYqwuBoVnlJ0rOWpPaGcB92KVhrR+mtW9vug3w1h90L
ilQrSOdG/nf2n0p94ZQkN1awxbyhM2ekKVURozic5xz2V1fic+r6lZfD1+UK
Vc6EK1l5opte/tadqzd/SemJtWYPChwCq7xkhJap2bnmbNkGYc1StoFR6921
CtgQrXmSjJUmpr7K4BW/VOHQIrbMwzVHkZHTksD3smB3MbHk2a4UDJ0/f14w
vZh0y2xGqHWV6w4XJ5cCibN2M62giHvMkM7WArHmh4bdrW/8YrCrhf03y4Gv
/vUhSVO/KhxxNenAdV23HL4uV6ir+XY27MqmKwkWH9mr/mJiM53w/W82nZmi
ZsOaz0MjkRVqXqCVXvwtCRbSis5KHHbDWjdvLPhFm61aEgz7WrzqZt4XS4Jx
Ww3OxhK2pI2uaumNmah2W5TM/D9/UtqPdCwJX7UBipMbLlgXcWr6WGKo3apn
I8uqlZJF7mp4i67xhVMSbCkYjudG2FqmXWz2b8Tzs8t1LXL4ulyhrmb5Wt9y
STAxyeBrPb1mjdo2doaV0Haz+cPGC8u8JLk7UqT3uCQYLbUxZet8NpMwkthk
BA/JFc7mMh+MJcHwa6w04KxjORzDDdsYlkPYqLBBYRtTts52s+vDCod3Jry3
4a22a1d3gQ09hzc8YvOm3pMQvhH+xgPORqgaponM1HK5rl0OX5cr1NXGfF0Z
oLCXPpaE7/r169P90LmqltRay8rKKk6uO4gsr6t8OXxdaZfDN4Mlg9o6tzU6
sGHDhvddrkpUbm4uTb6cnByb8Zh2OXxdaZfDN4Nl/dvWvW9D6i5Xpcn6XkqC
BQvpfdU4fF1pl8M3gxW+5WwSXXq7+1xVUzZ1QQ58bGleuuTwdaVdDt8Mls1C
1zxqTdNK3e3I5fpaZdMa5bFNq/Z8zNdVxeXwzWDZ6mMzOnjDZGdnp3sM0FW1
xCOXm5ublZUVrphIbyPQ4etKuxy+GSx1MpcErsn4fD/pZMPlqhxphVpOTk4s
ubY97TOvHL6utMvhm8Eyv6DWxUcM78B0P3SuKqcvvviCVp+t6L94lV0vK00O
X1fa5fAtR6H7LOsuM/caoVdJm1csTxrW02uTncrMJ+LrI3S9FTrisMmiX/1y
Qg9Xoa8MbWCU6j0y9MUR2fwo3PMonuIj2uWK6H13suFyBXL4liNNESlOyvZx
iDi2ChlqXFYL31wKlJlPLOm/y3x2Wby50gp3tfiKKg58O8tXpPhLJSPhkKHh
tke2C1KYQFmFGyS5XKly+LpcoRy+5UsdZbHk/sLaiFD9ZnIdGXpXtm2YtJbW
tlO8Wj62n4J5/jGvkubbOQx/xWsJLd+QoWbzpm6sEMpixFlOMW/Podz4dZUp
h6/LFcrhW46MsIKscBluXhwLtiqWC2ubxhlu4lBOPsRcvnzZNkm0vX1tWZCc
RRu7v4pCy9cU6YJO7UmOUNgSGLJlLMfL8gvtcpkcvi5XKIdvOQq3YYqV3oVQ
1qvtKxELdk3SLoRhV/PV8jGZzSvZ/GSzi2MV8coy+IqnkY7icNOECJF1iEZC
6sZGtvOgk9dVvhy+Llcoh285Kg52K7YYG40NFyra7CmgLOZqR+NYsDlyaj4l
yZ18i5PbIWmzp4vJDZHNWLbcvuLlCL4hJfl68OBBhQHo0aNHV65cqa+g9tSp
U/v377fEQi3x69evHzt27JIlS3h+yhwgdrkicvi6XKEcvuVIewGry5ffZmFh
oa3cycnJKSgoIF6b2seSg7kcys3NnTdv3oULF2IJI7ecfGLJDQFlC4ezmr/W
2c7xYHPeZ599dvTo0XwVN+fMmXPnnXcSPnfuXPPmzatXr37bbbc98cQT+/bt
0ya/4Pipp5664447mjRp8kBC3IrU6dMuV0QOX5crlMO3HGkvYJAKTJs2bfr8
88936tRp7dq13LHu3bu/9957JcHmwrHErCpOWbx48eDBg8O1SFfLh1M2JqRB
YZsIrdIJbEiool5WIXxtPBewjho1yp6H2bNnA1YCy5Yta9y4MY9HUVFRgwYN
evfurQRdunT5wQ9+gIGsCVdczve//32yjQdAd7lS5fB1uUI5fMuR6Hn69Gno
k52dDVt5gaxevVrdyMJrLLlngXqPCSxcuPDVV1+1fmObq5yaD/HvvvvuuHHj
bJDXjFxRG75PnDhRTI/M1xKpbWRZ/nJVgdhV/o9lTrh65plnRowYIRZDT5oH
d911V8SSnTJlCoTl6/nz52+//XbqbEcPHTp06623LliwIJ6y8tflCuXwdblC
OXzLke5Gfn4+0NyxY4eN5HLH3nrrrfXr1/ODffPNN6dNm4Y92L59e6xF0mD5
vvHGGyBy27ZtPXr0AE9Xywf+tmzZsk2bNhjCJ06cWLp0abdu3bAlR48eDanX
rFnTJqHOnTsfO3bswIEDffr0adasWb9+/cgK/s6YMYOvrVu3JiAQk63wHZnB
ZZdj8AWUMlSffPLJtm3bzpkzZ9asWTQbqDB4DZ8QrOOBAwdirRPevHlz9erV
CwsLbcIVnz/5yU+GDh0a90VGrnLl8HW5Qjl8y5H1Ko8aNQomjhw5cvv27bI6
X3755VWrVpEAFMLE/fv3z58/v0OHDpwFfLF8CwoKmjdvnpubaxZraj4YksSM
GTMG8hLOysr64IMPCPTs2ZPMCQwfPhy4nzp1qqioCCzOnDnzzJkzb7/9NnCH
gPXr1//www85d+/evZplrbVO2sMo9RUXme0cT4D12Wefxapt3Lhx04R+/OMf
165dO54gqQaCgT627fLly4mkVtWqVaMUnSvaUo3evXvbtGcf+XWVKYevyxXK
4VuObE4ULNu1axfIa9iw4bvvvktM//79sXMBKBResWIFCaBho0aN+MR+JBIb
FuvYVviWmQ8UG5eQuo75+WNNw2KMaKDMWRMnTpwwYQI5YPmSOadgn77zzjtY
u2QIjsH0ypUrQbP6t0uSOymQVerlhE42DJ1PPfUUGephIGbu3Lka8xVDL1y4
8MMf/hC7Xkf37Nlzyy23gOPwEXrooYfCUWOXq0w5fF2uUA7fcgQcsf4AkK0q
gnQYifxOwSthAli+2IPct+PHj8PH06dPL126tEGDBhi/LVu2JFKjtGXmwyHM
WODL6Rzt1asXpi50JhIgEskhAqTHsibz2bNnr127lnPz8vL4x5GABgA16du3
r9Yoib+a4lWO5at/veD72GOP0UiIJ5cRLViwQJYv8KV6zzzzTL169ThRMZcu
XQLNpNfMZ3LYtm3bzTffnJ2drU5sn3Plupocvi5XKIdv+YKbubm5I0aMOHr0
KAbmlClTZHX26dMH5iqA5cs9PHnyJMw9derUvHnzsEnB39ixYyGjZkCVmQ+H
MGwxhEnA6U2bNs3Pzz979ixncS7s4+jrr7+umnTs2HH8+PFnzpzhX3bkyJFz
586RIf+v7du3169fP5Z4e8QSM7W04ljOLUNF4CvaaqmR7FzQOX/+/Ntvv50A
6SHvww8/TGOgoKAAa1cInjRpUrVq1bDBqSdtAMxerPiIOw6XK1UOX5crlMP3
l+rEiRPwEcDB1g4dOmzdutUM3liSwtw3bF6MWVm+gwcPhn3wsUWLFlpSVGY+
nLVz505M2iZNmuzdu3fYsGHNmzcHyoMGDcK6BM1btmzBfG7WrBnJgGDnzp1J
wFf4Dg07derUrl07Cp0+fbq51ZLjDs1/jlxIZMKVPh955BEMbVmyCKree++9
MJQKVK9evWbNmhi2NWrUqFWr1pw5c7B8sXZpOdx999062qVLF2z2eML/VZnu
KF0uyeHrcoVy+JYj29pAt+j48eMyJ7WwSB4mlSbcKyF0lxGO9qbmoznJ58+f
x+wVOglo0pRO4RNTl8hY0tUGBOdfFkvu13A2IYXBH4e0pljePCKXk7rON9QX
CUUiLVnqfoI0MwzZkcQuV6ocvq7rll419oJKfVmF6y/CmHjgODeyoUxkc5nw
LFt6GeYQbrpq78PUXd4s/EvH4By+VUdlrvN1uSpBvKNyc3Pl5M1Ww6X3t2Bh
h++NLJsaGg+gGa6qiCAyXpqSEYzGS+8Xo8yXLFkiTwWScubQ6tWr586dG8mh
zE3MJcvzGi/N4Vt15PB1pUV6W+bk5JQk97wWgtP7W7Cww/cG15AhQ5577rn6
9es3bty4QYMGBLp16xZPMVfjgUVsKLQ91+IJgIYWtNmznTt3btSoEZE8luPG
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
ZX661PlM+PPPP/d/sauSZdObze1qmftNV6Ycvq60y+GbwbIVzbHk5Cti3ne5
Kl1ZWVm5ubnh6nuf7eyq4nL4Vh2leriKl3bqmM4H0ZXpet+dbLhcgRy+VUdl
wtflqhw5fF2uUA7fqiOHryuNcvi6XKEcvlVHIXxDmSeitDyBrioih6/LFcrh
W3WUCl9nrqvS5PB1uUI5fKuOyoRvGp89V5WSw9flCuXwrToy+EaYK9f34QaC
LleFy+HrcoVy+FYdRfbzjSct388++0y7Faf1SXRluBy+Llcoh6+ktf+XL1/m
N2gb3OszlnTRI8USd0n7BOmoHMVbJtryvqCgYMOGDQrLqaN8XJiTAX1VPgQU
GR769NNP5Xxehap0MqSS5iNIPJX3yNClRpkehMrsds7JyWnatGmNGjUWLFgQ
DzqiLaD94FyuryiHr8sVyuGLIJegJt+z2oZP5NUe9GKZHMLrFhHmkNzlGVK3
bt0Ky8TZGTNmvPjii5BLORDJrVZ6ebUlvW1z8GlCYrE5hCQTUhIjz5DSwoUL
9+/frxMN6LoKklljAGNW2/iGCuErpHLJubm5I0eOrFWr1rx58+JJnxvIe6Fd
FSuHr8sVyuEbS2LLbE9BNrRGhblYsCW90ouYwivhadOmTZ482TYvEKChp76G
nh7Nsjaft8rEiiYMQFW6NQZI1qlTpx07dqgOkX+Wuo7VJCjz/xgZ8zW8UtAD
Dzwgy9fkE6FdFSuHr8sVyuErAazjx4/37dsXerZp02bnzp3r16/v2LFj8+bN
R48eXVRUdObMmREjRhDTrl27RYsWidek6dy5c4sWLQYPHrx48WJObN26dYcO
Hchq+fLl77zzDvf24MGD/fv3b9iwYe/eveEmYOVor169pk6d2rZtWyI//PBD
A/qxY8eIAeKtWrXCJh07dizFkSeZ868ZOnQo9Wnfvj3FkU9WVlaXLl2aNWtG
QTKrrQP8woUL6tAOFel2NuOXz3vvvVeWb0TOX1dFyeHrcoVy+ErA9OjRoyDy
jTfeOHTo0AcffABJd+/eDSi7d+8OZMHZihUrSLNv374mTZqcP3/+5z//OeBb
uXIlYW0UDhzhYGFhIT9kcPnKK69wPzl93LhxZ8+enTNnDpgm8cmTJ+vXrz99
+vSCgoIBAwZMmTLFBppPnTpVr169IUOGHD58mMilS5eeOHGCgpo2bXomIYqG
uefOnVPpe/fuJSVNAkit3mmuBeyWuWXM1ZxsoNq1ay9cuNA6nMMZWc5fV4XI
4etyhXL4Iu3rfeTIERgHbTEhZ8+ejYHJ53vvvdenTx/4yJ0BcwsWLIDODRo0
2Lp169y5czmkuU8aLx4zZsyECRPUn7xkyZLXXnuNUwA69qzmSmEU5+Tk8JVI
SEpKMunXr5/MXkR68EodYoluZJoBMJESGzVqtGXLFmKwfGkSkD/WN0bxzJkz
VY3x48eTCdVQQWXu2xvC97PPPosnjF8F7rrrrtDytd0WXK6KksPX5Qrl8I0l
zF6sRWzMOnXqYOHCOLCL5bt69WrMTD537ty5f/9+7FYIdfDgQai3YcMGwti2
nKh7CLLHjh07ceJEvpIDcMSqFWcxezWC3LJly02bNhEJYYmkXKxpGcga/KUO
GMVYx8Rg21KiZljREti4cSORNA927NhBgBq+8MILqxNau3YtpjqnFxUVwV8N
Gaf+KyOWL3hVn3M8CV/76nJVuBy+Llcoh28s8esDWDBRvbswEZYBTXhHPOYn
aYBpr169SLl3717Mz82bN2/fvh2DFBMY7Obl5ZFy0qRJgwcPjiVGkGEZli8o
79ix47Rp04hZt24dMC0sLKQgbGfgC6MxkPv27asJV3wePXqUPE+fPg3TOdS9
e3f+I1QGWGP5EobCq1atUiSZ0AaQSa75WpoabUuTIpeZavmikydPQnzgS7OB
KpFDWp9HV8bK4etyhXL4SnDwyJEjgO/cuXMafl2wYAHIa9WqFSZwfn4+kOrc
uTPY7dGjR6dOneAyrJw+fTo85Sy4fPz48W3btjVLCDLOnz9/yJAh5IPVDDE5
kZTY0cSQsnHjxpCOgpYuXTpw4EChE4FmcsPy5RDJunbtSkoy79ChA/AlwdSp
UzGNATqlz5kzh6PUsHXr1vv27bOFw+Fq4lDhbGeb8HzLLbdUr169VlK0JeLJ
idAGaJfrq8vh63KFcvjGkr4ytG5IfbZaJMvNgblYr7a2F5tUZrIW5HIKsMZy
tGVEfCWNzFhOl0MMBFVDxx0amdUhshUx+SQsRGrFMWmwxFVDYrSsiSLUZa2F
wOSsTm/VWTmTFTGRy0ztdraBXU2y0teIq0lHsKtC5PB1uUI5fGOJ1buxBHyF
vFjy92i2pHnYsOU84qBcXWl1rfnBALjmWEMcNHdVGpDVV/nCsjxlq9oSYFv/
a6xXfVQxcVlztHQJ6m0OMynHyUY5k6kMu+p/9mlXroqSw9flCuXwjSVYJsdT
oq2hU+BTGt0lcxSJNMAqRCqNJl8pQLwWEFlWArRRMpakcyzpXtI8aJnXjotJ
mXUsuKsUkV2nk9isbAN35DJTPVzFg4nNBBRJAGs31c+ky/VV5PB1uUI5fGOJ
qxYTZYcSBkPcGYOgrEgbTo0lcakYUVvmsOxWBUCYmcMyWpHuedj5LI7LrWVx
0ldzSdKJdCxp8BYnHUrL82SYRvkY1ktKu50ML7Ok9MYKRtsy+5mhuZPXVVFy
+LpcoRy+saQJKetSXwnDIIFMbLWeZ51ik5rEa/VXm7FpJm3ooFKHioqKLIGd
K5NZ1Qjt7pKkW0tFXrhwQeawgK6wGdFWpXBThlCRbmeRV93L5tLZHgzHrqti
5fB1uUI5fGOlu4XNrtSdiewrFJq3Jck9jGLJLmJh1DZcEDr1KbNUJ2rkV7Oq
wkxssJjTQ0ZbR7dGh9XDHEsS+ZOkZJ6r89k2WQgVdjtH3DtL9jUMOIVdFSKH
r8sVyuEbS5leVZzcScG6djUJ2fYENECb4RlOf7J+YOv7Nf7Kvo4lcW8wtbFa
3X9tsWTnGqOVWNOeFTamhyPURvnIZRanuJcUZCMGb2S3X4evq0Lk8HW5Qjl8
M1hhK0J2fclVfDu7XF+rPv/8cx48jcvYntTp/WlY2OHrSoscvhmskuSaI1sS
deHChby8vPddrkrUunXr9NTJd6uts0vjT8Ph60q7HL4ZrHBsWl81PTvd9XJV
LdlKdn0VeVOXwlWmHL6utMvhWxVk/1ZN9ypxuSpRNl3BnLyVpHvY1+HrSrsc
vhmskuRQr75qSrYcdLhclaaSxMQDew7L3O+ykuXwdaVdDt+Ml60mLknMr05v
d5+rCspczZQkJuSnfcA35vB13QBy+Ga8tDDKXHCk/b3nqmoKl8abUpfCVaYc
vq60y+GbwdIbzxxzlSSXM1fWWJ/L9f/LHLXpgUz7xD+Hryvtsu1vSoK5iGn5
ObhcLlclyPzUxQLH6Q5fVyWrJOmFWCpJ90QIl8vlqjQVB0r3y9hVhXTlypVw
g1q3eV0uV1WQOsM1BcIcqqf7feyqWvriiy+0lc/HCX300UcXLlz4yOVyuTJU
vOJ41/0iqVhiOxL3Ye5yuVwuV+XI9+1y3SC64nK5XFVG6X7juqqoriT3jLOH
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
DhbizpF8hXBpxWpnhpbsc8nyiYRjFljEauIzW1lvVM3lEwn7jraIFZpgp9Ce
07MiM7eU1j+k9cQYDbur4h65a6612NztQYu52fgO3F35rSMxxS2xPVomFqHb
11VYWAiRmSu50FRutc0MosvDEZS8cNgIbojDZy+XdgEpd/qObpK4ameLfGle
Tv2mxlaIQ+YV94DkK4RLa3UvaVGt2cRiVS8MIRmBRsPXUaNhD40WpjWXD2es
h0Yv7CvD1bHlRn3Td/YklM41PdnT2Eg4+GC5M4qQxbnMzfqLtpGMvDDYZGHc
Anihhe13HQ3HTYiEWJ/P1i2kfV285agIB3qwZ7jRcBwHZuiFAXLEecOIyezJ
8p20dvZDk1pUG/cU2Dzrirjxk2IhbovkK4RLa43nKx5A7P6HdxFckpGRkeiT
TiQduGGDfFlXY3ekif1p2LzkKxKC5NuBsefUnjOYcnp6er0QbQgfZKSmplrl
z20fkdxvJF+RcCTfDoyFve7TYUW+IiFw3E+26PASfamRfEXCkXw7NmyYbU3L
OOCjEG1JSkrKnj170tLS3DfsVO0skhzJtwPjNva2xmn6LxZtDJsm2tt5bBNo
b6wnBMlXJBzJtwNj73BRu1745DfR5RLJhb1Vx7ORCub79YktEpF8RUKQfDsw
9sIUK58xX1tbq/9i0cZY82beB9r7fQkskuQrEo7k24Fxu7qy/sF2CdHmpKSk
ZGZm2hv0XqLf9pV8RcKRfJMH62SDL4D4zXSX0bg/jdtiGZK4PjrqGw0BHDcu
obst5t2up92ycSt17tFO2aVONoRwkHyTh+a6l+SfcK4rzThBN4fbz3Pc6Ehm
WPqUa7GQ/Vha/u5OGw8WbKM5cFuNJtx+kXyFcJF8kweTr6tFxrlmQLOkJWhB
vnHRbpMRq5tD4+jYLYm7yr0T8G+NlBX5tlMkXyFcJN/kwa12jjsNmtTibeuc
rf+iuOA3rhrZnbfhGywlE5he3SEL4+Lc5gZ6EO0CyVcIF8k3eXCrnU1kJsTG
Vbt3+MDXbypejpuJGwWY85WVlS0kc8cRvvOSiAcWyVcIF8k3eXDly5CzcaDK
QX6bC10b49ZXcyYutvVvrSiOq0/2HXGbZGH/xrm5dwiiPSL5CuEi+SYPcQ2u
KDLa1m/kNQuNW/Dd5cuXkacb57pttOJMWl5ejvSN99vcHuMGPVTw296RfIVw
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
rzwS9SKBfqNeqRcpqYxWlJZFy6M1uNHA2sqK8tTUnaHxaoJPIDjM1Ya+ra+L
zdXFljYlYSHukvpanF+709Kqcd/oleHMjERwf1sZ8apjn9gZ23CvyHO4LX4y
kq9INJJvByDiVcXLN1oak29pUYUXLfOqS3HN8xracmft2Z2etTcjc3fW7vRd
GTvT01NT03btTMtK330wNWN3esYuRChZ+KTt3pW+G0tiC3fhk6mppvc2zcjK
TNuVvistI4r7wfLSqmqvvBz+jZp8w1oat7rmPv9kJF+RaCTfDgDk68XkGxMu
4oqyhsi3vBoz5fgfrSqLXeWC6LjGLyivKozUFkcqYykjpbj0lVdUF5ZVllb6
pdHqsmhVQ2VgJHZhxJLiimouRyaaanq3U5w/xdX+Ta/+RklttMovxd1gpDQa
jVRGcY5VxT6hc8NKmzb5yUi+ItFIvh2CoMMNhLpRypd/lleUl5WXlsXUXFUL
w0K4NyL+hWL/XLF/tsg/X+rn3ozm3qzML/HPFPi5xX5ukZ9XVH++sO5iQd35
Aj+/MLbkbHE9Fuqjz719cAqdLKw/U+LnF/s3on5ZlV8SKY9VO3vlleUVlbGn
wEEtDeUbtk+430i+IuFIvh2CiqApC+RbEnuiFmtRFltSUR6pjlaUl3slEayr
LKnyzxb6Gw4Uz0opmrazZG5G8fe7CmbuuDorpXBGSsmMtNKZacWz0wrmpN74
Hp+UojmpRTPTimakF81O1Uefe/zETqe0i9/vOLvhYOHRa/71qB+pqi0rK6mt
rKgqL8en0iuJeiUx+XoVCJZZjXO/fzCSr0g4km8HIBqhfEsiFSWlFSbfimhJ
TL6xRs6VFSVe5fnCqg0Hro/9fv/YJefem583cv6x8YvxOTFu0cnRi86MWnh6
9OLTYxadHL/wOD4fLsBM7M/Ri09iOk4ffe7xc3TUvL2Tlh3+eEnO+v1FeUV1
JZU15bEK5tKYfCOlrnyD1guSr0gKJN8OQBPyjVRFEWBEq6uwsrw0igucV3X6
RvXCtKsTlpxafrB24wl/3eHydQcLNuWUbMwu3XjEW58TxZL1h0s3ZRfjs/lQ
6aZDsT/XHy6OJdBHn3v6rD9cvvZYzdJDVeMWHPt+5+UzBfU3cXJWVsRaXkVK
Q/nGXtaTfEVSIfm2d6Dd8NlZTL7FlZRvdbS8urK8qgLxRKSkLFJaXll7rsSf
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
VL7J8Sa3LbckVnZ1de3fv3/Tpk3bt29vbGzk0S5e4vbkJ1y7fOKwFthy4brV
gJo30H4LdzTC2/M7PPzww5WVlVo0/c3L1yvpbIbMpvnfgt+shOpKqNwRfXr5
2QKLXdH5dBjwMgkGUIuiMiChKCX7bAtY7bDqN63mnACLmnVhJk3hnDpRiIlS
Fj2C4BMFn5qrPKQmTXl0aUfMWVBdDcfrT80t/cps9t98U3d6hlOUByRpkCWD
sdgZLZz0eCRfgiCIGc9l5etOSmfiJkUPtrW1Pf/880uXLn3hhReWL1++bNmy
mpoajGS1bmcez/IQWIt8UabYht+ER7Ja57MWO3N4UMx9vWTJkk8//RQ/XsuK
W38O+ToVQ212Luz8GJx2OFsHx49Cezv8/g/2dFObXnLoWdAaFHW9guhSdAFd
ZpulFO/sXvvfn+fMcaTndisZHjl9SEnDO7tFodeob9MpDnMmfrFLFpzmdDzp
E+VOnf7IrDxYtQr+Z8Oe/LkHv/1tOHsa/uXeVpPZLaqKNwheVdYhinwJgiCu
Iy6Vr9aTnFyPNevXr8eA9MSJEzyM3bZtW3d3N1+UEq9iUIyi9Pv9Wq81yhQb
YGOs4QGvFufyo8/n40ExfsQGWtIXXiovL//oo4+0AeJvXr42o+noX30HrO1Q
+VFF/pyD+UWw9DG4595GRanLy67LNLkUxSPJ9Xq5KdvsEIztc2+EXoftt69V
3Hjzib/4y8PZeWczc7r0pg59el1O3oGCwgOlN35hKT2dm3ciJ2u/paT2Wzfj
F9sMcrPZdDo353hW/meWsu23fR96ur1Llh3In2tV0jGmduPDSMKQLA2QfAmC
IK4jLhv5aslOmojb29sXL168detWLkSejoVtsH7Dhg1PPPEEXn3ppZcaGhrw
Kvp05cqVn3zyyerVq9HX69at6+jo4J49dOgQXlq4cOEzzzxTXV2NlU1NTatW
rXrkkUeeeuqpqqoq/tsx8t2zZw+PgqdLvqdu+1vosMO7735SdsP+7DktuQXt
ktKSZYbX1sKGN+x6fadegYX3w2dVdlN2c1Ep25Hh7Ek4fQaa22D/wY477jyR
mTN2x51w4CCsWQsNLdBqhaefgV89CidOQ1s7vLHuWG7m6ZxMePFFePu92u8t
gBN14HXB2Qao3j9+y3cxsh7WsxHksJicZU3yJQiCmPFcqds5ec4vNjh69Oii
RYvOnDmjbb6AUS2GrvX19WvWrDly5Mjhw4cff/zxiooKHuqic9GnH3/88aef
fopeRhFj5cmTJx988EGMoOvq6j744IMvv/wS4+UVK1a8/PLLGFBv2bIFW+IN
8eb4XYx8tZzqb16+PTrD8bw5UP059Djgyy9ali3bU1ramp111JQGR2tgZ6Ut
I7vZaIL168Dedjo3u6mshG2TFPTBf62CXz8Ltg60cPW8Ylj0INuKyNZxbvWL
cOwwOHugswPe2QS7K8HWdvjHC/5YmA+/3wJV+3f/zQ/9m94Gdw9sfhuWLh6e
Nw+fysceRu5jSdE6ki9BEMR1w2WznbU1J93qsld4xJj0oYceam5u1vqNeYTL
k59bW1tramow8n3xxRf5HVC+KFweIGPla6+9hvWo3eXLlzscDi0RGv37wAMP
NDY22mw2u92+bNky9DXedunSpTt37tQWsPrm5dsn6aymzNobboCNG8FmBWcv
nKqP3n33vsJCOFYL1QeaMrLOZphDr6/DgPfEnNln0bN9HsebG/YUFFQVFHav
XQteb+M/3BVZvAh6e6oeuO+9Mkt/+WLo89Y+veL9kiLHvfdAT3fbk0/+obgI
KrbB/iMbSm/a8W//Cq7uwUX3Hc81OXjMKxhYkQz9FPkSBEFcR1x2zFer0Sbw
YqyKQSse+UYGfIgW6ezsRLFixLp69epnVbhbuT353V5VwcYrV67Exrwrmxsc
VYsBNTq3vLwco1082bZtG17Cr+/atetaUp3/TPL1i5LHaGjX65oycmrnzh95
ZgU0NcPZps233Ar1zRionsnNPpFuiKz/X+j1nJ5taSwoAofL/8ra4+Y8/NhU
/ivAV/z3n40sXgqOzs/u+vFBy2zf398NXb7a+x7elz+77XvfBUdP23Mr3y8u
hS3vw4EvNpWUVd7zj9Btj93/8wZzRg+TrzQsZwwISkQ0JM/zJfkSBEHMdC6V
Lw91tfQnHuS2t7cvWbLkzTff5NlTPp8Pj1j/1ltvPfHEE21tbWjkd955BwNb
3h7DZB664sfXX399zZo12B4jX7QzT3vmKVj79u3DlrW1tVpaNU+Q5j3VfHB5
WuTrlZTODCP85Ecn9Zlfzpm3sfRG2PYhNLfv+sldUHMCGlr35OftnVswvHU7
ONynZhW2zb0Bunrcr/72s1mFB+ZYouvXg9N1YsHtsKQc7LajP729flZu5PY7
wOZt+MXDtbPyHH/9HejubfnPlypKboL3KuDzgxXz5x/6538Cq3WifNnBzMxO
k7mPLcchD7NlJNlsX5IvQRDEdcNlI19Nu+5ELzSebN++HUW5efPmU6dOHTp0
6LnnntuyZcvGjRtXrFiB8q2pqXlahTfGMHb37t084Xnt2rUvv/wynu/du3fh
woX4rebm5gMHDlRXV3d0dDz66KOrVq06duwY+r2qqopPRMJA+P3338f7TNeY
b5feAM+tgNZG+Liy+YXVLRs3gasfjte/V1A89u7vwO3xvrImsnkzhMPg9dbN
ntM4rwRPoKur5bnng6+8Cp4++Or4ztkF8MvFYO2s+bvb67LN0TvvgM7us/f/
8nhOdvett2Kk3Pj86u1lt8DvKqC6uqKw4ADK2t4Ne6u6Fy3svPEWty4TH2wo
seglyZcgCOK64UrLS7oT/c/atFwMQnfs2IFaRAXj8ZVXXkF11tfXP/bYY6hU
jH9fffVVFDH/LoauGPmiOvHrGC9jY36TrVu3Llq0CIPopUuXfvjhh1hZV1eH
38I7YD0Gzk1NTfhL161bh21sNtt0jfmifGuKilhic0MzE6LTA18c6Vrwo9qi
uWfu+il8eRDabdDUAnuroam5bfacptw8aG+DxkbocUF3D9TV7l/ww+P5+fDz
X8DpBusPFpxN04//4DZoaXbfe2+DKcN7403Q2u54cMm+wjJ4YxPsrDw8Z86+
WQXw3hZoa4SmU/Af9zslI18sa0AU/FPrXpJ8CYIgZjxXWl4yeRGqixZtxrgV
tZg8Lmy1WnkvtDtp3Sret8xHjXkKtFvt08bKlpaWHhW+TCVexRti5MunI2Eb
jJexDcp9uub5soQrQ3ZDRt4pU4atuLij7IamnFy7Xt+hiK0m5Yw5zT6v9KR5
VkNuYVt6jktQ+g2mU2npJ/NmNxeVNRUW1+dktGQbu41ylyx0pemskuBVZJck
txsybIZMtyj1yYItTbGajW2S0msw9RlNDkHoVgQrfmVeobO02KHX9cc3M1IX
2VCXmiT5EgRBXB9caXlJLSFZUyrf/gBdyRfQ4F3K7kRSFjbgA8HuxBpWfC0O
rmx+Hz6kq2VT87iYb77Al9rQ2vB0LL401rTINyDofHJmn2BkGyio+x0Manvp
Smwx54CsH1SMfnV7hbCgqLvbiwNs6wRjQGfqY/sVsoWdwwoLXdla0KLsZxpV
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
5v8A7utEHg==
    "], {{0, 573}, {639, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVWAdUFEuXrp7IDMOQc84555xzzjkMOeeMSkaSEgSUJIIKggomgoiICCJB
BBUwABJEogoqKJJ2eL59/+6e/c+eved09df31Nyprq+q7/2K0zPMyhcGAIgi
ITZWhDjNyEhCgjUF8cE2NCrAL9TH2zA02sfPJ1LBEyI6ZeiJDaCXIYSHB8OI
vUJCoyOt9LU4HBydONAfAA4wABpiBzaCV1S4poWFCfi3tjMJjgOCV6LHsf59
v//VKL19orwAgCyI2Nc7yiuEiDuIWMorPDKaiDeImDsuOpyIj0cJaCKJAyRi
nmPs9wcrHGPPP9jkrz42VtpE7AEACY5AiPQDAHs8Lo5YLz9iHGw+ACiqUO+A
UAAoLhGxmpc/wRsAujliH5GQkDAipscRsYDnf4nj999iev4Tk0Dw+wf/eZe/
DKeurs5hoq1DvKn/P6fk/7aQ4Jj//J/jmccl+mubEe90xIuFg8U9IC0ScAAT
oA10OFhdv/lzWj4FINonPvr4B9ph4QmRAX7+0RyaRLZ8OAxDvcREOKQkJGUB
OOb+T9jvVn9Fhuhe/MvnswKACpEDzNi/fIHnAGjqJ85X7r98fM4AMIoAcPul
V0xk7B8f4rhBAiwgJ64qRsAGuIEAEAVSQA4oAw2gC4yAObABjsANeAF/EAIi
QRw4AVJBFsgDhaAUVIAacBlcAzfBHdAOusBj8BQMgzEwAd6DObAE1sEm2AF7
EAShITKIGmKE2CFeSBiSghQgNUgXMoGsIEfIA/KDQqEY6ASUDuVBxVAFVAs1
Qreh+9BjaBAah95C89Aq9A36DYPDcDAaGCuMDyYOU4BpwoxhNjBXmB8sApYI
y4CdhV2A1cFuwNpgj2HDsAnYHGwdtg0HcFI4HZwTLgpXgGvDzeFOcF94JPwU
PBdeBq+DN8M74QPwV/A5+AZ8F4FCUCM4EKIIZYQBwhbhhYhAnELkIyoQ1xBt
iD7EK8Q8YhNxiCRDsiCFkUpIQ6QD0g8Zh8xCliHrka3IfuQEcgm5g0Kh6FD8
KHmUAcoRFYhKQuWjqlEtqB7UOGoRtY1GoxnRwmhVtDmagI5GZ6HL0TfQj9Av
0UvoXySkJOwkUiR6JE4koSRpJGUkTSTdJC9Jlkn2MBQYXowSxhzjjUnAFGCu
YDoxLzBLmD0sJZYfq4q1wQZiU7EXsM3Yfuw09jspKSkXqSKpJWkAaQrpBdJb
pM9I50l3cVQ4IZw2zgUXgzuLa8D14N7ivpORkfGRaZA5kUWTnSVrJHtCNkv2
C0+NF8Mb4r3xyfhKfBv+Jf4LOYacl1yT3I08kbyM/C75C/INCgwFH4U2BYHi
FEUlxX2KKYptSmpKSUpzyhDKfMomykHKFSo0FR+VLpU3VQbVZaonVIvUcGpu
am1qL+p06ivU/dRLNCgafhpDmkCaPJqbNKM0m7RUtDK0drTxtJW0D2nn6OB0
fHSGdMF0BXR36CbpftOz0mvS+9Dn0DfTv6T/ycDMoMHgw5DL0MIwwfCbkYNR
lzGIsYixnXGGCcEkxGTJFMd0kamfaYOZhlmZ2Ys5l/kO8zsWGIsQixVLEstl
lhGWbVY2Vn3WcNZy1iesG2x0bBpsgWwlbN1sq+zU7GrsAewl7I/Y1zhoOTQ5
gjkucPRxbHKycBpwxnDWco5y7nHxc9lypXG1cM1wY7kVuH25S7h7uTd52HlM
eU7wXOd5x4vhVeD15z3PO8D7k4+fz57vNF873wo/A78hfyL/df5pATIBdYEI
gTqB14IoQQXBIMFqwTEhmJCskL9QpdALYZiwnHCAcLXwuAhSRFEkVKROZEoU
J6opGit6XXRejE7MRCxNrF3siziPuJN4kfiA+KGErESwxBWJ95JUkkaSaZKd
kt+khKS8pCqlXkuTSetJJ0t3SG/JCMv4yFyUeSNLLWsqe1q2V/ZATl4uUq5Z
blWeR95Dvkp+SoFGwUIhX+GZIlJRSzFZsUtxV0lOKVrpjtJXZVHlIOUm5RUV
fhUflSsqi6pcqgTVWtU5NQ41D7VLanPqnOoE9Tr1BQ1uDW+Neo1lTUHNQM0b
ml+0JLQitVq1fmoraZ/U7tGB6+jr5OqM6lLp2upW6M7qcen56V3X29SX1U/S
7zFAGhgbFBlMGbIaehk2Gm4ayRudNOozxhlbG1cYL5gImUSadJrCTI1Mz5lO
m/GahZq1mwNzQ/Nz5jMW/BYRFg8sUZYWlpWWn6wkrU5YDVhTW7tbN1nv2GjZ
FNi8txWwjbHttSO3c7FrtPtpr2NfbD/nIO5w0mHYkckxwLHDCe1k51TvtO2s
61zqvOQi65LlMunK7xrvOujG5Bbs9tCd3J3gftcD6WHv0eSxTzAn1BG2PQ09
qzw3vbS9znute2t4l3iv+qj6FPss+6r6Fvuu+Kn6nfNb9Vf3L/PfCNAOqAjY
CjQIrAn8GWQe1BB0FGwf3BJCEuIRcj+UKjQotC+MLSw+bDxcODwrfC5CKaI0
YjPSOLI+CopyjeqIpiEm2ZEYgZjMmPlYtdjK2F9xdnF34ynjQ+NHEoQSchKW
E/USryYhkrySek9wnkg9MX9S82TtKeiU56neZO7kjOSlFP2Ua6nY1KDU52kS
acVpP9Lt0zszWDNSMhYz9TOvZ+GzIrOmTiufrslGZAdkj+ZI55TnHOZ65w7l
SeSV5e3ne+UPnZE8c+HM0Vnfs6MFcgUXC1GFoYWTRepF14opixOLF8+Znmsr
4SjJLflR6l46WCZTVnMeez7m/NwFkwsd5TzlheX7Ff4VE5ValS1VLFU5VT+r
vatfXtS42FzDWpNX8/tSwKU3tfq1bXV8dWWXUZdjL3+6Yndl4KrC1cZ6pvq8
+oOG0Ia5a1bX+hrlGxubWJoKrsOux1xfveFyY+ymzs2OZtHm2ha6lrxb4FbM
rbXbHrcn7xjf6b2rcLf5Hu+9qlbq1tw2qC2hbbPdv32uw7Fj/L7R/d5O5c7W
B2IPGro4uyof0j4s6MZ2Z3QfPUp8tN0T3rPx2O/xYq977/snDk9e91n2jfYb
9z97qvf0yYDmwKNnqs+6BpUG7w8pDLUPyw23jciOtD6Xfd46Kjfa9kL+RceY
4ljnuMp490v1l49f6bx6+trw9fCE2cT4pO3kmymXqbk33m9W3ga/3XoX+27v
fco0cjp3hmKmbJZltu6D4IeWObm5h/M68yML1gvvF70W1z9GfdxfyvhE9qls
mX25cUVqpWtVb3VszXltaT18fW8j6zPl56ovAl/ufdX4OrLpsLm0Fbl19C3/
O+P3hh8yP3q3LbZnd0J29n7m/mL8dW1XYXfgt/3v5b24ffT+hQPBg85D48Pp
o5Cjo3BCJOGvUgBOvGC+vgB8awCAzBEA6jFi/YT/U5v9bXBi8XFcy9pBujBN
uAKCAYlFkaAlSBwx6dhHOBQZAd9OgaUMphqikaWtogcMQYyjzHIshazr7Boc
BZzj3FgeRV5HviD+EAEXQS0hVqEt4aci5aJBYqriZOIfJFokU6QspTmlP8vc
l82Us5RnkV9SaFaMV9JUxiq/UqlS9VYTUfum3q5xQlNLC6f1Qbtbp0m3Wq9I
/5QBwVDdiMFoy3jEpNm02qzWvMti0QppzWjDZEthB7fbt99zBE4YZ7wLmSvC
ddttwX3Mo4dw17Peq9w71yfB18/Pxl8rQCZQKIgzmDGEPBQe+iNsIXws4kHk
laiz0ckxWbGt8YgEn8SeE+Ak3ymlZMMU59SYtLPppRlJmTKZi1kFpy2yeXNI
c0EeLJ/yjMBZtQKzQvsip2Kncw4ldqU2ZZbnzS4Yl+tXaFWqVSlWS18UrRG6
JFFrXJd+ee6qYf2NhvVGyibe65I3lG/qNJu22N9yv+1/J/xu3L1TrWltme3Z
HXn3CzpLH1R11T+8193/aKpn7vFkb8sT3z6Gvmf9ZU/jBnyfuQ7aD1kOG4/o
PzcYtXkRMXZp/O0r0tfiE9qThlO6bxTe8r7Dv9t9vzL9Zubx7OUP6XN+87YL
ZoumH82XzD8ZLSuu0K/MreauyazNrV/bSPxs8IXkS+NX/a+Lm5e34r+5fTf/
YboduNP76/Tv9gOdo6O/+ZeEI+CriDnkImqTBI6Rw/qTVuHm8ELkcRRPqRip
E2he00nRpzHMMMkyZ7GMsTGxO3AUcXZxTXNv8+zwrvE9578sECmoJkQi9Fq4
RiRQVFb0UOyp+FkJe0l2yWWpZulYGVVZSLZfLlfeXIFaYVKxXMlZmVV5mrgK
XNQY1abUz2s4a/Jp7mlNaN/Wydf10VPRp9T/ZNBlWGoUa+xj4mnqbxZmHmLh
aWlupWwtZMNsi7eD2e3YLztMOj5xanaudMl1TXQLcHfw0CGIezJ4QV5r3hM+
fb6tfvX+ZQEZgWFBjsEaIfyhZMSVMB8+G/EjijPaPaY89nHcm/jFhI3E3ROk
J9lOCSRzpKBSPqS2phWkR2a4ZdpmOZwOyE7Pqc69mdea33bm3tnbBTcLG4uu
Fl86V1lSWlpQlnM+7UJCeViFX2VAVUr1oxrBS9fq+C8XX3l1dbcBf42pkbtJ
iLgO5G+qNeu0mN5yvB18J+vu5XvdreNts+0rHd874Q/ou4QfKndrPJLv4XwM
e7zQO/Ckta+hv/Jp4UDms8TByKHo4ZyRrlG6FyfHZl4yvVJ/bTPhO5kydfXN
i7c/3lNNi86YzIZ/OD/3YP7lwuziwsf1T0gi+6mr4+uUGxKfZb/wfSX/+mvz
09bUt6Hv93/Ubifv2P3k/7nzq2s38bfyHm5f52D1b/7FoHVYNdwNIYhEI7dQ
q+g1kgXMFikWx0umiXciT6W4QTlOdUTDS6tLF0ifyVDDeI+pn/kZy1PWB2y1
7PEcWhy/Oa9wGXOtc2fz8PP08rrx7vKV8EvwDwn4CaIFG4QMhJaFs0QERPpF
vcSAWLW4ivgbiRhiddMiZSK1Ip0uwybTIWsluyGXKc8u306sWlYUk5XolK4r
ayq/VPFS+aKapIZWq1SXUZ/USNRk0+zQMtd6q+2vfaRTp2uhh9F7on/CQMZg
zbDOyMWYwXjSpNTU2ozcbNA83ULZ4odli1WQNb/1R5taW1c7RrvX9gUOBg5H
jq1Owc48zjMuZa5mrjtuJe687vc8ND3eEeI9uTzfEL8j/j76vvJ+iv6GAYTA
kCBCsHoIRch06NWwkHDZ8P2IJ5G5URbRtNHvY2piveP44j7FX0zQTZhODE6i
SXp14sHJ7lN9yU9S7qc2ppWlp2eEZTpn6Z4WykZmv84pz3XK48nby5878/zs
/YJLhaeKnIuVzjGd2y2ZLL1Tdv78mQvF5bUVdyufVr2pXru4d4mslqNO+rLB
FZerYfWnGnKu5TemNBGuy9/A3/h283Pz7i3cbbY7Unct7iW13mv71aF4P7yz
/MGtro6HD7oHH20/1u+932fdvz1QNig99HrkzKjHmOFLzddak8Fv8dPrC6Nr
2z92j/n/o9GPDSUHwLlUokLNAsCWKKiL+og6c4KoO7EAWJABYKMIYHy+AIYb
AZDS/D/5AyJmGxQgBZSAAbADfiABlIAOUWk6AV8QRVSXBeAiaAbd4AWYBz+I
ypEFkoT0IXcoDiqCbkDPoE8wFEwAZgKLglUTdd4RUdfFwu/DDxH6iHOIBaQ0
Mhv5AaWEKkftERXWEIk8SQOGGVOEJcXmkGJJC3FMuAYyGbIuvCq+k1yB/AGF
AcV7ymgqCqqb1DrU4zQ2NOO05rQv6dzpftGXM6gyzDKeZGJm6mR2Y8GwdLHG
ssmwfWe/wxHJKcu5zzXAXcbjz6vCh+eb478rkC3oKaQpzCeCF9kT/SL2UXxC
olUySUpSalY6W0ZW5qtsh1yxfIKCt6KJkoQyvQpeVUytUkNY84zWoPZXXRI9
Wn1GAxZDHiMZYzOTCNMLZn3m3yy5reytz9oM2CHsdRyyHEec6Vw8XZvcPnqg
CJSeKM9tryXvaZ81P3J/44DSwOVglZCS0C/hRhFNUbjoiJh3cXrxHYmiSfUn
OU5VptClFqVjM1Izt08HZq/n5uWHnG0tojzHVPK5rPGCewVd5Vj1mRr9S9t1
BVdormbX71wLavx2vfCmbgvlra07n+6ttK13LHcudm09on+s/cSt32PAelB9
WPy54Au58dBXv6YQ7zDTNR+o57uX8Csn1jU/t3zd+yb3Q28H+/PMr6Hdld9L
e2/37x0UHnoeSfz1/TjmHw1wgAowAk4gBKSBKjAANsADhIAkkAPKQSO4D4bB
DNiEkBATJPEX+wlQCXQLGoU+w8hh0jAnWDrsDmwJzg53h1+BbyDkEBmICaQg
MhU5TeS+Eg3Q/ugJEl2SDow4pgkriL1BKkP6CGeBWySLx2PwpeSc5LeI+vU9
ZRwVHVU7tR31Z5qTtFjaC3SidEP0YQz0DD2MAUw0TD3MYSw8LNOs5WwO7Azs
bzmqOb25JLgB92ue67wZfC78MkQttyY4InSXmMUKRNPFTohHS3hJakjhpEal
c2WMZellt+Teyg8otCnWKeUrJ6rEquaodaj/1JTW8tbO06nXbdN7oP/A4KHh
oNG8CcxUyMzOPNOi3XLDmsfG3bbabtaByzHQqc0F7WrvVuHe7zFO6PVs9Mr2
DvCx8jXwc/RPC+gJIgv2DOkKYwpPjJiJ0opujCWPC48fTuRMij0xdko2+Uoq
c1pJBjYzKWsjm5CzkJd4RqIAVjhTfLsktkzm/Lfy25Ux1UoXf1+qr5O6XH1l
uZ6/wf/arSb661U3VZs/3yq/o3h3tJXQttdR12nZBR42PjLp2eqt6fN8qvSM
cwgx/Px57AvUWO5L3Ku6Cfcp07fB7xtmlufYFyw+pn7qXqVfL/zCt/n8e8lO
/q7hntT+xYOPh1t/848AGEBB3P2cQBjIAW1gAdyI3J8k7vxacA88A7PEfY+D
+CANyBVKgiqhh9A8DENknQArhY3BaeE+8IcIFkQKYg3piHyO0kY9RKuiH5OY
kMxgorDk2Fukdjg4rp0sAi+J/0XeT1FOGUPlSG1IY0RrSWdEL88gyCjL5M6c
wBLN6slmw27GYcppymXCbcpjxevOF8V/RqBJ8JnQqgiZqLyYr3iFxKQUk7S3
TIvsnryFwnOlHBVHNaR6oca+lrF2OpHBdr0u/W6DUcM9Y2OTNjMx8xuWYlZt
Ntq2k/YhjlinGy52bpQepJ7u3s4+H/2U/fMCPgVZBY+Emoa9jHCOXIlOimWL
m014mtRzsjrZNuV3Wm2GXRb76c2ch3n5Z3wL9IsYi4dLfEt3zqeXU1bUVclV
P6/xrYXqqq4oXJ1oiGlkbnp2I7lZ/5b4Hb17yW11HQWdjl30D6ceVT52fILu
u/pUZuDBoO7Q1Ej8qPgYfHzz1crE+FTRW/531e8PZ3Rncz8Mz5Mv2C5e+rj6
SXI5aOXS6rO1tQ3kZ5YvEl91Nu23CN+8v1v84PqxvX1mh2Wn6afiz4qfu7/s
f7Xt0u1G7rbt7v3W+J3xe3APv2e9d35vbJ9kX2M/fv/2/uoB54HjQfHB0MHB
oeSh9+H5w+HDwyPJI5+jC0cjx/xH+UpL/TklxWkBgJw9OvrOBwC6GICDoqOj
vbqjo4PLRLExDUBP8J9z379yDQUAVZvHaLhjG/s/z17/A7BRIfc=
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "PixelXDimension" -> 639, "PixelYDimension" -> 573]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{639, 573},
  PlotRange->{{0, 639}, {0, 573}}]], "Output",
 CellChangeTimes->{3.7716959600666227`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"27b92ae4-f7a6-4820-a407-377c123c967e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetSystemInput", "[", "]"}]], "Input",
 CellChangeTimes->{{3.771695525795452*^9, 3.771695574175099*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"b7fec52c-32b0-46f7-b13d-2181c1afa83a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`p["H2"], 
       $CellContext`t["Combine"], 
       $CellContext`p["O2"], 
       $CellContext`p["H2O"], 
       $CellContext`t["Hydrolysis"]}, {{{1, 2}, {3, 2}, {2, 4}, {4, 5}, {5, 
       1}, {5, 3}}, Null}, {EdgeLabels -> {"EdgeWeight"}, VertexShapeFunction -> {
         $CellContext`vsf[6]}, EdgeWeight -> {2, 1, 2, 2, 2, 1}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.}, {0.7216032021151695, 0.2667844609347928}}, 
          0.019744264675954998`], 
         InsetBox["2", {0.36080160105758474, 0.1333922304673964}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7216032021151695, 0.2667844609347928}, {
          1.6544102685726685`, 0.6070061944014847}}, 0.019744264675954998`], 
         InsetBox["2", {1.188006735343919, 0.43689532766813877}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.001633860331949566, 1.2166071367046363`}, {
          0.7216032021151695, 0.2667844609347928}}, 0.019744264675954998`], 
         InsetBox["1", {0.3616185312235595, 0.7416957988197146}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.6544102685726685`, 0.6070061944014847}, {
          0.7225159458638541, 0.950177583092265}}, 0.019744264675954998`], 
         InsetBox["2", {1.1884631072182614, 0.7785918887468748}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7225159458638541, 0.950177583092265}, {0., 0.}}, 
          0.019744264675954998`], 
         InsetBox["2", {0.3612579729319271, 0.4750887915461325}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7225159458638541, 0.950177583092265}, {
          0.001633860331949566, 1.2166071367046363`}}, 0.019744264675954998`],
          InsetBox["1", {0.36207490309790186, 1.0833923598984505}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {CircleBox[{0., 0.}, 0.11846558805572999], 
         TagBox[InsetBox["H2", {0.15795411740763998, 0.15795411740763998}],
          "InsetString"]}, {
         {GrayLevel[0], Opacity[0], 
          RectangleBox[{0.6031376140594396, 0.1483188728790628}, \
{0.8400687901708994, 0.3852500489905228}]}, 
         TagBox[InsetBox["Combine", {0.8795573195228095, 0.4247385783424328}],
          
          "InsetString"]}, {
         CircleBox[{0.001633860331949566, 1.2166071367046363}, 
          0.11846558805572999], 
         TagBox[InsetBox["O2", {0.15958797773958955, 1.3745612541122763}],
          "InsetString"]}, {
         CircleBox[{1.6544102685726685, 0.6070061944014847}, 
          0.11846558805572999], 
         TagBox[InsetBox["H2O", {1.8123643859803085, 0.7649603118091247}],
          "InsetString"]}, {
         {GrayLevel[0], Opacity[0], 
          RectangleBox[{0.6040503578081242, 0.831711995036535}, \
{0.8409815339195841, 1.068643171147995}]}, 
         TagBox[InsetBox["Hydrolysis", {0.8804700632714941, 1.108131700499905}],
          "InsetString"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.771695606771525*^9, 3.77169567452417*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"bf56fd9e-7926-4061-90e9-eff31fb8a113"]
}, Open  ]],

Cell["\<\
As we said above, Petri net can be applied for many math models, population \
dynamics is one of the example. There are three transitions: birth, which \
inputs one rabbit and outputs two rabbits like asexual reproduction; \
predation, which converts rabbit plus wolf to two wolves, and death, which \
inputs one wolf and outputs nothing.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 3.771695505568714*^9}, {3.771695690669389*^9, 
   3.771695703386022*^9}, {3.771695871282113*^9, 3.77169589398473*^9}, {
   3.7716963476442757`*^9, 3.771696384002108*^9}, {3.7716965013217783`*^9, 
   3.771696513893384*^9}, {3.77169661595752*^9, 3.771696646082157*^9}, 
   3.77169693558899*^9},ExpressionUUID->"c7df0fe5-bb17-4843-8414-\
3f4fb5769715"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PetriNetSystemInput", "[", "]"}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"e7ada871-bbc0-4614-ba45-f608f671cb76"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`p["rabbit"], 
       $CellContext`t["birth"], 
       $CellContext`t["predation"], 
       $CellContext`p["wolf"], 
       $CellContext`t["death"], 
       $CellContext`p["\"\""]}, {{{1, 2}, {2, 1}, {1, 3}, {4, 3}, {3, 4}, {4, 
       5}, {5, 6}}, Null}, {EdgeLabels -> {"EdgeWeight"}, VertexShapeFunction -> {
         $CellContext`vsf[6]}, EdgeWeight -> {1, 2, 1, 1, 2, 1, 0}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[BezierCurveBox[{{0.9002730317078405, 
          1.8653842788254388`*^-8}, {
          0.45013651892137285`, -0.14804156067592544`}, {0., 0.}}], 
          0.04296902239096052], 
         InsetBox["1", {0.4501365171596893, -0.0630191028926275}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.9002730317078405, 1.8653842788254388`*^-8}, {
          1.9488366327386855`, 2.6393025463815414`*^-8}}, 
          0.04296902239096052], 
         InsetBox["1", {1.4245548322232628, 2.25234341260349*^-8}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[BezierCurveBox[{{0., 0.}, {0.450136512786468, 
          0.14804157932976772`}, {0.9002730317078405, 
          1.8653842788254388`*^-8}}], 0.04296902239096052], 
         InsetBox["2", {0.4501365145481512, 0.06301912154647024}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[BezierCurveBox[{{1.9488366327386855`, 
          2.6393025463815414`*^-8}, {2.4930115362429315`, 
          0.1789690805780942}, {3.037186438989782, 2.4090102857317292`*^-8}}],
           0.04296902239096052], 
         InsetBox["2", {2.4930115360254383, 0.07618451167914092}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[BezierCurveBox[{{3.037186438989782, 
          2.4090102857317292`*^-8}, {
          2.4930115354855378`, -0.1789690300949661}, {1.9488366327386855`, 
          2.6393025463815414`*^-8}}], 0.04296902239096052], 
         InsetBox["1", {2.4930115357030296, -0.07618446119601269}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3.037186438989782, 2.4090102857317292`*^-8}, {
          4.086632074782829, 1.5278517068972532`*^-8}}, 0.04296902239096052], 
         InsetBox["1", {3.561909256886305, 1.9684309963144914*^-8}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{4.086632074782829, 1.5278517068972532`*^-8}, {
          4.986178942563326, 2.659584889744491*^-9}}, 0.04296902239096052], 
         InsetBox["0", {4.536405508673077, 8.96905097935851*^-9}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         CircleBox[{0.9002730317078405, 1.8653842788254388*^-8}, 
          0.25781413434576317], 
         TagBox[InsetBox["rabbit", {1.2440252108355248, 0.343752197781527}],
          "InsetString"]}, {
         {GrayLevel[0], Opacity[0], 
          RectangleBox[{-0.25781413434576317, -0.25781413434576317}, \
{0.25781413434576317, 0.25781413434576317}]}, 
         TagBox[InsetBox["birth", {0.3437521791276842, 0.3437521791276842}],
          "InsetString"]}, {
         {GrayLevel[0], Opacity[0], 
          RectangleBox[{1.6910224983929223, -0.2578141079527377}, \
{2.2066507670844486, 0.25781416073878866}]}, 
         TagBox[InsetBox["predation", {2.2925888118663695, 0.3437522055207097}],
          "InsetString"]}, {
         CircleBox[{3.037186438989782, 2.4090102857317292*^-8}, 
          0.25781413434576317], 
         TagBox[InsetBox["wolf", {3.380938618117466, 0.34375220321778704}],
          "InsetString"]}, {
         {GrayLevel[0], Opacity[0], 
          RectangleBox[{3.8288179404370655, -0.2578141190672461}, \
{4.344446209128591, 0.25781414962428023}]}, 
         TagBox[InsetBox["death", {4.430384253910513, 0.34375219440620125}],
          "InsetString"]}, {
         CircleBox[{4.986178942563326, 2.659584889744491*^-9}, 
          0.25781413434576317], 
         TagBox[InsetBox["\<\"\"\>", {5.32993112169101, 0.3437521817872691}],
          "InsetString"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.7716965841635227`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"7d798c55-a5f9-4787-bb69-c9bbe79b4491"]
}, Open  ]],

Cell["\<\
With the Petri net structure visualized, we can input the structure, with the \
vertex weight of places interpreted as amount in current state, vertex weight \
of transitions interpreted as transition rate, we can build a system of ODEs \
and make a plot, which we will leave it for future effort.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 3.771695505568714*^9}, {3.771695690669389*^9, 
   3.771695703386022*^9}, {3.771695871282113*^9, 3.77169589398473*^9}, {
   3.7716963476442757`*^9, 3.771696384002108*^9}, {3.7716965013217783`*^9, 
   3.771696513893384*^9}, {3.77169661595752*^9, 3.771696646082157*^9}, {
   3.77169693558899*^9, 3.7716970645060987`*^9}, {3.77169731579698*^9, 
   3.771697320238237*^9}},ExpressionUUID->"e1bcc965-ffb4-47f7-bd61-\
1aeb9c53b6c0"],

Cell["\<\
Petri net can also be applied to deal with problems in physics and computer \
science. For example, deadlock is a topic with scheduling problems in \
operating systems. Below is an example of a deadlock Petri net. As in the \
case of reachability, we want to develop higher order tools to study if a \
given Petri net is deadlocked or not. With this, we might find easier to \
design scheduling mechanisms in our operating systems.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.7716947297416763`*^9, 
   3.7716947501930017`*^9}, {3.771694868576408*^9, 3.771694897160424*^9}, {
   3.771694968449177*^9, 3.771695051438862*^9}, 3.771695325378477*^9, {
   3.771695368095665*^9, 3.771695505568714*^9}, {3.771695690669389*^9, 
   3.771695703386022*^9}, {3.771695871282113*^9, 3.77169589398473*^9}, {
   3.7716963476442757`*^9, 3.771696384002108*^9}, {3.7716965013217783`*^9, 
   3.771696513893384*^9}, {3.77169661595752*^9, 3.771696646082157*^9}, 
   3.77169693558899*^9, {3.7716973476313763`*^9, 3.77169737586439*^9}, {
   3.7716976691649218`*^9, 3.771697701333008*^9}, {3.771697856543295*^9, 
   3.77169791351011*^9}},ExpressionUUID->"8fa3f569-aca2-48ee-a506-\
5252ee20ea25"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graph", " ", "=", " ", 
   RowBox[{"petriNetData", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<States\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ",", 
      RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}]}], ",", " ", 
      RowBox[{"\"\<Arcs\>\"", "->", " ", 
       RowBox[{"List", " ", "@@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t1", "\[Rule]", "a"}], ",", " ", 
          RowBox[{"a", "\[Rule]", " ", "t2"}], ",", " ", 
          RowBox[{"t2", "\[Rule]", "b"}], ",", " ", 
          RowBox[{"b", "\[Rule]", " ", "t1"}], ",", " ", 
          RowBox[{"c", "\[Rule]", "t2"}], ",", " ", 
          RowBox[{"t3", "\[Rule]", "c"}], ",", " ", 
          RowBox[{"b", "\[Rule]", "t3"}]}], "}"}]}]}]}], "|>"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"petriNetInit", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.771697777843486*^9, 3.771697852935482*^9}, {
  3.77170422094121*^9, 3.7717042213963213`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"7bbcc280-f96c-4873-b170-0f1802eee880"],

Cell[BoxData[
 RowBox[{"petriNetInit", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"petriNetQ", "[", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"States\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ",", 
        RowBox[{"\<\"Transitions\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}]}], ",", 
        RowBox[{"\<\"Arcs\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1", ",", "a"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "t2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t2", ",", "b"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", "t1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "t2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t3", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", "t3"}], "}"}]}], "}"}]}]}], 
       "\[RightAssociation]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}]}], "]"}], ",", 
         RowBox[{"Apply", "[", 
          RowBox[{"DirectedEdge", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t1", ",", "a"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "t2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t2", ",", "b"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", "t1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "t2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"t3", ",", "c"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"b", ",", "t3"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], ",", 
         RowBox[{"VertexShapeFunction", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], 
              "\[Rule]", "\<\"Circle\"\>"}], "]"}], ",", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}], 
              "\[Rule]", "\<\"Square\"\>"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"VertexLabels", "\[Rule]", "\<\"Name\"\>"}], ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], "\[Rule]", 
              "LightBlue"}], "]"}], ",", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}], "\[Rule]", 
              "LightGray"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"VertexSize", "\[Rule]", "Large"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "t2", ",", "t3"}], "}"}], ",", 
       RowBox[{"Apply", "[", 
        RowBox[{"DirectedEdge", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1", ",", "a"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "t2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t2", ",", "b"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", "t1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "t2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t3", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"b", ",", "t3"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"$Failed", ";", 
      RowBox[{"Print", "[", "\<\"Fail!\"\>", "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7716978318830442`*^9, 3.771697853390768*^9}, {
  3.771713951880422*^9, 3.7717139754166603`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"96d6ca21-4d67-4f93-b183-8752161fdaf3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Discussion about mathematical properties of Petri net", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739268125187069*^9, 3.739268132398716*^9}, 
   3.739268170709621*^9, {3.770587674674659*^9, 3.770587692165453*^9}, {
   3.770679883724312*^9, 3.770679886167111*^9}, {3.771686153143614*^9, 
   3.77168616186693*^9}, {3.771686390761941*^9, 3.771686398964229*^9}, {
   3.771686793052129*^9, 3.77168680115561*^9}, {3.771694694734561*^9, 
   3.7716947139074*^9}},ExpressionUUID->"279dc39f-7aa9-42ff-b33e-\
9b7037ca48c0"],

Cell["\<\
Petri net, as a mathematical modeling language, indeed is not limited to \
visualize chemical processes. In fact, any mathematics model can be somewhat \
expressed with Petri net. However, from Wikipedia, papers written by John \
Baez, and StateBox archive, here are some open questions discussed with Petri \
net. 
The first problem is Reachability. According to Wikipedia, The reachability \
problem for Petri nets is to decide, given a Petri net N and a marking M, \
whether M can be reached from current state. This problem actually is not \
easy, and it was shown to be EXPSPACE-hard. But these days it turned out to \
be elementary. Here is a function named petriNetReachableQ.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.77169512157964*^9, 
   3.771695123755262*^9}, {3.771695231851619*^9, 3.771695317034935*^9}, {
   3.771696283778915*^9, 3.771696296888157*^9}, {3.771696669969494*^9, 
   3.771696827707355*^9}},ExpressionUUID->"39481659-13e6-4eaf-807b-\
cded3f9a5c68"],

Cell[TextData[{
 StyleBox["petriNetReachableQ [ Neural Net ",
  FontWeight->"Bold"],
 StyleBox["n",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["init",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", Node ",
  FontWeight->"Bold"],
 StyleBox["m ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]",
  FontWeight->"Bold"],
 "\nInput: \tA Petri net named n, the initial condition of states, and the \
node marked as m we want to check.\nReturn: \tTrue if for Net n, m is \
reachable given the initial condition init in finite steps, else return False."
}], "Text",
 CellChangeTimes->{{3.771696816633993*^9, 3.771696819201316*^9}, {
  3.771715671344273*^9, 3.7717156753118258`*^9}, {3.771715722397258*^9, 
  3.7717157253661833`*^9}, {3.7717173170507183`*^9, 
  3.77171738022875*^9}},ExpressionUUID->"c05f5f9d-9536-43d2-a0ac-\
c834a28b5b58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "petriNetReachableQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"petriNetReachableQ", "[", 
   RowBox[{"pnet_", ",", " ", "init_", ",", " ", "place_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"states", ",", " ", "places", ",", " ", "assoc"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"states", " ", "=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{"updateFiring", "[", "pnet", "]"}], ",", " ", "init", " ", 
         ",", " ", "100"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"places", " ", "=", " ", 
      RowBox[{"First", " ", "@", " ", 
       RowBox[{"Rest", " ", "@", " ", "pnet"}]}]}], ";", "\n", "\t", 
     RowBox[{"assoc", " ", "=", " ", 
      RowBox[{"Association", "[", 
       RowBox[{"Thread", "[", 
        RowBox[{"places", " ", "->", " ", "states"}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"assoc", "[", "place", "]"}], " ", "===", " ", "0"}], ",", 
       " ", "False", ",", " ", "True"}], "]"}]}]}], "\n", "]"}]}]}], "Code",
 CellLabel->"In[56]:=",ExpressionUUID->"4a8d687b-4ebd-4972-b12f-ee4056af7447"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"petriNetReachableQ", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "0", ",", "0", ",", "5", ",", "3", ",", "0", ",", 
     "2"}], "}"}], ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.7716968813817244`*^9, 3.771696886436714*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"630e1d64-dcde-4cdf-93b1-bdd632dc6276"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7716968868802977`*^9, 3.7717051123631897`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"2c80373a-e2aa-456a-8b6f-340516da43e3"]
}, Open  ]],

Cell["\<\
There are other properties remain discussed, such as boundedness and \
liveness. These are interesting graph properties we want to discuss here in \
Petri net.
For a place p in a Petri Net, it is k-bounded if it never contains more than \
k tokens in any reachable marking. For example, traffic light nets are \
bounded, since every places are 1-bounded, which means the system is in safe.\
\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.77169512157964*^9, 
   3.771695123755262*^9}, {3.771695231851619*^9, 3.771695317034935*^9}, {
   3.771696283778915*^9, 3.771696296888157*^9}, {3.771696669969494*^9, 
   3.771696827707355*^9}, {3.7716969169297523`*^9, 3.771696929512937*^9}, {
   3.7716970775570087`*^9, 3.771697083230299*^9}, {3.771697494600211*^9, 
   3.771697535607205*^9}, {3.771702959036673*^9, 3.771703024340678*^9}, {
   3.771703108181348*^9, 3.771703162159461*^9}, {3.7717032016947317`*^9, 
   3.771703206511592*^9}, {3.77170371797051*^9, 3.7717037249455833`*^9}, {
   3.77170426351781*^9, 3.7717042670876427`*^9}, {3.771715638099299*^9, 
   3.771715658927635*^9}, {3.7717174321151876`*^9, 
   3.771717471086503*^9}},ExpressionUUID->"5fe5c16d-a8da-4258-9f77-\
96af2198a094"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graph", " ", "=", " ", 
   RowBox[{"petriNetData", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<States\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "red1", ",", "green1", ",", "red2", ",", "green2", ",", "blue"}], 
        "}"}]}], ",", 
      RowBox[{"\"\<Transitions\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"t1", ",", "t2", ",", "t3", ",", "t4"}], "}"}]}], ",", " ", 
      RowBox[{"\"\<Arcs\>\"", "->", " ", 
       RowBox[{"List", " ", "@@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t1", "\[Rule]", "red1"}], ",", " ", 
          RowBox[{"red1", "\[Rule]", " ", "t2"}], ",", " ", 
          RowBox[{"t2", "\[Rule]", "green1"}], ",", " ", 
          RowBox[{"green1", "\[Rule]", " ", "t1"}], ",", 
          RowBox[{"t1", "\[Rule]", "blue"}], ",", 
          RowBox[{"blue", "\[Rule]", "t2"}], ",", 
          RowBox[{"t3", "\[Rule]", "blue"}], ",", " ", 
          RowBox[{"blue", "\[Rule]", "t4"}], ",", " ", 
          RowBox[{"t3", "\[Rule]", "red2"}], ",", 
          RowBox[{"red2", "\[Rule]", "t4"}], ",", 
          RowBox[{"t4", "\[Rule]", "green2"}], ",", 
          RowBox[{"green2", "\[Rule]", "t3"}]}], "}"}]}]}]}], "|>"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"petriNetRun", "[", 
      RowBox[{"graph", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
       "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.771703567020509*^9, 3.771703732348633*^9}, {
  3.771703772714531*^9, 3.771703791775477*^9}, {3.771703906250309*^9, 
  3.7717039279011307`*^9}, {3.771704149218421*^9, 3.771704204702306*^9}, {
  3.771704368641858*^9, 3.771704373987549*^9}, {3.7717046690348473`*^9, 
  3.771704679200719*^9}, {3.77170479671434*^9, 3.7717048457357893`*^9}, {
  3.771711795049801*^9, 3.7717117955439987`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ef160bd1-5d06-4085-8f89-8310f811f356"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i11$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i11$$ = 1}, 
     "\"max\"" :> {$CellContext`i11$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i11$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i11$4139$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i11$$], {1, 10, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->1252.0432949066162`,
                  AnimationRunning->True,
                  AnimationTimeIndex->4.164946026272446,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text[
                    "\[FilledSmallCircle]", {1.8881511798051205`, 
                    0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 1, 0, 1, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.8881511798051205`, 0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 2->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text["", {3.775875281928957, 0.00002396731969700472}], 
                    Text[
                    "\[FilledSmallCircle]", {3.7775747648297067`, 
                    0.8706715805976326}], 
                    Text["", {1.8881511798051205`, 0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t3}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 0, 1, 0, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.775875281928957, 
                    0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.7775747648297067`, 0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1.8881511798051205`, 
                    0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 3->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text[
                    "\[FilledSmallCircle]", {1.8881511798051205`, 
                    0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 1, 0, 1, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.8881511798051205`, 0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 4->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]", {0.0009969750671672273, 
                    0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text["", {1.8881511798051205`, 0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {0, 1, 1, 0, 0, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.0009969750671672273, 0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1.8881511798051205`, 
                    0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 5->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text[
                    "\[FilledSmallCircle]", {1.8881511798051205`, 
                    0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 1, 0, 1, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.8881511798051205`, 0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 6->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["", {0., 0.}], 
                    Text[
                    "\[FilledSmallCircle]", {0.0009969750671672273, 
                    0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text["", {1.8881511798051205`, 0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t1}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {0, 1, 1, 0, 0, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0., 0.}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    0.0009969750671672273, 0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1.8881511798051205`, 
                    0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 7->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text[
                    "\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text[
                    "\[FilledSmallCircle]", {1.8881511798051205`, 
                    0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t4}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 1, 0, 1, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.8881511798051205`, 0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 8->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text["", {3.775875281928957, 0.00002396731969700472}], 
                    Text[
                    "\[FilledSmallCircle]", {3.7775747648297067`, 
                    0.8706715805976326}], 
                    Text["", {1.8881511798051205`, 0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t3}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 0, 1, 0, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.775875281928957, 
                    0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.7775747648297067`, 0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1.8881511798051205`, 
                    0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 9->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text["\[FilledSmallCircle]", {3.775875281928957, 
                    0.00002396731969700472}], 
                    Text["", {3.7775747648297067`, 0.8706715805976326}], 
                    Text[
                    "\[FilledSmallCircle]", {1.8881511798051205`, 
                    0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t2}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 1, 0, 1, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.775875281928957, 0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.7775747648297067`, 
                    0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    1.8881511798051205`, 0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None], 10->
                GraphicsBox[
                 NamespaceBox["NetworkGraphics",
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{$CellContext`red1, $CellContext`green1, \
$CellContext`red2, $CellContext`green2, $CellContext`blue, $CellContext`t1, \
$CellContext`t2, $CellContext`t3, $CellContext`t4}, {{{6, 1}, {1, 7}, {7, 
                    2}, {2, 6}, {6, 5}, {5, 7}, {8, 5}, {5, 9}, {8, 3}, {3, 
                    9}, {9, 4}, {4, 8}}, Null}, {Epilog -> {
                    Text["\[FilledSmallCircle]", {0., 0.}], 
                    Text["", {0.0009969750671672273, 0.8712865839339287}], 
                    Text["", {3.775875281928957, 0.00002396731969700472}], 
                    Text[
                    "\[FilledSmallCircle]", {3.7775747648297067`, 
                    0.8706715805976326}], 
                    Text["", {1.8881511798051205`, 0.43562081211516085`}], 
                    Text["", {0.7282402393756344, 0.7032097587268877}], 
                    Text["", {0.7287471057805459, 0.16746829006817465`}], 
                    Text["", {3.04775304556948, 0.7026394436364773}], 
                    Text["", {3.0485451180488417`, 0.168287937834247}]}, 
                    GraphHighlight -> {$CellContext`t3}, 
                    GraphLayout -> {"Dimension" -> 2}, 
                    VertexLabels -> {"Name"}, 
                    VertexShapeFunction -> {$CellContext`t4 -> 
                    "Square", $CellContext`blue -> 
                    "Circle", $CellContext`red1 -> 
                    "Circle", $CellContext`green2 -> 
                    "Circle", $CellContext`t2 -> "Square", $CellContext`red2 -> 
                    "Circle", $CellContext`t1 -> "Square", $CellContext`t3 -> 
                    "Square", $CellContext`green1 -> "Circle"}, 
                    VertexSize -> {Large}, 
                    VertexStyle -> {$CellContext`t4 -> 
                    GrayLevel[0.85], $CellContext`t1 -> 
                    GrayLevel[0.85], $CellContext`red1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`green1 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`blue -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`red2 -> 
                    RGBColor[0.87, 0.94, 1], $CellContext`t3 -> 
                    GrayLevel[0.85], $CellContext`t2 -> 
                    GrayLevel[0.85], $CellContext`green2 -> 
                    RGBColor[0.87, 0.94, 1]}, 
                    VertexWeight -> {1, 0, 0, 1, 0, 0, 0, 0, 0}}]]}, 
                   TagBox[GraphicsGroupBox[{
                    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                    ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKEYHKlY+xU8Dn9vn3Km6NjP/qD0Dw97Lc0MD7DcL
vUub8vC1fcaf8sp9vs/tZ+yoO7Cx4Zn9d7deyX8mfA4MDRKr1yr+tFtnXDw/
O5nDoWHm8q7SrqP2c6Q95Sot+BymqbUv7brz2v4Rl0fkmUQOhx3dL7ex1jyz
t1/9ieme6T/7v6XxsmYPb9uj248uj24+unvQ/YMuT8g+dP+iuxfdv4T8Qyg8
AIlcrjU=
                    "], 0.10687041856976581`]}, 
                    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
                    0.7]}], {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0., 0.}, 0.10687041856976581]}, 
                    InsetBox["red1", 
                    Offset[{2, 2}, \
{0.10687041856976581, 0.10687041856976581}], ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{0.0009969750671672273, 0.8712865839339287}, 
                    0.10687041856976581]}, 
                    InsetBox["green1", 
                    Offset[{2, 2}, {0.10786739363693304, 0.9781570025036945}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.775875281928957, 0.00002396731969700472}, 
                    0.10687041856976581]}, 
                    InsetBox["red2", 
                    Offset[{2, 2}, {3.882745700498723, 0.10689438588946282}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{3.7775747648297067, 0.8706715805976326}, 
                    0.10687041856976581]}, 
                    InsetBox["green2", 
                    Offset[{2, 2}, {3.8844451833994724, 0.9775419991673984}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {RGBColor[0.87, 0.94, 1], 
                    DiskBox[{1.8881511798051205, 0.43562081211516085}, 
                    0.10687041856976581]}, 
                    InsetBox["blue", 
                    Offset[{2, 2}, {1.9950215983748862, 0.5424912306849267}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6339428049393458, 0.6089123242905992}, \
{0.822537673811923, 0.7975071931631763}]}, 
                    InsetBox["t1", 
                    Offset[{2, 2}, {0.8351106579454002, 0.8100801772966535}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{0.6344496713442573, 0.07317085563188608}, \
{0.8230445402168345, 0.2617657245044632}]}, 
                    InsetBox["t2", 
                    Offset[{2, 2}, {0.8356175243503117, 0.27433870863794046}],
                     ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
                    RectangleBox[{2.953455611133191, 0.6083420092001888}, \
{3.1420504800057687, 0.7969368780727659}]}, 
                    InsetBox["t3", 
                    Offset[{2, 2}, {3.1546234641392457, 0.8095098622062431}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}, {
                    {GrayLevel[0.85], 
                    RectangleBox[{2.954247683612553, 0.07399050339795843}, \
{3.1428425524851304, 0.2625853722705356}]}, 
                    InsetBox["t4", 
                    Offset[{2, 2}, {3.1554155366186074, 0.2751583564040128}], 
                    ImageScaled[{0, 0}],
                    BaseStyle->"Graphics"]}}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                   AllowKernelInitialization->False]],
                 
                 DefaultBaseStyle->{
                  "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                   Hue[0.8, 1., 0.6]},
                 Epilog->{
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {0.,
                     0.}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.0009969750671672273, 
                    0.8712865839339287}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.775875281928957, 
                    0.00002396731969700472}], 
                   InsetBox[
                    FormBox["\"\[FilledSmallCircle]\"", TraditionalForm], {
                    3.7775747648297067`, 0.8706715805976326}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {1.8881511798051205`, 
                    0.43562081211516085`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7282402393756344, 
                    0.7032097587268877}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {0.7287471057805459, 
                    0.16746829006817465`}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.04775304556948, 
                    0.7026394436364773}], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], {3.0485451180488417`, 
                    0.168287937834247}]},
                 FormatType->TraditionalForm,
                 FrameTicks->None]}, Dynamic[$CellContext`i11$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i11$$, \
$CellContext`i11$4139$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 10, 1}, 10, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{393., {82.384033203125, 88.115966796875}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.771703703031824*^9, 3.7717037127610292`*^9}, {
   3.771703774503628*^9, 3.771703792477199*^9}, 3.771703908382625*^9, {
   3.7717041535754213`*^9, 3.7717042051464653`*^9}, 3.771704374474352*^9, 
   3.771704408380343*^9, 3.771704457567012*^9, 3.77170450886168*^9, {
   3.771704538885168*^9, 3.771704559256171*^9}, 3.771704639568351*^9, {
   3.771704669720516*^9, 3.7717046797200203`*^9}, 3.7717047223829517`*^9, {
   3.771704761243367*^9, 3.771704797610691*^9}, 3.771704846693816*^9, 
   3.771705113385499*^9, 3.771714031360915*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"7f9ef9dc-2713-492c-80f5-c94855ec71aa"]
}, Open  ]],

Cell["\<\
We thus write out a function to check the boundedness of a state given an \
initialized Petri net pnet.\
\>", "Text",
 CellChangeTimes->{{3.7717068123897667`*^9, 
  3.771706964739625*^9}},ExpressionUUID->"fee6934f-7e44-4c67-9dd2-\
57a4fe2c93ff"],

Cell[TextData[{
 StyleBox["kBoundedness[Petri net ",
  FontWeight->"Bold"],
 StyleBox["pnet",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["initial state",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[", key ",
  FontWeight->"Bold"],
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["]:",
  FontWeight->"Bold"],
 "\nInput: \tPetri net named ",
 StyleBox["pnet",
  FontSlant->"Italic"],
 ", initial state of the Petri net ",
 StyleBox["pnet",
  FontSlant->"Italic"],
 " and the state key we what to check\nReturn: \tan integer shows the \
boundedness of the state key."
}], "Text",
 CellChangeTimes->{{3.7717068123897667`*^9, 3.771706900945361*^9}, {
  3.771715613654971*^9, 3.7717156146415*^9}, {3.771717306314699*^9, 
  3.771717307284186*^9}},ExpressionUUID->"dd007e70-a51c-433f-8b59-\
ec99aa88e44d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kBoundedness", "[", 
    RowBox[{"pnet_", ",", "init_"}], "]"}], "[", "key_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"states", ",", "length", ",", "assoc", ",", "index"}], "}"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"length", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"First", " ", "@", " ", 
        RowBox[{"Rest", " ", "@", "pnet"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"assoc", " ", "=", " ", 
      RowBox[{"Association", "[", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"First", " ", "@", " ", 
          RowBox[{"Rest", " ", "@", " ", "pnet"}]}], " ", "\[Rule]", " ", 
         RowBox[{"Range", "[", "length", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"states", " ", "=", " ", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{"updateFiring", "[", "graph", "]"}], ",", " ", "init", " ", 
        ",", " ", "100"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"index", " ", "=", "  ", 
      RowBox[{"assoc", "[", "key", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     
     RowBox[{"Max", "[", 
      RowBox[{"states", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "index"}], "]"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.771706522517701*^9, 3.771706720249299*^9}, 
   3.771706762528318*^9, 3.771707020948812*^9, {3.771707087184782*^9, 
   3.771707088331917*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0188ebb6-346d-4c1a-ab09-af181336dd7c"],

Cell["\<\
For example, we want to check the boundedness of the red light from the Petri \
net we created, which is 1.\
\>", "Text",
 CellChangeTimes->{{3.7717068123897667`*^9, 3.771706964739625*^9}, {
  3.7717071611284*^9, 
  3.7717071855720673`*^9}},ExpressionUUID->"cd666199-d28b-4f06-90a0-\
3320ea4fc116"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kBoundedness", "[", 
   RowBox[{"graph", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "[", "red1", "]"}]], "Input",
 CellChangeTimes->{{3.771706975280632*^9, 3.771707073726039*^9}, {
  3.771707110005637*^9, 3.7717071491276712`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"5a7c3ab5-156d-415f-85af-76e49d8162b8"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.771707053946629*^9, 3.7717070741431503`*^9}, {
  3.7717071138538113`*^9, 3.771707152015553*^9}, {3.7717140554756927`*^9, 
  3.771714062902628*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"09ea3935-f2a2-46fe-a3d0-131128a2c025"]
}, Open  ]],

Cell["\<\
On discussion of liveness in Petri net, there are four states in total. 
We will leave the discussion of  liveness and deadlock as future exploration. \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739269300947191*^9, 
   3.739269377705204*^9}, {3.7392694112647457`*^9, 3.739269582175497*^9}, 
   3.739295828274699*^9, {3.770589345954368*^9, 3.770589365656302*^9}, {
   3.770589480308704*^9, 3.770589558142683*^9}, {3.770589599511156*^9, 
   3.77058961716084*^9}, {3.770589688302251*^9, 3.770589717616177*^9}, {
   3.770589881226185*^9, 3.770589905377709*^9}, 3.770674431680434*^9, {
   3.771686441349183*^9, 3.771686462361457*^9}, {3.7716865601729403`*^9, 
   3.77168666103788*^9}, {3.771686809707341*^9, 3.771686855831848*^9}, {
   3.771686907195938*^9, 3.771686935711549*^9}, {3.77169512157964*^9, 
   3.771695123755262*^9}, {3.771695231851619*^9, 3.771695317034935*^9}, {
   3.771696283778915*^9, 3.771696296888157*^9}, {3.771696669969494*^9, 
   3.771696827707355*^9}, {3.7716969169297523`*^9, 3.771696929512937*^9}, {
   3.7716970775570087`*^9, 3.771697083230299*^9}, {3.771697494600211*^9, 
   3.771697535607205*^9}, {3.771702959036673*^9, 3.771703024340678*^9}, {
   3.771703108181348*^9, 3.771703162159461*^9}, {3.7717032016947317`*^9, 
   3.771703208724917*^9}, {3.771703841746282*^9, 3.771703866442018*^9}, 
   3.771704271468914*^9, 3.771705251005595*^9, {3.771706925238618*^9, 
   3.7717069294203*^9}},ExpressionUUID->"e2cdc31a-3bde-4973-b5db-\
56f214baa4d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",
 CellChangeTimes->{{3.736868777412567*^9, 
  3.736868791070746*^9}},ExpressionUUID->"18dcb542-9409-4501-b6e2-\
e99638397d61"],

Cell["plyu122197@gmail.com", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.739266528483267*^9, 3.739266533075754*^9}, {3.7392665700564423`*^9, 
  3.739266570056613*^9}, {3.770587550436644*^9, 3.770587554379435*^9}, {
  3.770632249449527*^9, 
  3.77063229745092*^9}},ExpressionUUID->"cb6c2c71-7797-49cd-9b83-\
7a7c31b5969c"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.771714072993615*^9},ExpressionUUID->"83cee6b6-8550-4a52-bfc4-\
4945c89d24a9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1118, 786},
WindowMargins->{{80, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontWeight -> 
      Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2019", 
      RGBColor[0.97, 0.83, 0.35], FontFamily -> "Source Sans Pro", FontSize -> 
      40]}], CellFrameMargins -> 10, Background -> 
   RGBColor[0.12, 0.14, 0.15]]},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 312, 5, 98, "Title",ExpressionUUID->"49ab34ee-bfd5-49f5-beef-400d3cc456dd"],
Cell[895, 29, 398, 6, 35, "Text",ExpressionUUID->"94536f76-3fd2-4bf6-b228-fa93ec9acae9"],
Cell[1296, 37, 437, 7, 35, "Text",ExpressionUUID->"b70c649b-a958-4202-9f22-238ea1f9c7d4"],
Cell[1736, 46, 1306, 20, 58, "Text",ExpressionUUID->"23daff6c-19fe-4986-bc44-208556a6dbb4"],
Cell[CellGroupData[{
Cell[3067, 70, 712, 11, 67, "Section",ExpressionUUID->"b49099be-a366-4fde-b014-2eb32872e588"],
Cell[3782, 83, 1481, 22, 81, "Text",ExpressionUUID->"3f00114e-937f-4cf7-b7e3-d1762a4d61f2"],
Cell[5266, 107, 1746, 53, 173, "Text",ExpressionUUID->"a2c8877c-7b2d-4a27-a374-7e892c368403"],
Cell[7015, 162, 411, 8, 72, "Code",ExpressionUUID->"ec90ff51-b3b5-4165-b284-b452ee5df5f1"],
Cell[7429, 172, 1058, 27, 148, "Code",ExpressionUUID->"1ebf8948-319e-41f8-984c-dfc824866d2e"],
Cell[8490, 201, 1185, 19, 35, "Text",ExpressionUUID->"6a7824ea-cf22-4233-89c0-1dceb723e5c0"],
Cell[CellGroupData[{
Cell[9700, 224, 2450, 53, 94, "Input",ExpressionUUID->"8e35565b-2592-45f5-8649-76b182eab020"],
Cell[12153, 279, 348, 5, 34, "Output",ExpressionUUID->"68fe8485-bc05-45d9-96e9-2f7215adc573"]
}, Open  ]],
Cell[12516, 287, 1573, 24, 58, "Text",ExpressionUUID->"996da0f6-1bcf-4737-9dff-2e2a937463c5"],
Cell[14092, 313, 2262, 45, 127, "Text",ExpressionUUID->"73df6d32-26cf-4b87-ab29-a3a01bc3ff5b"],
Cell[16357, 360, 2263, 52, 110, "Code",ExpressionUUID->"36ed3164-4511-4267-af9a-401e89d87dec"],
Cell[CellGroupData[{
Cell[18645, 416, 2170, 49, 94, "Input",ExpressionUUID->"ae23dd54-456c-469c-8019-5896bad3c888"],
Cell[20818, 467, 8745, 165, 299, "Output",ExpressionUUID->"af3e9fe2-3e12-4d5a-b230-eaa18a37bc6f"]
}, Open  ]],
Cell[29578, 635, 1328, 21, 58, "Text",ExpressionUUID->"375484a4-5a91-4c3b-9339-42372ea042c5"],
Cell[30909, 658, 1592, 24, 58, "Text",ExpressionUUID->"5d1f44d9-839a-4dca-9672-52d748569a1d"],
Cell[32504, 684, 1971, 37, 173, "Text",ExpressionUUID->"a801ad1f-6ff8-4722-a68a-1c9f945f2764"],
Cell[34478, 723, 444, 10, 52, "Code",ExpressionUUID->"4ae68435-51f7-400b-8184-fd9e6c3a8459"],
Cell[34925, 735, 823, 22, 129, "Code",ExpressionUUID->"ed033309-5d85-4813-9895-ba1760d8bfd3"],
Cell[35751, 759, 2939, 71, 224, "Code",ExpressionUUID->"fcb59257-154a-4aa1-986b-be7dfef2c362"],
Cell[CellGroupData[{
Cell[38715, 834, 357, 8, 30, "Input",ExpressionUUID->"48811983-6035-4691-a3f1-d9b6e8951153"],
Cell[39075, 844, 8832, 180, 449, "Output",ExpressionUUID->"f106e9ee-8e48-40ef-a9c5-fade122dc0db"]
}, Open  ]],
Cell[47922, 1027, 1555, 24, 58, "Text",ExpressionUUID->"3159de7b-45ed-4cd2-89ea-2d7484bd465d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49514, 1056, 790, 12, 67, "Section",ExpressionUUID->"40eb5353-3697-4650-9c97-38c6a9712c4c"],
Cell[50307, 1070, 2206, 32, 127, "Text",ExpressionUUID->"f47315fb-6e5d-47af-988f-c42b042ce630"],
Cell[52516, 1104, 1040, 27, 81, "Text",ExpressionUUID->"42027586-2542-4d1f-8a19-76e0f0e2d4a9"],
Cell[53559, 1133, 1412, 37, 173, "Text",ExpressionUUID->"82d9d3c0-8353-4613-9528-73588c12f09a"],
Cell[54974, 1172, 940, 24, 129, "Code",ExpressionUUID->"40e2830c-f2be-4ab2-8600-ac8700c26637"],
Cell[55917, 1198, 1345, 35, 148, "Code",ExpressionUUID->"3b72b55a-752d-496c-9680-388ba7cb2045"],
Cell[57265, 1235, 1324, 34, 167, "Code",ExpressionUUID->"7094da66-edb8-44b2-bbad-9dcd56752430"],
Cell[58592, 1271, 2141, 55, 243, "Code",ExpressionUUID->"a0ae6461-c5d0-48d7-8852-24e932df858f"],
Cell[60736, 1328, 430, 8, 35, "Text",ExpressionUUID->"da38cea0-812c-4ae0-ad7c-331cb50a350a"],
Cell[CellGroupData[{
Cell[61191, 1340, 756, 17, 30, "Input",ExpressionUUID->"4f9f4b83-2fca-4e66-b49b-4ab6b6f3025c"],
Cell[61950, 1359, 180223, 3239, 525, "Output",ExpressionUUID->"e6a7bf16-6c95-4b50-8148-4fdf253cf35e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[242222, 4604, 809, 12, 67, "Section",ExpressionUUID->"6546414a-3e9f-420a-b124-7c862b2daa92"],
Cell[243034, 4618, 2036, 30, 81, "Text",ExpressionUUID->"98a3d490-da6c-437f-994c-37456e70b5de"],
Cell[245073, 4650, 3775, 81, 173, "Text",ExpressionUUID->"0ad19078-98bb-448f-9cf2-159eddddd01e"],
Cell[248851, 4733, 939, 26, 129, "Code",ExpressionUUID->"f01c6582-3435-4013-b30c-b8a5f0c87059"],
Cell[249793, 4761, 1859, 44, 205, "Code",ExpressionUUID->"54fbc894-7033-4a57-a320-8755b56f3fb3"],
Cell[251655, 4807, 1370, 33, 167, "Code",ExpressionUUID->"68769efd-464f-4d7f-afed-0305e3d44130"],
Cell[253028, 4842, 1990, 44, 148, "Code",ExpressionUUID->"10e36ae1-b155-4f2b-ae6b-2f130d8935e7"],
Cell[255021, 4888, 1942, 29, 58, "Text",ExpressionUUID->"1b316858-98de-4dbf-99b5-953cfb80717f"],
Cell[CellGroupData[{
Cell[256988, 4921, 437, 9, 52, "Input",ExpressionUUID->"2ecce3f0-d148-458d-94c9-83316be56d46"],
Cell[257428, 4932, 79312, 1308, 505, "Output",ExpressionUUID->"43d3642a-2007-47b1-8ea7-0fa26d476e04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336777, 6245, 208, 3, 30, "Input",ExpressionUUID->"29371861-dcf1-4425-81a7-7652da1e46d7"],
Cell[336988, 6250, 69241, 1278, 383, "Output",ExpressionUUID->"736de610-5a46-4cda-b544-c1d537e0f74c"]
}, Open  ]],
Cell[406244, 7531, 1794, 26, 35, "Text",ExpressionUUID->"a703ba13-887d-429a-927a-173dbd20a3a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408075, 7562, 816, 12, 67, "Section",ExpressionUUID->"75fa4bfb-9b34-487b-b050-b1aee34505e5"],
Cell[408894, 7576, 2100, 43, 104, "Text",ExpressionUUID->"db5f61a4-b6c4-4855-9a4d-4bfca574e3da"],
Cell[410997, 7621, 1147, 29, 167, "Code",ExpressionUUID->"4766af39-e26e-4696-8649-cd3372e43ee7"],
Cell[412147, 7652, 422, 10, 52, "Code",ExpressionUUID->"7100e181-ce6f-4604-b725-2a4095357ad5"],
Cell[412572, 7664, 643, 16, 72, "Code",ExpressionUUID->"7cc2b2be-af35-47d4-b9e2-cef379a3b4e8"],
Cell[413218, 7682, 462, 10, 72, "Code",ExpressionUUID->"e3a317be-8b13-4536-bd09-14dfdbbea7f1"],
Cell[413683, 7694, 1641, 29, 58, "Text",ExpressionUUID->"81f551a8-0252-4bba-bb70-70bd467a994a"],
Cell[415327, 7725, 2158, 53, 281, "Code",ExpressionUUID->"bb076a98-2802-4aa8-a156-c11359351aef"],
Cell[417488, 7780, 381, 8, 72, "Code",ExpressionUUID->"12cb881d-2d37-4ed8-8268-cb3baf825524"],
Cell[417872, 7790, 434, 12, 72, "Code",ExpressionUUID->"05565033-d64c-4d1c-b3f2-4e02ff2c560f"],
Cell[418309, 7804, 1872, 49, 167, "Code",ExpressionUUID->"5874dcdd-3b71-4e69-af45-9b47d4c316c7"],
Cell[420184, 7855, 1338, 31, 167, "Code",ExpressionUUID->"e66ab582-81dc-431d-9ecc-ba05abcbf1bb"],
Cell[421525, 7888, 1426, 37, 186, "Code",ExpressionUUID->"f3aab129-0579-476f-baaa-ecc28462c086"],
Cell[422954, 7927, 1213, 28, 110, "Code",ExpressionUUID->"e6e6ee49-501b-4fc5-842b-e72091247f20"],
Cell[424170, 7957, 1827, 27, 35, "Text",ExpressionUUID->"119293fa-c0bd-42a0-83e5-9e0335957ed3"],
Cell[CellGroupData[{
Cell[426022, 7988, 387, 8, 52, "Input",ExpressionUUID->"37c0e1ee-0362-4af7-a501-dddadba982ba"],
Cell[426412, 7998, 56092, 926, 388, "Output",ExpressionUUID->"db0a6cb9-6c1d-47d9-b301-ca114a8c39a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482541, 8929, 212, 3, 30, "Input",ExpressionUUID->"4a7904a0-c38c-4efe-bd35-b914aa0f4207"],
Cell[482756, 8934, 19526, 401, 525, "Output",ExpressionUUID->"2e52111e-2f30-4b0c-982e-3abf4f5f7566"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502331, 9341, 764, 12, 67, "Section",ExpressionUUID->"11996809-1268-4c70-9c36-fd8f73be6e29"],
Cell[503098, 9355, 1963, 29, 127, "Text",ExpressionUUID->"fe8170dc-c96c-47bd-b6f2-f17aa1fcc2ab"],
Cell[505064, 9386, 2099, 50, 205, "Code",ExpressionUUID->"5e0ef88f-39eb-48e1-81e6-307654c1c0ab"],
Cell[507166, 9438, 420, 10, 72, "Code",ExpressionUUID->"90ccf078-bac5-4447-8fa1-5c1c7e44382a"],
Cell[507589, 9450, 1405, 32, 148, "Code",ExpressionUUID->"6c7f126a-51cb-4c5b-a708-f414a3c67a29"],
Cell[508997, 9484, 2050, 33, 150, "Text",ExpressionUUID->"5377c0c2-69a0-473a-8a7c-2596ec5ee05f"],
Cell[511050, 9519, 1624, 44, 167, "Code",ExpressionUUID->"128d777a-30b7-4ae6-9af4-6114820c30ae"],
Cell[512677, 9565, 1234, 37, 91, "Code",ExpressionUUID->"6cf90949-4c85-4b3b-ac86-54a2386bba2d"],
Cell[513914, 9604, 1366, 34, 186, "Code",ExpressionUUID->"ff1da720-879b-4c9e-9215-e33f57953ad1"],
Cell[515283, 9640, 1419, 22, 35, "Text",ExpressionUUID->"91b558ec-76eb-47b3-9797-48fee71dc41e"],
Cell[CellGroupData[{
Cell[516727, 9666, 442, 10, 52, "Input",ExpressionUUID->"1bba5edc-c5a4-42c2-89ac-4bec0044b712"],
Cell[517172, 9678, 86220, 1421, 590, "Output",ExpressionUUID->"27b92ae4-f7a6-4820-a407-377c123c967e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603429, 11104, 216, 4, 30, "Input",ExpressionUUID->"b7fec52c-32b0-46f7-b13d-2181c1afa83a"],
Cell[603648, 11110, 3696, 72, 296, "Output",ExpressionUUID->"bf56fd9e-7926-4061-90e9-eff31fb8a113"]
}, Open  ]],
Cell[607359, 11185, 1834, 27, 81, "Text",ExpressionUUID->"c7df0fe5-bb17-4843-8414-3f4fb5769715"],
Cell[CellGroupData[{
Cell[609218, 11216, 150, 3, 30, "Input",ExpressionUUID->"e7ada871-bbc0-4614-ba45-f608f671cb76"],
Cell[609371, 11221, 4739, 96, 69, "Output",ExpressionUUID->"7d798c55-a5f9-4787-bb69-c9bbe79b4491"]
}, Open  ]],
Cell[614125, 11320, 1868, 27, 58, "Text",ExpressionUUID->"e1bcc965-ffb4-47f7-bd61-1aeb9c53b6c0"],
Cell[615996, 11349, 2075, 30, 81, "Text",ExpressionUUID->"8fa3f569-aca2-48ee-a506-5252ee20ea25"],
Cell[CellGroupData[{
Cell[618096, 11383, 1272, 30, 73, "Input",ExpressionUUID->"7bbcc280-f96c-4873-b170-0f1802eee880"],
Cell[619371, 11415, 4572, 118, 166, "Output",ExpressionUUID->"96d6ca21-4d67-4f93-b183-8752161fdaf3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[623992, 11539, 829, 12, 53, "Section",ExpressionUUID->"279dc39f-7aa9-42ff-b33e-9b7037ca48c0"],
Cell[624824, 11553, 1883, 28, 127, "Text",ExpressionUUID->"39481659-13e6-4eaf-807b-cded3f9a5c68"],
Cell[626710, 11583, 908, 26, 81, "Text",ExpressionUUID->"c05f5f9d-9536-43d2-a0ac-c834a28b5b58"],
Cell[627621, 11611, 1288, 31, 186, "Code",ExpressionUUID->"4a8d687b-4ebd-4972-b12f-ee4056af7447"],
Cell[CellGroupData[{
Cell[628934, 11646, 375, 8, 30, "Input",ExpressionUUID->"630e1d64-dcde-4cdf-93b1-bdd632dc6276"],
Cell[629312, 11656, 178, 2, 34, "Output",ExpressionUUID->"2c80373a-e2aa-456a-8b6f-340516da43e3"]
}, Open  ]],
Cell[629505, 11661, 2089, 32, 81, "Text",ExpressionUUID->"5fe5c16d-a8da-4258-9f77-96af2198a094"],
Cell[CellGroupData[{
Cell[631619, 11697, 2185, 49, 94, "Input",ExpressionUUID->"ef160bd1-5d06-4085-8f89-8310f811f356"],
Cell[633807, 11748, 87237, 1648, 203, "Output",ExpressionUUID->"7f9ef9dc-2713-492c-80f5-c94855ec71aa"]
}, Open  ]],
Cell[721059, 13399, 255, 6, 35, "Text",ExpressionUUID->"fee6934f-7e44-4c67-9dd2-57a4fe2c93ff"],
Cell[721317, 13407, 884, 30, 81, "Text",ExpressionUUID->"dd007e70-a51c-433f-8b59-ec99aa88e44d"],
Cell[722204, 13439, 1689, 40, 186, "Code",ExpressionUUID->"0188ebb6-346d-4c1a-ab09-af181336dd7c"],
Cell[723896, 13481, 308, 7, 35, "Text",ExpressionUUID->"cd666199-d28b-4f06-90a0-3320ea4fc116"],
Cell[CellGroupData[{
Cell[724229, 13492, 404, 9, 30, "Input",ExpressionUUID->"5a7c3ab5-156d-415f-85af-76e49d8162b8"],
Cell[724636, 13503, 277, 4, 34, "Output",ExpressionUUID->"09ea3935-f2a2-46fe-a3d0-131128a2c025"]
}, Open  ]],
Cell[724928, 13510, 1791, 26, 58, "Text",ExpressionUUID->"e2cdc31a-3bde-4973-b5db-56f214baa4d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726756, 13541, 171, 3, 67, "Section",ExpressionUUID->"18dcb542-9409-4501-b6e2-e99638397d61"],
Cell[726930, 13546, 356, 6, 35, "Text",ExpressionUUID->"cb6c2c71-7797-49cd-9b83-7a7c31b5969c"],
Cell[727289, 13554, 129, 3, 30, "Input",ExpressionUUID->"83cee6b6-8550-4a52-bfc4-4945c89d24a9"]
}, Open  ]]
}, Open  ]]
}
]
*)

